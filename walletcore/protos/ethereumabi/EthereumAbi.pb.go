// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: EthereumAbi.proto

package ethereumabi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AbiError int32

const (
	// This is the OK case, with value=0
	AbiError_OK AbiError = 0
	// Internal error.
	AbiError_Error_internal AbiError = 1
	// Unexpected function signature or ABI mismatch.
	AbiError_Error_abi_mismatch AbiError = 2
	// Invalid ABI.
	AbiError_Error_invalid_abi AbiError = 3
	// Invalid parameter type.
	AbiError_Error_invalid_param_type AbiError = 4
	// Invalid address value.
	AbiError_Error_invalid_address_value AbiError = 5
	// Invalid UInt value.
	AbiError_Error_invalid_uint_value AbiError = 6
	// Missing parameter type.
	AbiError_Error_missing_param_type AbiError = 7
	// Missing parameter value.
	AbiError_Error_missing_param_value AbiError = 8
	// Invalid encoded data.
	AbiError_Error_decoding_data AbiError = 9
	// Invalid empty type.
	// For example, bytes0, address[0].
	AbiError_Error_empty_type AbiError = 10
)

// Enum value maps for AbiError.
var (
	AbiError_name = map[int32]string{
		0:  "OK",
		1:  "Error_internal",
		2:  "Error_abi_mismatch",
		3:  "Error_invalid_abi",
		4:  "Error_invalid_param_type",
		5:  "Error_invalid_address_value",
		6:  "Error_invalid_uint_value",
		7:  "Error_missing_param_type",
		8:  "Error_missing_param_value",
		9:  "Error_decoding_data",
		10: "Error_empty_type",
	}
	AbiError_value = map[string]int32{
		"OK":                          0,
		"Error_internal":              1,
		"Error_abi_mismatch":          2,
		"Error_invalid_abi":           3,
		"Error_invalid_param_type":    4,
		"Error_invalid_address_value": 5,
		"Error_invalid_uint_value":    6,
		"Error_missing_param_type":    7,
		"Error_missing_param_value":   8,
		"Error_decoding_data":         9,
		"Error_empty_type":            10,
	}
)

func (x AbiError) Enum() *AbiError {
	p := new(AbiError)
	*p = x
	return p
}

func (x AbiError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AbiError) Descriptor() protoreflect.EnumDescriptor {
	return file_EthereumAbi_proto_enumTypes[0].Descriptor()
}

func (AbiError) Type() protoreflect.EnumType {
	return &file_EthereumAbi_proto_enumTypes[0]
}

func (x AbiError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AbiError.Descriptor instead.
func (AbiError) EnumDescriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{0}
}

// Indicates a boolean type.
type BoolType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BoolType) Reset() {
	*x = BoolType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolType) ProtoMessage() {}

func (x *BoolType) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolType.ProtoReflect.Descriptor instead.
func (*BoolType) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{0}
}

// Generic number type for all bit sizes, like UInt24, 40, 48, ... 248.
type NumberNType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of bits of an integer.
	Bits uint32 `protobuf:"varint,1,opt,name=bits,proto3" json:"bits,omitempty"`
}

func (x *NumberNType) Reset() {
	*x = NumberNType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberNType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberNType) ProtoMessage() {}

func (x *NumberNType) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberNType.ProtoReflect.Descriptor instead.
func (*NumberNType) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{1}
}

func (x *NumberNType) GetBits() uint32 {
	if x != nil {
		return x.Bits
	}
	return 0
}

// Indicates a string type.
type StringType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StringType) Reset() {
	*x = StringType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringType) ProtoMessage() {}

func (x *StringType) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringType.ProtoReflect.Descriptor instead.
func (*StringType) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{2}
}

// Indicates an address type.
type AddressType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddressType) Reset() {
	*x = AddressType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressType) ProtoMessage() {}

func (x *AddressType) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressType.ProtoReflect.Descriptor instead.
func (*AddressType) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{3}
}

// Indicates an array type with an inner `element_type`.
type ArrayType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of array elements.
	ElementType *ParamType `protobuf:"bytes,1,opt,name=element_type,json=elementType,proto3" json:"element_type,omitempty"`
}

func (x *ArrayType) Reset() {
	*x = ArrayType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayType) ProtoMessage() {}

func (x *ArrayType) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayType.ProtoReflect.Descriptor instead.
func (*ArrayType) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{4}
}

func (x *ArrayType) GetElementType() *ParamType {
	if x != nil {
		return x.ElementType
	}
	return nil
}

// Indicates a fixed-size array type with an inner `element_type`.
type FixedArrayType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The fixed-size of the array.
	Size uint64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// The type of array elements.
	ElementType *ParamType `protobuf:"bytes,2,opt,name=element_type,json=elementType,proto3" json:"element_type,omitempty"`
}

func (x *FixedArrayType) Reset() {
	*x = FixedArrayType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixedArrayType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixedArrayType) ProtoMessage() {}

func (x *FixedArrayType) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixedArrayType.ProtoReflect.Descriptor instead.
func (*FixedArrayType) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{5}
}

func (x *FixedArrayType) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FixedArrayType) GetElementType() *ParamType {
	if x != nil {
		return x.ElementType
	}
	return nil
}

// Indicates a byte array type.
type ByteArrayType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ByteArrayType) Reset() {
	*x = ByteArrayType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByteArrayType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByteArrayType) ProtoMessage() {}

func (x *ByteArrayType) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByteArrayType.ProtoReflect.Descriptor instead.
func (*ByteArrayType) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{6}
}

// Indicates a fixed-size byte array type.
type ByteArrayFixType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The fixed-size of the array.
	Size uint64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ByteArrayFixType) Reset() {
	*x = ByteArrayFixType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByteArrayFixType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByteArrayFixType) ProtoMessage() {}

func (x *ByteArrayFixType) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByteArrayFixType.ProtoReflect.Descriptor instead.
func (*ByteArrayFixType) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{7}
}

func (x *ByteArrayFixType) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// Indicates a tuple with inner type parameters.
type TupleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Tuple named parameters.
	Params []*Param `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *TupleType) Reset() {
	*x = TupleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TupleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TupleType) ProtoMessage() {}

func (x *TupleType) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TupleType.ProtoReflect.Descriptor instead.
func (*TupleType) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{8}
}

func (x *TupleType) GetParams() []*Param {
	if x != nil {
		return x.Params
	}
	return nil
}

// Named parameter with type.
type Param struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the parameter.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Type of the parameter.
	Param *ParamType `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *Param) Reset() {
	*x = Param{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Param) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Param) ProtoMessage() {}

func (x *Param) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Param.ProtoReflect.Descriptor instead.
func (*Param) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{9}
}

func (x *Param) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Param) GetParam() *ParamType {
	if x != nil {
		return x.Param
	}
	return nil
}

type ParamType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Param:
	//
	//	*ParamType_Boolean
	//	*ParamType_NumberInt
	//	*ParamType_NumberUint
	//	*ParamType_StringParam
	//	*ParamType_Address
	//	*ParamType_ByteArray
	//	*ParamType_ByteArrayFix
	//	*ParamType_Array
	//	*ParamType_FixedArray
	//	*ParamType_Tuple
	Param isParamType_Param `protobuf_oneof:"param"`
}

func (x *ParamType) Reset() {
	*x = ParamType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamType) ProtoMessage() {}

func (x *ParamType) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamType.ProtoReflect.Descriptor instead.
func (*ParamType) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{10}
}

func (m *ParamType) GetParam() isParamType_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *ParamType) GetBoolean() *BoolType {
	if x, ok := x.GetParam().(*ParamType_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (x *ParamType) GetNumberInt() *NumberNType {
	if x, ok := x.GetParam().(*ParamType_NumberInt); ok {
		return x.NumberInt
	}
	return nil
}

func (x *ParamType) GetNumberUint() *NumberNType {
	if x, ok := x.GetParam().(*ParamType_NumberUint); ok {
		return x.NumberUint
	}
	return nil
}

func (x *ParamType) GetStringParam() *StringType {
	if x, ok := x.GetParam().(*ParamType_StringParam); ok {
		return x.StringParam
	}
	return nil
}

func (x *ParamType) GetAddress() *AddressType {
	if x, ok := x.GetParam().(*ParamType_Address); ok {
		return x.Address
	}
	return nil
}

func (x *ParamType) GetByteArray() *ByteArrayType {
	if x, ok := x.GetParam().(*ParamType_ByteArray); ok {
		return x.ByteArray
	}
	return nil
}

func (x *ParamType) GetByteArrayFix() *ByteArrayFixType {
	if x, ok := x.GetParam().(*ParamType_ByteArrayFix); ok {
		return x.ByteArrayFix
	}
	return nil
}

func (x *ParamType) GetArray() *ArrayType {
	if x, ok := x.GetParam().(*ParamType_Array); ok {
		return x.Array
	}
	return nil
}

func (x *ParamType) GetFixedArray() *FixedArrayType {
	if x, ok := x.GetParam().(*ParamType_FixedArray); ok {
		return x.FixedArray
	}
	return nil
}

func (x *ParamType) GetTuple() *TupleType {
	if x, ok := x.GetParam().(*ParamType_Tuple); ok {
		return x.Tuple
	}
	return nil
}

type isParamType_Param interface {
	isParamType_Param()
}

type ParamType_Boolean struct {
	Boolean *BoolType `protobuf:"bytes,1,opt,name=boolean,proto3,oneof"`
}

type ParamType_NumberInt struct {
	NumberInt *NumberNType `protobuf:"bytes,2,opt,name=number_int,json=numberInt,proto3,oneof"`
}

type ParamType_NumberUint struct {
	NumberUint *NumberNType `protobuf:"bytes,3,opt,name=number_uint,json=numberUint,proto3,oneof"`
}

type ParamType_StringParam struct {
	// Nested values. Gap in field numbering is intentional.
	StringParam *StringType `protobuf:"bytes,7,opt,name=string_param,json=stringParam,proto3,oneof"`
}

type ParamType_Address struct {
	Address *AddressType `protobuf:"bytes,8,opt,name=address,proto3,oneof"`
}

type ParamType_ByteArray struct {
	ByteArray *ByteArrayType `protobuf:"bytes,9,opt,name=byte_array,json=byteArray,proto3,oneof"`
}

type ParamType_ByteArrayFix struct {
	ByteArrayFix *ByteArrayFixType `protobuf:"bytes,10,opt,name=byte_array_fix,json=byteArrayFix,proto3,oneof"`
}

type ParamType_Array struct {
	// Nested values. Gap in field numbering is intentional.
	Array *ArrayType `protobuf:"bytes,14,opt,name=array,proto3,oneof"`
}

type ParamType_FixedArray struct {
	FixedArray *FixedArrayType `protobuf:"bytes,15,opt,name=fixed_array,json=fixedArray,proto3,oneof"`
}

type ParamType_Tuple struct {
	// Nested values. Gap in field numbering is intentional.
	Tuple *TupleType `protobuf:"bytes,19,opt,name=tuple,proto3,oneof"`
}

func (*ParamType_Boolean) isParamType_Param() {}

func (*ParamType_NumberInt) isParamType_Param() {}

func (*ParamType_NumberUint) isParamType_Param() {}

func (*ParamType_StringParam) isParamType_Param() {}

func (*ParamType_Address) isParamType_Param() {}

func (*ParamType_ByteArray) isParamType_Param() {}

func (*ParamType_ByteArrayFix) isParamType_Param() {}

func (*ParamType_Array) isParamType_Param() {}

func (*ParamType_FixedArray) isParamType_Param() {}

func (*ParamType_Tuple) isParamType_Param() {}

// Generic number parameter for all other bit sizes, like UInt24, 40, 48, ... 248.
type NumberNParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Count of bits of the number.
	// 0 < bits <= 256, bits % 8 == 0
	Bits uint32 `protobuf:"varint,1,opt,name=bits,proto3" json:"bits,omitempty"`
	// Serialized big endian.
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NumberNParam) Reset() {
	*x = NumberNParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberNParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberNParam) ProtoMessage() {}

func (x *NumberNParam) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberNParam.ProtoReflect.Descriptor instead.
func (*NumberNParam) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{11}
}

func (x *NumberNParam) GetBits() uint32 {
	if x != nil {
		return x.Bits
	}
	return 0
}

func (x *NumberNParam) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// A byte array of arbitrary size.
type ArrayParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of array elements.
	ElementType *ParamType `protobuf:"bytes,1,opt,name=element_type,json=elementType,proto3" json:"element_type,omitempty"`
	// Array elements.
	Elements []*Token `protobuf:"bytes,2,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *ArrayParam) Reset() {
	*x = ArrayParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayParam) ProtoMessage() {}

func (x *ArrayParam) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayParam.ProtoReflect.Descriptor instead.
func (*ArrayParam) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{12}
}

func (x *ArrayParam) GetElementType() *ParamType {
	if x != nil {
		return x.ElementType
	}
	return nil
}

func (x *ArrayParam) GetElements() []*Token {
	if x != nil {
		return x.Elements
	}
	return nil
}

// A tuple with various parameters similar to a structure.
type TupleParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Tokens (values) of the tuple parameters.
	Params []*Token `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *TupleParam) Reset() {
	*x = TupleParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TupleParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TupleParam) ProtoMessage() {}

func (x *TupleParam) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TupleParam.ProtoReflect.Descriptor instead.
func (*TupleParam) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{13}
}

func (x *TupleParam) GetParams() []*Token {
	if x != nil {
		return x.Params
	}
	return nil
}

// A value of an ABI parameter.
type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. Name of a corresponding parameter.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Token:
	//
	//	*Token_Boolean
	//	*Token_NumberInt
	//	*Token_NumberUint
	//	*Token_StringValue
	//	*Token_Address
	//	*Token_ByteArray
	//	*Token_ByteArrayFix
	//	*Token_Array
	//	*Token_FixedArray
	//	*Token_Tuple
	Token isToken_Token `protobuf_oneof:"token"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{14}
}

func (x *Token) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Token) GetToken() isToken_Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (x *Token) GetBoolean() bool {
	if x, ok := x.GetToken().(*Token_Boolean); ok {
		return x.Boolean
	}
	return false
}

func (x *Token) GetNumberInt() *NumberNParam {
	if x, ok := x.GetToken().(*Token_NumberInt); ok {
		return x.NumberInt
	}
	return nil
}

func (x *Token) GetNumberUint() *NumberNParam {
	if x, ok := x.GetToken().(*Token_NumberUint); ok {
		return x.NumberUint
	}
	return nil
}

func (x *Token) GetStringValue() string {
	if x, ok := x.GetToken().(*Token_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *Token) GetAddress() string {
	if x, ok := x.GetToken().(*Token_Address); ok {
		return x.Address
	}
	return ""
}

func (x *Token) GetByteArray() []byte {
	if x, ok := x.GetToken().(*Token_ByteArray); ok {
		return x.ByteArray
	}
	return nil
}

func (x *Token) GetByteArrayFix() []byte {
	if x, ok := x.GetToken().(*Token_ByteArrayFix); ok {
		return x.ByteArrayFix
	}
	return nil
}

func (x *Token) GetArray() *ArrayParam {
	if x, ok := x.GetToken().(*Token_Array); ok {
		return x.Array
	}
	return nil
}

func (x *Token) GetFixedArray() *ArrayParam {
	if x, ok := x.GetToken().(*Token_FixedArray); ok {
		return x.FixedArray
	}
	return nil
}

func (x *Token) GetTuple() *TupleParam {
	if x, ok := x.GetToken().(*Token_Tuple); ok {
		return x.Tuple
	}
	return nil
}

type isToken_Token interface {
	isToken_Token()
}

type Token_Boolean struct {
	// Integer values.
	Boolean bool `protobuf:"varint,2,opt,name=boolean,proto3,oneof"`
}

type Token_NumberInt struct {
	NumberInt *NumberNParam `protobuf:"bytes,3,opt,name=number_int,json=numberInt,proto3,oneof"`
}

type Token_NumberUint struct {
	NumberUint *NumberNParam `protobuf:"bytes,4,opt,name=number_uint,json=numberUint,proto3,oneof"`
}

type Token_StringValue struct {
	// Simple values. Gap in field numbering is intentional.
	StringValue string `protobuf:"bytes,7,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Token_Address struct {
	Address string `protobuf:"bytes,8,opt,name=address,proto3,oneof"`
}

type Token_ByteArray struct {
	ByteArray []byte `protobuf:"bytes,9,opt,name=byte_array,json=byteArray,proto3,oneof"`
}

type Token_ByteArrayFix struct {
	ByteArrayFix []byte `protobuf:"bytes,10,opt,name=byte_array_fix,json=byteArrayFix,proto3,oneof"`
}

type Token_Array struct {
	// Nested values. Gap in field numbering is intentional.
	Array *ArrayParam `protobuf:"bytes,14,opt,name=array,proto3,oneof"`
}

type Token_FixedArray struct {
	FixedArray *ArrayParam `protobuf:"bytes,15,opt,name=fixed_array,json=fixedArray,proto3,oneof"`
}

type Token_Tuple struct {
	// Nested values. Gap in field numbering is intentional.
	Tuple *TupleParam `protobuf:"bytes,19,opt,name=tuple,proto3,oneof"`
}

func (*Token_Boolean) isToken_Token() {}

func (*Token_NumberInt) isToken_Token() {}

func (*Token_NumberUint) isToken_Token() {}

func (*Token_StringValue) isToken_Token() {}

func (*Token_Address) isToken_Token() {}

func (*Token_ByteArray) isToken_Token() {}

func (*Token_ByteArrayFix) isToken_Token() {}

func (*Token_Array) isToken_Token() {}

func (*Token_FixedArray) isToken_Token() {}

func (*Token_Tuple) isToken_Token() {}

// Decode a contract call (function input) according to the given ABI json.
type ContractCallDecodingInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An encoded smart contract call with a prefixed function signature (4 bytes).
	Encoded []byte `protobuf:"bytes,1,opt,name=encoded,proto3" json:"encoded,omitempty"`
	// A smart contract ABI in JSON.
	// Each ABI function must be mapped to a short signature.
	// Expected to be a set of functions mapped to corresponding short signatures.
	// Example:
	// ```
	//
	//	{
	//	    "1896f70a": {
	//	        "name": "setResolver",
	//	        "inputs": [...],
	//	        ...
	//	    },
	//	    "ac9650d8": {
	//	        "name": "multicall",
	//	        "inputs": [...],
	//	        ...
	//	    }
	//	}
	//
	// ```
	SmartContractAbiJson string `protobuf:"bytes,2,opt,name=smart_contract_abi_json,json=smartContractAbiJson,proto3" json:"smart_contract_abi_json,omitempty"`
}

func (x *ContractCallDecodingInput) Reset() {
	*x = ContractCallDecodingInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractCallDecodingInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractCallDecodingInput) ProtoMessage() {}

func (x *ContractCallDecodingInput) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractCallDecodingInput.ProtoReflect.Descriptor instead.
func (*ContractCallDecodingInput) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{15}
}

func (x *ContractCallDecodingInput) GetEncoded() []byte {
	if x != nil {
		return x.Encoded
	}
	return nil
}

func (x *ContractCallDecodingInput) GetSmartContractAbiJson() string {
	if x != nil {
		return x.SmartContractAbiJson
	}
	return ""
}

type ContractCallDecodingOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Human readable json format, according to the input `ContractCallDecodingInput::smart_contract_abi_json`.
	DecodedJson string `protobuf:"bytes,1,opt,name=decoded_json,json=decodedJson,proto3" json:"decoded_json,omitempty"`
	// Decoded parameters.
	Tokens []*Token `protobuf:"bytes,2,rep,name=tokens,proto3" json:"tokens,omitempty"`
	// error code, 0 is ok, other codes will be treated as errors
	Error AbiError `protobuf:"varint,3,opt,name=error,proto3,enum=TW.EthereumAbi.Proto.AbiError" json:"error,omitempty"`
	// error code description
	ErrorMessage string `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *ContractCallDecodingOutput) Reset() {
	*x = ContractCallDecodingOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractCallDecodingOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractCallDecodingOutput) ProtoMessage() {}

func (x *ContractCallDecodingOutput) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractCallDecodingOutput.ProtoReflect.Descriptor instead.
func (*ContractCallDecodingOutput) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{16}
}

func (x *ContractCallDecodingOutput) GetDecodedJson() string {
	if x != nil {
		return x.DecodedJson
	}
	return ""
}

func (x *ContractCallDecodingOutput) GetTokens() []*Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *ContractCallDecodingOutput) GetError() AbiError {
	if x != nil {
		return x.Error
	}
	return AbiError_OK
}

func (x *ContractCallDecodingOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// A set of ABI type parameters.
type AbiParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ABI type parameters.
	Params []*Param `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *AbiParams) Reset() {
	*x = AbiParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbiParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbiParams) ProtoMessage() {}

func (x *AbiParams) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbiParams.ProtoReflect.Descriptor instead.
func (*AbiParams) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{17}
}

func (x *AbiParams) GetParams() []*Param {
	if x != nil {
		return x.Params
	}
	return nil
}

// Decode a function input or output data according to the given ABI json.
type ParamsDecodingInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An encoded ABI.
	Encoded []byte `protobuf:"bytes,1,opt,name=encoded,proto3" json:"encoded,omitempty"`
	// Types that are assignable to Abi:
	//
	//	*ParamsDecodingInput_AbiJson
	//	*ParamsDecodingInput_AbiParams
	Abi isParamsDecodingInput_Abi `protobuf_oneof:"abi"`
}

func (x *ParamsDecodingInput) Reset() {
	*x = ParamsDecodingInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamsDecodingInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamsDecodingInput) ProtoMessage() {}

func (x *ParamsDecodingInput) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamsDecodingInput.ProtoReflect.Descriptor instead.
func (*ParamsDecodingInput) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{18}
}

func (x *ParamsDecodingInput) GetEncoded() []byte {
	if x != nil {
		return x.Encoded
	}
	return nil
}

func (m *ParamsDecodingInput) GetAbi() isParamsDecodingInput_Abi {
	if m != nil {
		return m.Abi
	}
	return nil
}

func (x *ParamsDecodingInput) GetAbiJson() string {
	if x, ok := x.GetAbi().(*ParamsDecodingInput_AbiJson); ok {
		return x.AbiJson
	}
	return ""
}

func (x *ParamsDecodingInput) GetAbiParams() *AbiParams {
	if x, ok := x.GetAbi().(*ParamsDecodingInput_AbiParams); ok {
		return x.AbiParams
	}
	return nil
}

type isParamsDecodingInput_Abi interface {
	isParamsDecodingInput_Abi()
}

type ParamsDecodingInput_AbiJson struct {
	// A set of ABI parameters in JSON.
	// Expected to be a JSON array at the entry level.
	// Example:
	// ```
	// [
	//
	//	{
	//	    "name": "_to',
	//	    "type": "address"
	//	},
	//	{
	//	    "name": "_value",
	//	    "type": "uint256"
	//	}
	//
	// ]
	// ```
	AbiJson string `protobuf:"bytes,2,opt,name=abi_json,json=abiJson,proto3,oneof"`
}

type ParamsDecodingInput_AbiParams struct {
	// A set of ABI type parameters.
	AbiParams *AbiParams `protobuf:"bytes,3,opt,name=abi_params,json=abiParams,proto3,oneof"`
}

func (*ParamsDecodingInput_AbiJson) isParamsDecodingInput_Abi() {}

func (*ParamsDecodingInput_AbiParams) isParamsDecodingInput_Abi() {}

type ParamsDecodingOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Decoded parameters.
	Tokens []*Token `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	// error code, 0 is ok, other codes will be treated as errors
	Error AbiError `protobuf:"varint,2,opt,name=error,proto3,enum=TW.EthereumAbi.Proto.AbiError" json:"error,omitempty"`
	// error code description
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *ParamsDecodingOutput) Reset() {
	*x = ParamsDecodingOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamsDecodingOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamsDecodingOutput) ProtoMessage() {}

func (x *ParamsDecodingOutput) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamsDecodingOutput.ProtoReflect.Descriptor instead.
func (*ParamsDecodingOutput) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{19}
}

func (x *ParamsDecodingOutput) GetTokens() []*Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *ParamsDecodingOutput) GetError() AbiError {
	if x != nil {
		return x.Error
	}
	return AbiError_OK
}

func (x *ParamsDecodingOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Decode an Eth ABI value.
type ValueDecodingInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An encoded value to be decoded.
	Encoded []byte `protobuf:"bytes,1,opt,name=encoded,proto3" json:"encoded,omitempty"`
	// A type of the parameter.
	// Example: "bytes[32]".
	// Please note `tuple` is not supported.
	ParamType string `protobuf:"bytes,2,opt,name=param_type,json=paramType,proto3" json:"param_type,omitempty"`
}

func (x *ValueDecodingInput) Reset() {
	*x = ValueDecodingInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueDecodingInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueDecodingInput) ProtoMessage() {}

func (x *ValueDecodingInput) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueDecodingInput.ProtoReflect.Descriptor instead.
func (*ValueDecodingInput) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{20}
}

func (x *ValueDecodingInput) GetEncoded() []byte {
	if x != nil {
		return x.Encoded
	}
	return nil
}

func (x *ValueDecodingInput) GetParamType() string {
	if x != nil {
		return x.ParamType
	}
	return ""
}

type ValueDecodingOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Decoded parameter.
	Token *Token `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Decoded parameter as a string.
	ParamStr string `protobuf:"bytes,2,opt,name=param_str,json=paramStr,proto3" json:"param_str,omitempty"`
	// error code, 0 is ok, other codes will be treated as errors
	Error AbiError `protobuf:"varint,3,opt,name=error,proto3,enum=TW.EthereumAbi.Proto.AbiError" json:"error,omitempty"`
	// error code description
	ErrorMessage string `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *ValueDecodingOutput) Reset() {
	*x = ValueDecodingOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueDecodingOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueDecodingOutput) ProtoMessage() {}

func (x *ValueDecodingOutput) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueDecodingOutput.ProtoReflect.Descriptor instead.
func (*ValueDecodingOutput) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{21}
}

func (x *ValueDecodingOutput) GetToken() *Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ValueDecodingOutput) GetParamStr() string {
	if x != nil {
		return x.ParamStr
	}
	return ""
}

func (x *ValueDecodingOutput) GetError() AbiError {
	if x != nil {
		return x.Error
	}
	return AbiError_OK
}

func (x *ValueDecodingOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Encode a function call to Eth ABI binary.
type FunctionEncodingInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Function name.
	FunctionName string `protobuf:"bytes,1,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	// Parameters to be encoded.
	Tokens []*Token `protobuf:"bytes,2,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *FunctionEncodingInput) Reset() {
	*x = FunctionEncodingInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionEncodingInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionEncodingInput) ProtoMessage() {}

func (x *FunctionEncodingInput) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionEncodingInput.ProtoReflect.Descriptor instead.
func (*FunctionEncodingInput) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{22}
}

func (x *FunctionEncodingInput) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *FunctionEncodingInput) GetTokens() []*Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type FunctionEncodingOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The function type signature.
	// Example: "baz(int32,uint256)"
	FunctionType string `protobuf:"bytes,1,opt,name=function_type,json=functionType,proto3" json:"function_type,omitempty"`
	// An encoded smart contract call with a prefixed function signature (4 bytes).
	Encoded []byte `protobuf:"bytes,2,opt,name=encoded,proto3" json:"encoded,omitempty"`
	// error code, 0 is ok, other codes will be treated as errors
	Error AbiError `protobuf:"varint,3,opt,name=error,proto3,enum=TW.EthereumAbi.Proto.AbiError" json:"error,omitempty"`
	// error code description
	ErrorMessage string `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *FunctionEncodingOutput) Reset() {
	*x = FunctionEncodingOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionEncodingOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionEncodingOutput) ProtoMessage() {}

func (x *FunctionEncodingOutput) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionEncodingOutput.ProtoReflect.Descriptor instead.
func (*FunctionEncodingOutput) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{23}
}

func (x *FunctionEncodingOutput) GetFunctionType() string {
	if x != nil {
		return x.FunctionType
	}
	return ""
}

func (x *FunctionEncodingOutput) GetEncoded() []byte {
	if x != nil {
		return x.Encoded
	}
	return nil
}

func (x *FunctionEncodingOutput) GetError() AbiError {
	if x != nil {
		return x.Error
	}
	return AbiError_OK
}

func (x *FunctionEncodingOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Return the function type signature, of the form "baz(int32,uint256)".
type FunctionGetTypeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Function signature. Includes function inputs if they are.
	// Examples:
	// - `functionName()`
	// - `functionName()`
	// - `functionName(bool)`
	// - `functionName(uint256,bytes32)`
	FunctionName string `protobuf:"bytes,1,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	// A set of ABI type parameters.
	Inputs []*Param `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty"`
}

func (x *FunctionGetTypeInput) Reset() {
	*x = FunctionGetTypeInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EthereumAbi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionGetTypeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionGetTypeInput) ProtoMessage() {}

func (x *FunctionGetTypeInput) ProtoReflect() protoreflect.Message {
	mi := &file_EthereumAbi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionGetTypeInput.ProtoReflect.Descriptor instead.
func (*FunctionGetTypeInput) Descriptor() ([]byte, []int) {
	return file_EthereumAbi_proto_rawDescGZIP(), []int{24}
}

func (x *FunctionGetTypeInput) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *FunctionGetTypeInput) GetInputs() []*Param {
	if x != nil {
		return x.Inputs
	}
	return nil
}

var File_EthereumAbi_proto protoreflect.FileDescriptor

var file_EthereumAbi_proto_rawDesc = []byte{
	0x0a, 0x11, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0a, 0x0a, 0x08, 0x42, 0x6f, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x21, 0x0a, 0x0b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x62, 0x69, 0x74, 0x73, 0x22, 0x0c, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4f, 0x0a, 0x09, 0x41, 0x72, 0x72, 0x61, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74,
	0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x68, 0x0a, 0x0e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x42, 0x0a, 0x0c,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x0f, 0x0a, 0x0d, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x26, 0x0a, 0x10, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x46, 0x69,
	0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x40, 0x0a, 0x09, 0x54, 0x75, 0x70,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65,
	0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x52, 0x0a, 0x05, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22,
	0xb1, 0x05, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a,
	0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00,
	0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x42, 0x0a, 0x0a, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x00, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x12, 0x44, 0x0a,
	0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x55,
	0x69, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x57, 0x2e, 0x45,
	0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x3d, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x57,
	0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x62, 0x79, 0x74,
	0x65, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x00, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12,
	0x4e, 0x0a, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x66, 0x69,
	0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x46, 0x69, 0x78, 0x54, 0x79, 0x70, 0x65, 0x48,
	0x00, 0x52, 0x0c, 0x62, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x46, 0x69, 0x78, 0x12,
	0x37, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x48,
	0x00, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x12, 0x47, 0x0a, 0x0b, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x72, 0x61, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x12, 0x37, 0x0a, 0x05, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62,
	0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x00, 0x52, 0x05, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x22, 0x38, 0x0a, 0x0c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x62, 0x69, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x89, 0x01,
	0x0a, 0x0a, 0x41, 0x72, 0x72, 0x61, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x42, 0x0a, 0x0c,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x37, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x41, 0x0a, 0x0a, 0x54, 0x75, 0x70,
	0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x8f, 0x04, 0x0a,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x62, 0x6f,
	0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x62,
	0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x43, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x54, 0x57, 0x2e,
	0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00,
	0x52, 0x09, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0b, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62,
	0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x69,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x61, 0x72, 0x72, 0x61,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x61, 0x72, 0x72,
	0x61, 0x79, 0x5f, 0x66, 0x69, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0c,
	0x62, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x46, 0x69, 0x78, 0x12, 0x38, 0x0a, 0x05,
	0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x57,
	0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52,
	0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x12, 0x43, 0x0a, 0x0b, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f,
	0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x57,
	0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52,
	0x0a, 0x66, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x74,
	0x75, 0x70, 0x6c, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x57, 0x2e,
	0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x05,
	0x74, 0x75, 0x70, 0x6c, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6c,
	0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65,
	0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x62, 0x69, 0x5f, 0x6a, 0x73, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x62, 0x69, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0xcf, 0x01, 0x0a,
	0x1a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x63,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x33,
	0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x62, 0x69, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x40,
	0x0a, 0x09, 0x41, 0x62, 0x69, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x57,
	0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x22, 0x95, 0x01, 0x0a, 0x13, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x61, 0x62, 0x69, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x62, 0x69, 0x4a, 0x73, 0x6f, 0x6e, 0x12,
	0x40, 0x0a, 0x0a, 0x61, 0x62, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75,
	0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x62, 0x69, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x09, 0x61, 0x62, 0x69, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x42, 0x05, 0x0a, 0x03, 0x61, 0x62, 0x69, 0x22, 0xa6, 0x01, 0x0a, 0x14, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x33, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41,
	0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x62, 0x69,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x4d, 0x0a, 0x12, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xc0, 0x01, 0x0a, 0x13, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x53, 0x74, 0x72, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x62, 0x69, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x71, 0x0a, 0x15, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x33, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41,
	0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x16, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x12, 0x34, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x62, 0x69, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x70, 0x0a, 0x14, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x57, 0x2e, 0x45, 0x74,
	0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x62, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x2a, 0x9e, 0x02,
	0x0a, 0x08, 0x41, 0x62, 0x69, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x61, 0x62, 0x69, 0x5f, 0x6d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x10, 0x02, 0x12, 0x15,
	0x0a, 0x11, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f,
	0x61, 0x62, 0x69, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x10, 0x06, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x07,
	0x12, 0x1d, 0x0a, 0x19, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x10, 0x08, 0x12,
	0x17, 0x0a, 0x13, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x10, 0x09, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x0a, 0x42, 0x17,
	0x0a, 0x15, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6a, 0x6e,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_EthereumAbi_proto_rawDescOnce sync.Once
	file_EthereumAbi_proto_rawDescData = file_EthereumAbi_proto_rawDesc
)

func file_EthereumAbi_proto_rawDescGZIP() []byte {
	file_EthereumAbi_proto_rawDescOnce.Do(func() {
		file_EthereumAbi_proto_rawDescData = protoimpl.X.CompressGZIP(file_EthereumAbi_proto_rawDescData)
	})
	return file_EthereumAbi_proto_rawDescData
}

var file_EthereumAbi_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_EthereumAbi_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_EthereumAbi_proto_goTypes = []interface{}{
	(AbiError)(0),                      // 0: TW.EthereumAbi.Proto.AbiError
	(*BoolType)(nil),                   // 1: TW.EthereumAbi.Proto.BoolType
	(*NumberNType)(nil),                // 2: TW.EthereumAbi.Proto.NumberNType
	(*StringType)(nil),                 // 3: TW.EthereumAbi.Proto.StringType
	(*AddressType)(nil),                // 4: TW.EthereumAbi.Proto.AddressType
	(*ArrayType)(nil),                  // 5: TW.EthereumAbi.Proto.ArrayType
	(*FixedArrayType)(nil),             // 6: TW.EthereumAbi.Proto.FixedArrayType
	(*ByteArrayType)(nil),              // 7: TW.EthereumAbi.Proto.ByteArrayType
	(*ByteArrayFixType)(nil),           // 8: TW.EthereumAbi.Proto.ByteArrayFixType
	(*TupleType)(nil),                  // 9: TW.EthereumAbi.Proto.TupleType
	(*Param)(nil),                      // 10: TW.EthereumAbi.Proto.Param
	(*ParamType)(nil),                  // 11: TW.EthereumAbi.Proto.ParamType
	(*NumberNParam)(nil),               // 12: TW.EthereumAbi.Proto.NumberNParam
	(*ArrayParam)(nil),                 // 13: TW.EthereumAbi.Proto.ArrayParam
	(*TupleParam)(nil),                 // 14: TW.EthereumAbi.Proto.TupleParam
	(*Token)(nil),                      // 15: TW.EthereumAbi.Proto.Token
	(*ContractCallDecodingInput)(nil),  // 16: TW.EthereumAbi.Proto.ContractCallDecodingInput
	(*ContractCallDecodingOutput)(nil), // 17: TW.EthereumAbi.Proto.ContractCallDecodingOutput
	(*AbiParams)(nil),                  // 18: TW.EthereumAbi.Proto.AbiParams
	(*ParamsDecodingInput)(nil),        // 19: TW.EthereumAbi.Proto.ParamsDecodingInput
	(*ParamsDecodingOutput)(nil),       // 20: TW.EthereumAbi.Proto.ParamsDecodingOutput
	(*ValueDecodingInput)(nil),         // 21: TW.EthereumAbi.Proto.ValueDecodingInput
	(*ValueDecodingOutput)(nil),        // 22: TW.EthereumAbi.Proto.ValueDecodingOutput
	(*FunctionEncodingInput)(nil),      // 23: TW.EthereumAbi.Proto.FunctionEncodingInput
	(*FunctionEncodingOutput)(nil),     // 24: TW.EthereumAbi.Proto.FunctionEncodingOutput
	(*FunctionGetTypeInput)(nil),       // 25: TW.EthereumAbi.Proto.FunctionGetTypeInput
}
var file_EthereumAbi_proto_depIdxs = []int32{
	11, // 0: TW.EthereumAbi.Proto.ArrayType.element_type:type_name -> TW.EthereumAbi.Proto.ParamType
	11, // 1: TW.EthereumAbi.Proto.FixedArrayType.element_type:type_name -> TW.EthereumAbi.Proto.ParamType
	10, // 2: TW.EthereumAbi.Proto.TupleType.params:type_name -> TW.EthereumAbi.Proto.Param
	11, // 3: TW.EthereumAbi.Proto.Param.param:type_name -> TW.EthereumAbi.Proto.ParamType
	1,  // 4: TW.EthereumAbi.Proto.ParamType.boolean:type_name -> TW.EthereumAbi.Proto.BoolType
	2,  // 5: TW.EthereumAbi.Proto.ParamType.number_int:type_name -> TW.EthereumAbi.Proto.NumberNType
	2,  // 6: TW.EthereumAbi.Proto.ParamType.number_uint:type_name -> TW.EthereumAbi.Proto.NumberNType
	3,  // 7: TW.EthereumAbi.Proto.ParamType.string_param:type_name -> TW.EthereumAbi.Proto.StringType
	4,  // 8: TW.EthereumAbi.Proto.ParamType.address:type_name -> TW.EthereumAbi.Proto.AddressType
	7,  // 9: TW.EthereumAbi.Proto.ParamType.byte_array:type_name -> TW.EthereumAbi.Proto.ByteArrayType
	8,  // 10: TW.EthereumAbi.Proto.ParamType.byte_array_fix:type_name -> TW.EthereumAbi.Proto.ByteArrayFixType
	5,  // 11: TW.EthereumAbi.Proto.ParamType.array:type_name -> TW.EthereumAbi.Proto.ArrayType
	6,  // 12: TW.EthereumAbi.Proto.ParamType.fixed_array:type_name -> TW.EthereumAbi.Proto.FixedArrayType
	9,  // 13: TW.EthereumAbi.Proto.ParamType.tuple:type_name -> TW.EthereumAbi.Proto.TupleType
	11, // 14: TW.EthereumAbi.Proto.ArrayParam.element_type:type_name -> TW.EthereumAbi.Proto.ParamType
	15, // 15: TW.EthereumAbi.Proto.ArrayParam.elements:type_name -> TW.EthereumAbi.Proto.Token
	15, // 16: TW.EthereumAbi.Proto.TupleParam.params:type_name -> TW.EthereumAbi.Proto.Token
	12, // 17: TW.EthereumAbi.Proto.Token.number_int:type_name -> TW.EthereumAbi.Proto.NumberNParam
	12, // 18: TW.EthereumAbi.Proto.Token.number_uint:type_name -> TW.EthereumAbi.Proto.NumberNParam
	13, // 19: TW.EthereumAbi.Proto.Token.array:type_name -> TW.EthereumAbi.Proto.ArrayParam
	13, // 20: TW.EthereumAbi.Proto.Token.fixed_array:type_name -> TW.EthereumAbi.Proto.ArrayParam
	14, // 21: TW.EthereumAbi.Proto.Token.tuple:type_name -> TW.EthereumAbi.Proto.TupleParam
	15, // 22: TW.EthereumAbi.Proto.ContractCallDecodingOutput.tokens:type_name -> TW.EthereumAbi.Proto.Token
	0,  // 23: TW.EthereumAbi.Proto.ContractCallDecodingOutput.error:type_name -> TW.EthereumAbi.Proto.AbiError
	10, // 24: TW.EthereumAbi.Proto.AbiParams.params:type_name -> TW.EthereumAbi.Proto.Param
	18, // 25: TW.EthereumAbi.Proto.ParamsDecodingInput.abi_params:type_name -> TW.EthereumAbi.Proto.AbiParams
	15, // 26: TW.EthereumAbi.Proto.ParamsDecodingOutput.tokens:type_name -> TW.EthereumAbi.Proto.Token
	0,  // 27: TW.EthereumAbi.Proto.ParamsDecodingOutput.error:type_name -> TW.EthereumAbi.Proto.AbiError
	15, // 28: TW.EthereumAbi.Proto.ValueDecodingOutput.token:type_name -> TW.EthereumAbi.Proto.Token
	0,  // 29: TW.EthereumAbi.Proto.ValueDecodingOutput.error:type_name -> TW.EthereumAbi.Proto.AbiError
	15, // 30: TW.EthereumAbi.Proto.FunctionEncodingInput.tokens:type_name -> TW.EthereumAbi.Proto.Token
	0,  // 31: TW.EthereumAbi.Proto.FunctionEncodingOutput.error:type_name -> TW.EthereumAbi.Proto.AbiError
	10, // 32: TW.EthereumAbi.Proto.FunctionGetTypeInput.inputs:type_name -> TW.EthereumAbi.Proto.Param
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_EthereumAbi_proto_init() }
func file_EthereumAbi_proto_init() {
	if File_EthereumAbi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_EthereumAbi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberNType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixedArrayType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByteArrayType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByteArrayFixType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TupleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Param); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberNParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TupleParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractCallDecodingInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractCallDecodingOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbiParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamsDecodingInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamsDecodingOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueDecodingInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueDecodingOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionEncodingInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionEncodingOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_EthereumAbi_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionGetTypeInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_EthereumAbi_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*ParamType_Boolean)(nil),
		(*ParamType_NumberInt)(nil),
		(*ParamType_NumberUint)(nil),
		(*ParamType_StringParam)(nil),
		(*ParamType_Address)(nil),
		(*ParamType_ByteArray)(nil),
		(*ParamType_ByteArrayFix)(nil),
		(*ParamType_Array)(nil),
		(*ParamType_FixedArray)(nil),
		(*ParamType_Tuple)(nil),
	}
	file_EthereumAbi_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*Token_Boolean)(nil),
		(*Token_NumberInt)(nil),
		(*Token_NumberUint)(nil),
		(*Token_StringValue)(nil),
		(*Token_Address)(nil),
		(*Token_ByteArray)(nil),
		(*Token_ByteArrayFix)(nil),
		(*Token_Array)(nil),
		(*Token_FixedArray)(nil),
		(*Token_Tuple)(nil),
	}
	file_EthereumAbi_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*ParamsDecodingInput_AbiJson)(nil),
		(*ParamsDecodingInput_AbiParams)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_EthereumAbi_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_EthereumAbi_proto_goTypes,
		DependencyIndexes: file_EthereumAbi_proto_depIdxs,
		EnumInfos:         file_EthereumAbi_proto_enumTypes,
		MessageInfos:      file_EthereumAbi_proto_msgTypes,
	}.Build()
	File_EthereumAbi_proto = out.File
	file_EthereumAbi_proto_rawDesc = nil
	file_EthereumAbi_proto_goTypes = nil
	file_EthereumAbi_proto_depIdxs = nil
}
