// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: Cosmos.proto

package cosmos

import (
	common "github.com/vultisig/vultisigner/walletcore/protos/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Transaction broadcast mode
type BroadcastMode int32

const (
	BroadcastMode_BLOCK BroadcastMode = 0 // Wait for the tx to pass/fail CheckTx, DeliverTx, and be committed in a block
	BroadcastMode_SYNC  BroadcastMode = 1 // Wait for the tx to pass/fail CheckTx
	BroadcastMode_ASYNC BroadcastMode = 2 // Don't wait for pass/fail CheckTx; send and return tx immediately
)

// Enum value maps for BroadcastMode.
var (
	BroadcastMode_name = map[int32]string{
		0: "BLOCK",
		1: "SYNC",
		2: "ASYNC",
	}
	BroadcastMode_value = map[string]int32{
		"BLOCK": 0,
		"SYNC":  1,
		"ASYNC": 2,
	}
)

func (x BroadcastMode) Enum() *BroadcastMode {
	p := new(BroadcastMode)
	*p = x
	return p
}

func (x BroadcastMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BroadcastMode) Descriptor() protoreflect.EnumDescriptor {
	return file_Cosmos_proto_enumTypes[0].Descriptor()
}

func (BroadcastMode) Type() protoreflect.EnumType {
	return &file_Cosmos_proto_enumTypes[0]
}

func (x BroadcastMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BroadcastMode.Descriptor instead.
func (BroadcastMode) EnumDescriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{0}
}

// Options for transaction encoding: JSON (Amino, older) or Protobuf.
type SigningMode int32

const (
	SigningMode_JSON     SigningMode = 0 // JSON format, Pre-Stargate
	SigningMode_Protobuf SigningMode = 1 // Protobuf-serialized (binary), Stargate
)

// Enum value maps for SigningMode.
var (
	SigningMode_name = map[int32]string{
		0: "JSON",
		1: "Protobuf",
	}
	SigningMode_value = map[string]int32{
		"JSON":     0,
		"Protobuf": 1,
	}
)

func (x SigningMode) Enum() *SigningMode {
	p := new(SigningMode)
	*p = x
	return p
}

func (x SigningMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SigningMode) Descriptor() protoreflect.EnumDescriptor {
	return file_Cosmos_proto_enumTypes[1].Descriptor()
}

func (SigningMode) Type() protoreflect.EnumType {
	return &file_Cosmos_proto_enumTypes[1]
}

func (x SigningMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SigningMode.Descriptor instead.
func (SigningMode) EnumDescriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{1}
}

type TxHasher int32

const (
	// For Cosmos chain, `Sha256` is used by default.
	TxHasher_UseDefault TxHasher = 0
	TxHasher_Sha256     TxHasher = 1
	TxHasher_Keccak256  TxHasher = 2
)

// Enum value maps for TxHasher.
var (
	TxHasher_name = map[int32]string{
		0: "UseDefault",
		1: "Sha256",
		2: "Keccak256",
	}
	TxHasher_value = map[string]int32{
		"UseDefault": 0,
		"Sha256":     1,
		"Keccak256":  2,
	}
)

func (x TxHasher) Enum() *TxHasher {
	p := new(TxHasher)
	*p = x
	return p
}

func (x TxHasher) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxHasher) Descriptor() protoreflect.EnumDescriptor {
	return file_Cosmos_proto_enumTypes[2].Descriptor()
}

func (TxHasher) Type() protoreflect.EnumType {
	return &file_Cosmos_proto_enumTypes[2]
}

func (x TxHasher) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxHasher.Descriptor instead.
func (TxHasher) EnumDescriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{2}
}

type SignerPublicKeyType int32

const (
	// Default public key type.
	SignerPublicKeyType_Secp256k1 SignerPublicKeyType = 0
	// Mostly used in Cosmos chains with EVM support.
	SignerPublicKeyType_Secp256k1Extended SignerPublicKeyType = 1
)

// Enum value maps for SignerPublicKeyType.
var (
	SignerPublicKeyType_name = map[int32]string{
		0: "Secp256k1",
		1: "Secp256k1Extended",
	}
	SignerPublicKeyType_value = map[string]int32{
		"Secp256k1":         0,
		"Secp256k1Extended": 1,
	}
)

func (x SignerPublicKeyType) Enum() *SignerPublicKeyType {
	p := new(SignerPublicKeyType)
	*p = x
	return p
}

func (x SignerPublicKeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignerPublicKeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_Cosmos_proto_enumTypes[3].Descriptor()
}

func (SignerPublicKeyType) Type() protoreflect.EnumType {
	return &file_Cosmos_proto_enumTypes[3]
}

func (x SignerPublicKeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignerPublicKeyType.Descriptor instead.
func (SignerPublicKeyType) EnumDescriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{3}
}

// AuthorizationType defines the type of staking module authorization type
//
// Since: cosmos-sdk 0.43
type Message_AuthorizationType int32

const (
	// AUTHORIZATION_TYPE_UNSPECIFIED specifies an unknown authorization type
	Message_UNSPECIFIED Message_AuthorizationType = 0
	// AUTHORIZATION_TYPE_DELEGATE defines an authorization type for Msg/Delegate
	Message_DELEGATE Message_AuthorizationType = 1
	// AUTHORIZATION_TYPE_UNDELEGATE defines an authorization type for Msg/Undelegate
	Message_UNDELEGATE Message_AuthorizationType = 2
	// AUTHORIZATION_TYPE_REDELEGATE defines an authorization type for Msg/BeginRedelegate
	Message_REDELEGATE Message_AuthorizationType = 3
)

// Enum value maps for Message_AuthorizationType.
var (
	Message_AuthorizationType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "DELEGATE",
		2: "UNDELEGATE",
		3: "REDELEGATE",
	}
	Message_AuthorizationType_value = map[string]int32{
		"UNSPECIFIED": 0,
		"DELEGATE":    1,
		"UNDELEGATE":  2,
		"REDELEGATE":  3,
	}
)

func (x Message_AuthorizationType) Enum() *Message_AuthorizationType {
	p := new(Message_AuthorizationType)
	*p = x
	return p
}

func (x Message_AuthorizationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_AuthorizationType) Descriptor() protoreflect.EnumDescriptor {
	return file_Cosmos_proto_enumTypes[4].Descriptor()
}

func (Message_AuthorizationType) Type() protoreflect.EnumType {
	return &file_Cosmos_proto_enumTypes[4]
}

func (x Message_AuthorizationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_AuthorizationType.Descriptor instead.
func (Message_AuthorizationType) EnumDescriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 0}
}

// VoteOption enumerates the valid vote options for a given governance proposal.
type Message_VoteOption int32

const (
	// _UNSPECIFIED defines a no-op vote option.
	Message__UNSPECIFIED Message_VoteOption = 0
	// YES defines a yes vote option.
	Message_YES Message_VoteOption = 1
	// ABSTAIN defines an abstain vote option.
	Message_ABSTAIN Message_VoteOption = 2
	// NO defines a no vote option.
	Message_NO Message_VoteOption = 3
	// NO_WITH_VETO defines a no with veto vote option.
	Message_NO_WITH_VETO Message_VoteOption = 4
)

// Enum value maps for Message_VoteOption.
var (
	Message_VoteOption_name = map[int32]string{
		0: "_UNSPECIFIED",
		1: "YES",
		2: "ABSTAIN",
		3: "NO",
		4: "NO_WITH_VETO",
	}
	Message_VoteOption_value = map[string]int32{
		"_UNSPECIFIED": 0,
		"YES":          1,
		"ABSTAIN":      2,
		"NO":           3,
		"NO_WITH_VETO": 4,
	}
)

func (x Message_VoteOption) Enum() *Message_VoteOption {
	p := new(Message_VoteOption)
	*p = x
	return p
}

func (x Message_VoteOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_VoteOption) Descriptor() protoreflect.EnumDescriptor {
	return file_Cosmos_proto_enumTypes[5].Descriptor()
}

func (Message_VoteOption) Type() protoreflect.EnumType {
	return &file_Cosmos_proto_enumTypes[5]
}

func (x Message_VoteOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_VoteOption.Descriptor instead.
func (Message_VoteOption) EnumDescriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 1}
}

// A denomination and an amount
type Amount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the denomination
	Denom string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
	// amount, number as string
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Amount) Reset() {
	*x = Amount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Amount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Amount) ProtoMessage() {}

func (x *Amount) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Amount.ProtoReflect.Descriptor instead.
func (*Amount) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{0}
}

func (x *Amount) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *Amount) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

// Fee incl. gas
type Fee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Fee amount(s)
	Amounts []*Amount `protobuf:"bytes,1,rep,name=amounts,proto3" json:"amounts,omitempty"`
	// Gas price
	Gas uint64 `protobuf:"varint,2,opt,name=gas,proto3" json:"gas,omitempty"`
}

func (x *Fee) Reset() {
	*x = Fee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fee) ProtoMessage() {}

func (x *Fee) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fee.ProtoReflect.Descriptor instead.
func (*Fee) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{1}
}

func (x *Fee) GetAmounts() []*Amount {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *Fee) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

// Block height, a revision and block height tuple.
// A height can be compared against another Height for the purposes of updating and freezing clients
type Height struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the revision that the client is currently on
	RevisionNumber uint64 `protobuf:"varint,1,opt,name=revision_number,json=revisionNumber,proto3" json:"revision_number,omitempty"`
	// the height within the given revision
	RevisionHeight uint64 `protobuf:"varint,2,opt,name=revision_height,json=revisionHeight,proto3" json:"revision_height,omitempty"`
}

func (x *Height) Reset() {
	*x = Height{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Height) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Height) ProtoMessage() {}

func (x *Height) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Height.ProtoReflect.Descriptor instead.
func (*Height) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{2}
}

func (x *Height) GetRevisionNumber() uint64 {
	if x != nil {
		return x.RevisionNumber
	}
	return 0
}

func (x *Height) GetRevisionHeight() uint64 {
	if x != nil {
		return x.RevisionHeight
	}
	return 0
}

type THORChainAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain  string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Ticker string `protobuf:"bytes,3,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Synth  bool   `protobuf:"varint,4,opt,name=synth,proto3" json:"synth,omitempty"`
}

func (x *THORChainAsset) Reset() {
	*x = THORChainAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *THORChainAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*THORChainAsset) ProtoMessage() {}

func (x *THORChainAsset) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use THORChainAsset.ProtoReflect.Descriptor instead.
func (*THORChainAsset) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{3}
}

func (x *THORChainAsset) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *THORChainAsset) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *THORChainAsset) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *THORChainAsset) GetSynth() bool {
	if x != nil {
		return x.Synth
	}
	return false
}

type THORChainCoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset    *THORChainAsset `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Amount   string          `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Decimals int64           `protobuf:"varint,3,opt,name=decimals,proto3" json:"decimals,omitempty"`
}

func (x *THORChainCoin) Reset() {
	*x = THORChainCoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *THORChainCoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*THORChainCoin) ProtoMessage() {}

func (x *THORChainCoin) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use THORChainCoin.ProtoReflect.Descriptor instead.
func (*THORChainCoin) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{4}
}

func (x *THORChainCoin) GetAsset() *THORChainAsset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *THORChainCoin) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *THORChainCoin) GetDecimals() int64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

// A transaction payload message
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The payload message
	//
	// Types that are assignable to MessageOneof:
	//
	//	*Message_SendCoinsMessage
	//	*Message_TransferTokensMessage
	//	*Message_StakeMessage
	//	*Message_UnstakeMessage
	//	*Message_RestakeMessage
	//	*Message_WithdrawStakeRewardMessage
	//	*Message_RawJsonMessage
	//	*Message_WasmTerraExecuteContractTransferMessage
	//	*Message_WasmTerraExecuteContractSendMessage
	//	*Message_ThorchainSendMessage
	//	*Message_WasmTerraExecuteContractGeneric_
	//	*Message_WasmExecuteContractTransferMessage
	//	*Message_WasmExecuteContractSendMessage
	//	*Message_WasmExecuteContractGeneric_
	//	*Message_SignDirectMessage
	//	*Message_AuthGrant_
	//	*Message_AuthRevoke_
	//	*Message_SetWithdrawAddressMessage
	//	*Message_MsgVote_
	//	*Message_MsgStrideLiquidStakingStake_
	//	*Message_MsgStrideLiquidStakingRedeem_
	//	*Message_ThorchainDepositMessage
	MessageOneof isMessage_MessageOneof `protobuf_oneof:"message_oneof"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5}
}

func (m *Message) GetMessageOneof() isMessage_MessageOneof {
	if m != nil {
		return m.MessageOneof
	}
	return nil
}

func (x *Message) GetSendCoinsMessage() *Message_Send {
	if x, ok := x.GetMessageOneof().(*Message_SendCoinsMessage); ok {
		return x.SendCoinsMessage
	}
	return nil
}

func (x *Message) GetTransferTokensMessage() *Message_Transfer {
	if x, ok := x.GetMessageOneof().(*Message_TransferTokensMessage); ok {
		return x.TransferTokensMessage
	}
	return nil
}

func (x *Message) GetStakeMessage() *Message_Delegate {
	if x, ok := x.GetMessageOneof().(*Message_StakeMessage); ok {
		return x.StakeMessage
	}
	return nil
}

func (x *Message) GetUnstakeMessage() *Message_Undelegate {
	if x, ok := x.GetMessageOneof().(*Message_UnstakeMessage); ok {
		return x.UnstakeMessage
	}
	return nil
}

func (x *Message) GetRestakeMessage() *Message_BeginRedelegate {
	if x, ok := x.GetMessageOneof().(*Message_RestakeMessage); ok {
		return x.RestakeMessage
	}
	return nil
}

func (x *Message) GetWithdrawStakeRewardMessage() *Message_WithdrawDelegationReward {
	if x, ok := x.GetMessageOneof().(*Message_WithdrawStakeRewardMessage); ok {
		return x.WithdrawStakeRewardMessage
	}
	return nil
}

func (x *Message) GetRawJsonMessage() *Message_RawJSON {
	if x, ok := x.GetMessageOneof().(*Message_RawJsonMessage); ok {
		return x.RawJsonMessage
	}
	return nil
}

func (x *Message) GetWasmTerraExecuteContractTransferMessage() *Message_WasmTerraExecuteContractTransfer {
	if x, ok := x.GetMessageOneof().(*Message_WasmTerraExecuteContractTransferMessage); ok {
		return x.WasmTerraExecuteContractTransferMessage
	}
	return nil
}

func (x *Message) GetWasmTerraExecuteContractSendMessage() *Message_WasmTerraExecuteContractSend {
	if x, ok := x.GetMessageOneof().(*Message_WasmTerraExecuteContractSendMessage); ok {
		return x.WasmTerraExecuteContractSendMessage
	}
	return nil
}

func (x *Message) GetThorchainSendMessage() *Message_THORChainSend {
	if x, ok := x.GetMessageOneof().(*Message_ThorchainSendMessage); ok {
		return x.ThorchainSendMessage
	}
	return nil
}

func (x *Message) GetWasmTerraExecuteContractGeneric() *Message_WasmTerraExecuteContractGeneric {
	if x, ok := x.GetMessageOneof().(*Message_WasmTerraExecuteContractGeneric_); ok {
		return x.WasmTerraExecuteContractGeneric
	}
	return nil
}

func (x *Message) GetWasmExecuteContractTransferMessage() *Message_WasmExecuteContractTransfer {
	if x, ok := x.GetMessageOneof().(*Message_WasmExecuteContractTransferMessage); ok {
		return x.WasmExecuteContractTransferMessage
	}
	return nil
}

func (x *Message) GetWasmExecuteContractSendMessage() *Message_WasmExecuteContractSend {
	if x, ok := x.GetMessageOneof().(*Message_WasmExecuteContractSendMessage); ok {
		return x.WasmExecuteContractSendMessage
	}
	return nil
}

func (x *Message) GetWasmExecuteContractGeneric() *Message_WasmExecuteContractGeneric {
	if x, ok := x.GetMessageOneof().(*Message_WasmExecuteContractGeneric_); ok {
		return x.WasmExecuteContractGeneric
	}
	return nil
}

func (x *Message) GetSignDirectMessage() *Message_SignDirect {
	if x, ok := x.GetMessageOneof().(*Message_SignDirectMessage); ok {
		return x.SignDirectMessage
	}
	return nil
}

func (x *Message) GetAuthGrant() *Message_AuthGrant {
	if x, ok := x.GetMessageOneof().(*Message_AuthGrant_); ok {
		return x.AuthGrant
	}
	return nil
}

func (x *Message) GetAuthRevoke() *Message_AuthRevoke {
	if x, ok := x.GetMessageOneof().(*Message_AuthRevoke_); ok {
		return x.AuthRevoke
	}
	return nil
}

func (x *Message) GetSetWithdrawAddressMessage() *Message_SetWithdrawAddress {
	if x, ok := x.GetMessageOneof().(*Message_SetWithdrawAddressMessage); ok {
		return x.SetWithdrawAddressMessage
	}
	return nil
}

func (x *Message) GetMsgVote() *Message_MsgVote {
	if x, ok := x.GetMessageOneof().(*Message_MsgVote_); ok {
		return x.MsgVote
	}
	return nil
}

func (x *Message) GetMsgStrideLiquidStakingStake() *Message_MsgStrideLiquidStakingStake {
	if x, ok := x.GetMessageOneof().(*Message_MsgStrideLiquidStakingStake_); ok {
		return x.MsgStrideLiquidStakingStake
	}
	return nil
}

func (x *Message) GetMsgStrideLiquidStakingRedeem() *Message_MsgStrideLiquidStakingRedeem {
	if x, ok := x.GetMessageOneof().(*Message_MsgStrideLiquidStakingRedeem_); ok {
		return x.MsgStrideLiquidStakingRedeem
	}
	return nil
}

func (x *Message) GetThorchainDepositMessage() *Message_THORChainDeposit {
	if x, ok := x.GetMessageOneof().(*Message_ThorchainDepositMessage); ok {
		return x.ThorchainDepositMessage
	}
	return nil
}

type isMessage_MessageOneof interface {
	isMessage_MessageOneof()
}

type Message_SendCoinsMessage struct {
	SendCoinsMessage *Message_Send `protobuf:"bytes,1,opt,name=send_coins_message,json=sendCoinsMessage,proto3,oneof"`
}

type Message_TransferTokensMessage struct {
	TransferTokensMessage *Message_Transfer `protobuf:"bytes,2,opt,name=transfer_tokens_message,json=transferTokensMessage,proto3,oneof"`
}

type Message_StakeMessage struct {
	StakeMessage *Message_Delegate `protobuf:"bytes,3,opt,name=stake_message,json=stakeMessage,proto3,oneof"`
}

type Message_UnstakeMessage struct {
	UnstakeMessage *Message_Undelegate `protobuf:"bytes,4,opt,name=unstake_message,json=unstakeMessage,proto3,oneof"`
}

type Message_RestakeMessage struct {
	RestakeMessage *Message_BeginRedelegate `protobuf:"bytes,5,opt,name=restake_message,json=restakeMessage,proto3,oneof"`
}

type Message_WithdrawStakeRewardMessage struct {
	WithdrawStakeRewardMessage *Message_WithdrawDelegationReward `protobuf:"bytes,6,opt,name=withdraw_stake_reward_message,json=withdrawStakeRewardMessage,proto3,oneof"`
}

type Message_RawJsonMessage struct {
	RawJsonMessage *Message_RawJSON `protobuf:"bytes,7,opt,name=raw_json_message,json=rawJsonMessage,proto3,oneof"`
}

type Message_WasmTerraExecuteContractTransferMessage struct {
	WasmTerraExecuteContractTransferMessage *Message_WasmTerraExecuteContractTransfer `protobuf:"bytes,8,opt,name=wasm_terra_execute_contract_transfer_message,json=wasmTerraExecuteContractTransferMessage,proto3,oneof"`
}

type Message_WasmTerraExecuteContractSendMessage struct {
	WasmTerraExecuteContractSendMessage *Message_WasmTerraExecuteContractSend `protobuf:"bytes,9,opt,name=wasm_terra_execute_contract_send_message,json=wasmTerraExecuteContractSendMessage,proto3,oneof"`
}

type Message_ThorchainSendMessage struct {
	ThorchainSendMessage *Message_THORChainSend `protobuf:"bytes,10,opt,name=thorchain_send_message,json=thorchainSendMessage,proto3,oneof"`
}

type Message_WasmTerraExecuteContractGeneric_ struct {
	WasmTerraExecuteContractGeneric *Message_WasmTerraExecuteContractGeneric `protobuf:"bytes,12,opt,name=wasm_terra_execute_contract_generic,json=wasmTerraExecuteContractGeneric,proto3,oneof"`
}

type Message_WasmExecuteContractTransferMessage struct {
	WasmExecuteContractTransferMessage *Message_WasmExecuteContractTransfer `protobuf:"bytes,13,opt,name=wasm_execute_contract_transfer_message,json=wasmExecuteContractTransferMessage,proto3,oneof"`
}

type Message_WasmExecuteContractSendMessage struct {
	WasmExecuteContractSendMessage *Message_WasmExecuteContractSend `protobuf:"bytes,14,opt,name=wasm_execute_contract_send_message,json=wasmExecuteContractSendMessage,proto3,oneof"`
}

type Message_WasmExecuteContractGeneric_ struct {
	WasmExecuteContractGeneric *Message_WasmExecuteContractGeneric `protobuf:"bytes,15,opt,name=wasm_execute_contract_generic,json=wasmExecuteContractGeneric,proto3,oneof"`
}

type Message_SignDirectMessage struct {
	SignDirectMessage *Message_SignDirect `protobuf:"bytes,16,opt,name=sign_direct_message,json=signDirectMessage,proto3,oneof"`
}

type Message_AuthGrant_ struct {
	AuthGrant *Message_AuthGrant `protobuf:"bytes,17,opt,name=auth_grant,json=authGrant,proto3,oneof"`
}

type Message_AuthRevoke_ struct {
	AuthRevoke *Message_AuthRevoke `protobuf:"bytes,18,opt,name=auth_revoke,json=authRevoke,proto3,oneof"`
}

type Message_SetWithdrawAddressMessage struct {
	SetWithdrawAddressMessage *Message_SetWithdrawAddress `protobuf:"bytes,19,opt,name=set_withdraw_address_message,json=setWithdrawAddressMessage,proto3,oneof"`
}

type Message_MsgVote_ struct {
	MsgVote *Message_MsgVote `protobuf:"bytes,20,opt,name=msg_vote,json=msgVote,proto3,oneof"`
}

type Message_MsgStrideLiquidStakingStake_ struct {
	MsgStrideLiquidStakingStake *Message_MsgStrideLiquidStakingStake `protobuf:"bytes,21,opt,name=msg_stride_liquid_staking_stake,json=msgStrideLiquidStakingStake,proto3,oneof"`
}

type Message_MsgStrideLiquidStakingRedeem_ struct {
	MsgStrideLiquidStakingRedeem *Message_MsgStrideLiquidStakingRedeem `protobuf:"bytes,22,opt,name=msg_stride_liquid_staking_redeem,json=msgStrideLiquidStakingRedeem,proto3,oneof"`
}

type Message_ThorchainDepositMessage struct {
	ThorchainDepositMessage *Message_THORChainDeposit `protobuf:"bytes,23,opt,name=thorchain_deposit_message,json=thorchainDepositMessage,proto3,oneof"`
}

func (*Message_SendCoinsMessage) isMessage_MessageOneof() {}

func (*Message_TransferTokensMessage) isMessage_MessageOneof() {}

func (*Message_StakeMessage) isMessage_MessageOneof() {}

func (*Message_UnstakeMessage) isMessage_MessageOneof() {}

func (*Message_RestakeMessage) isMessage_MessageOneof() {}

func (*Message_WithdrawStakeRewardMessage) isMessage_MessageOneof() {}

func (*Message_RawJsonMessage) isMessage_MessageOneof() {}

func (*Message_WasmTerraExecuteContractTransferMessage) isMessage_MessageOneof() {}

func (*Message_WasmTerraExecuteContractSendMessage) isMessage_MessageOneof() {}

func (*Message_ThorchainSendMessage) isMessage_MessageOneof() {}

func (*Message_WasmTerraExecuteContractGeneric_) isMessage_MessageOneof() {}

func (*Message_WasmExecuteContractTransferMessage) isMessage_MessageOneof() {}

func (*Message_WasmExecuteContractSendMessage) isMessage_MessageOneof() {}

func (*Message_WasmExecuteContractGeneric_) isMessage_MessageOneof() {}

func (*Message_SignDirectMessage) isMessage_MessageOneof() {}

func (*Message_AuthGrant_) isMessage_MessageOneof() {}

func (*Message_AuthRevoke_) isMessage_MessageOneof() {}

func (*Message_SetWithdrawAddressMessage) isMessage_MessageOneof() {}

func (*Message_MsgVote_) isMessage_MessageOneof() {}

func (*Message_MsgStrideLiquidStakingStake_) isMessage_MessageOneof() {}

func (*Message_MsgStrideLiquidStakingRedeem_) isMessage_MessageOneof() {}

func (*Message_ThorchainDepositMessage) isMessage_MessageOneof() {}

// Custom Signer info required to sign a transaction and generate a broadcast JSON message.
type SignerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Public key type used to sign a transaction.
	// It can be different from the value from `registry.json`.
	PublicKeyType SignerPublicKeyType `protobuf:"varint,1,opt,name=public_key_type,json=publicKeyType,proto3,enum=TW.Cosmos.Proto.SignerPublicKeyType" json:"public_key_type,omitempty"`
	JsonType      string              `protobuf:"bytes,2,opt,name=json_type,json=jsonType,proto3" json:"json_type,omitempty"`
	ProtobufType  string              `protobuf:"bytes,3,opt,name=protobuf_type,json=protobufType,proto3" json:"protobuf_type,omitempty"`
}

func (x *SignerInfo) Reset() {
	*x = SignerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignerInfo) ProtoMessage() {}

func (x *SignerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignerInfo.ProtoReflect.Descriptor instead.
func (*SignerInfo) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{6}
}

func (x *SignerInfo) GetPublicKeyType() SignerPublicKeyType {
	if x != nil {
		return x.PublicKeyType
	}
	return SignerPublicKeyType_Secp256k1
}

func (x *SignerInfo) GetJsonType() string {
	if x != nil {
		return x.JsonType
	}
	return ""
}

func (x *SignerInfo) GetProtobufType() string {
	if x != nil {
		return x.ProtobufType
	}
	return ""
}

// Input data necessary to create a signed transaction.
type SigningInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specify if protobuf (a.k.a. Stargate) or earlier JSON serialization is used
	SigningMode SigningMode `protobuf:"varint,1,opt,name=signing_mode,json=signingMode,proto3,enum=TW.Cosmos.Proto.SigningMode" json:"signing_mode,omitempty"`
	// Source account number
	AccountNumber uint64 `protobuf:"varint,2,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	// Chain ID (string)
	ChainId string `protobuf:"bytes,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Transaction fee
	Fee *Fee `protobuf:"bytes,4,opt,name=fee,proto3" json:"fee,omitempty"`
	// Optional memo
	Memo string `protobuf:"bytes,5,opt,name=memo,proto3" json:"memo,omitempty"`
	// Sequence number (account specific)
	Sequence uint64 `protobuf:"varint,6,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// The secret private key used for signing (32 bytes).
	PrivateKey []byte `protobuf:"bytes,7,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// Payload message(s)
	Messages []*Message `protobuf:"bytes,8,rep,name=messages,proto3" json:"messages,omitempty"`
	// Broadcast mode (included in output, relevant when broadcasting)
	Mode      BroadcastMode `protobuf:"varint,9,opt,name=mode,proto3,enum=TW.Cosmos.Proto.BroadcastMode" json:"mode,omitempty"`
	PublicKey []byte        `protobuf:"bytes,10,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	TxHasher  TxHasher      `protobuf:"varint,11,opt,name=tx_hasher,json=txHasher,proto3,enum=TW.Cosmos.Proto.TxHasher" json:"tx_hasher,omitempty"`
	// Optional. If set, use a different Signer info when signing the transaction.
	SignerInfo *SignerInfo `protobuf:"bytes,12,opt,name=signer_info,json=signerInfo,proto3" json:"signer_info,omitempty"`
	// Optional timeout_height
	TimeoutHeight uint64 `protobuf:"varint,13,opt,name=timeout_height,json=timeoutHeight,proto3" json:"timeout_height,omitempty"`
}

func (x *SigningInput) Reset() {
	*x = SigningInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningInput) ProtoMessage() {}

func (x *SigningInput) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningInput.ProtoReflect.Descriptor instead.
func (*SigningInput) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{7}
}

func (x *SigningInput) GetSigningMode() SigningMode {
	if x != nil {
		return x.SigningMode
	}
	return SigningMode_JSON
}

func (x *SigningInput) GetAccountNumber() uint64 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

func (x *SigningInput) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *SigningInput) GetFee() *Fee {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *SigningInput) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *SigningInput) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *SigningInput) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *SigningInput) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *SigningInput) GetMode() BroadcastMode {
	if x != nil {
		return x.Mode
	}
	return BroadcastMode_BLOCK
}

func (x *SigningInput) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *SigningInput) GetTxHasher() TxHasher {
	if x != nil {
		return x.TxHasher
	}
	return TxHasher_UseDefault
}

func (x *SigningInput) GetSignerInfo() *SignerInfo {
	if x != nil {
		return x.SignerInfo
	}
	return nil
}

func (x *SigningInput) GetTimeoutHeight() uint64 {
	if x != nil {
		return x.TimeoutHeight
	}
	return 0
}

// Result containing the signed and encoded transaction.
type SigningOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Signature
	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// Signed transaction in JSON (pre-Stargate case)
	Json string `protobuf:"bytes,2,opt,name=json,proto3" json:"json,omitempty"`
	// Signed transaction containing protobuf encoded, Base64-encoded form (Stargate case),
	// wrapped in a ready-to-broadcast json.
	Serialized string `protobuf:"bytes,3,opt,name=serialized,proto3" json:"serialized,omitempty"`
	// signatures array json string
	SignatureJson string `protobuf:"bytes,4,opt,name=signature_json,json=signatureJson,proto3" json:"signature_json,omitempty"`
	// error description
	ErrorMessage string              `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Error        common.SigningError `protobuf:"varint,6,opt,name=error,proto3,enum=TW.Common.Proto.SigningError" json:"error,omitempty"`
}

func (x *SigningOutput) Reset() {
	*x = SigningOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningOutput) ProtoMessage() {}

func (x *SigningOutput) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningOutput.ProtoReflect.Descriptor instead.
func (*SigningOutput) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{8}
}

func (x *SigningOutput) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SigningOutput) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

func (x *SigningOutput) GetSerialized() string {
	if x != nil {
		return x.Serialized
	}
	return ""
}

func (x *SigningOutput) GetSignatureJson() string {
	if x != nil {
		return x.SignatureJson
	}
	return ""
}

func (x *SigningOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SigningOutput) GetError() common.SigningError {
	if x != nil {
		return x.Error
	}
	return common.SigningError(0)
}

// cosmos-sdk/MsgSend
type Message_Send struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAddress string    `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	ToAddress   string    `protobuf:"bytes,2,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Amounts     []*Amount `protobuf:"bytes,3,rep,name=amounts,proto3" json:"amounts,omitempty"`
	TypePrefix  string    `protobuf:"bytes,4,opt,name=type_prefix,json=typePrefix,proto3" json:"type_prefix,omitempty"`
}

func (x *Message_Send) Reset() {
	*x = Message_Send{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Send) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Send) ProtoMessage() {}

func (x *Message_Send) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Send.ProtoReflect.Descriptor instead.
func (*Message_Send) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Message_Send) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *Message_Send) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *Message_Send) GetAmounts() []*Amount {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *Message_Send) GetTypePrefix() string {
	if x != nil {
		return x.TypePrefix
	}
	return ""
}

// cosmos-sdk/MsgTransfer, IBC transfer
type Message_Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IBC port, e.g. "transfer"
	SourcePort string `protobuf:"bytes,1,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	// IBC connection channel, e.g. "channel-141", see apis /ibc/applications/transfer/v1beta1/denom_traces (connections) or /node_info (own channel)
	SourceChannel string  `protobuf:"bytes,2,opt,name=source_channel,json=sourceChannel,proto3" json:"source_channel,omitempty"`
	Token         *Amount `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Sender        string  `protobuf:"bytes,4,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver      string  `protobuf:"bytes,5,opt,name=receiver,proto3" json:"receiver,omitempty"`
	// Timeout block height. Either timeout height or timestamp should be set.
	// Recommendation is to set height, to rev. 1 and block current + 1000 (see api /blocks/latest)
	TimeoutHeight *Height `protobuf:"bytes,6,opt,name=timeout_height,json=timeoutHeight,proto3" json:"timeout_height,omitempty"`
	// Timeout timestamp (in nanoseconds) relative to the current block timestamp.  Either timeout height or timestamp should be set.
	TimeoutTimestamp uint64 `protobuf:"varint,7,opt,name=timeout_timestamp,json=timeoutTimestamp,proto3" json:"timeout_timestamp,omitempty"`
}

func (x *Message_Transfer) Reset() {
	*x = Message_Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Transfer) ProtoMessage() {}

func (x *Message_Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Transfer.ProtoReflect.Descriptor instead.
func (*Message_Transfer) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 1}
}

func (x *Message_Transfer) GetSourcePort() string {
	if x != nil {
		return x.SourcePort
	}
	return ""
}

func (x *Message_Transfer) GetSourceChannel() string {
	if x != nil {
		return x.SourceChannel
	}
	return ""
}

func (x *Message_Transfer) GetToken() *Amount {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *Message_Transfer) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Message_Transfer) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *Message_Transfer) GetTimeoutHeight() *Height {
	if x != nil {
		return x.TimeoutHeight
	}
	return nil
}

func (x *Message_Transfer) GetTimeoutTimestamp() uint64 {
	if x != nil {
		return x.TimeoutTimestamp
	}
	return 0
}

// cosmos-sdk/MsgDelegate to stake
type Message_Delegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegatorAddress string  `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	ValidatorAddress string  `protobuf:"bytes,2,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	Amount           *Amount `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TypePrefix       string  `protobuf:"bytes,4,opt,name=type_prefix,json=typePrefix,proto3" json:"type_prefix,omitempty"`
}

func (x *Message_Delegate) Reset() {
	*x = Message_Delegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Delegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Delegate) ProtoMessage() {}

func (x *Message_Delegate) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Delegate.ProtoReflect.Descriptor instead.
func (*Message_Delegate) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 2}
}

func (x *Message_Delegate) GetDelegatorAddress() string {
	if x != nil {
		return x.DelegatorAddress
	}
	return ""
}

func (x *Message_Delegate) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *Message_Delegate) GetAmount() *Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Message_Delegate) GetTypePrefix() string {
	if x != nil {
		return x.TypePrefix
	}
	return ""
}

// cosmos-sdk/MsgUndelegate to unstake
type Message_Undelegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegatorAddress string  `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	ValidatorAddress string  `protobuf:"bytes,2,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	Amount           *Amount `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TypePrefix       string  `protobuf:"bytes,4,opt,name=type_prefix,json=typePrefix,proto3" json:"type_prefix,omitempty"`
}

func (x *Message_Undelegate) Reset() {
	*x = Message_Undelegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Undelegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Undelegate) ProtoMessage() {}

func (x *Message_Undelegate) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Undelegate.ProtoReflect.Descriptor instead.
func (*Message_Undelegate) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 3}
}

func (x *Message_Undelegate) GetDelegatorAddress() string {
	if x != nil {
		return x.DelegatorAddress
	}
	return ""
}

func (x *Message_Undelegate) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *Message_Undelegate) GetAmount() *Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Message_Undelegate) GetTypePrefix() string {
	if x != nil {
		return x.TypePrefix
	}
	return ""
}

// cosmos-sdk/MsgBeginRedelegate
type Message_BeginRedelegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegatorAddress    string  `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	ValidatorSrcAddress string  `protobuf:"bytes,2,opt,name=validator_src_address,json=validatorSrcAddress,proto3" json:"validator_src_address,omitempty"`
	ValidatorDstAddress string  `protobuf:"bytes,3,opt,name=validator_dst_address,json=validatorDstAddress,proto3" json:"validator_dst_address,omitempty"`
	Amount              *Amount `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	TypePrefix          string  `protobuf:"bytes,5,opt,name=type_prefix,json=typePrefix,proto3" json:"type_prefix,omitempty"`
}

func (x *Message_BeginRedelegate) Reset() {
	*x = Message_BeginRedelegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_BeginRedelegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_BeginRedelegate) ProtoMessage() {}

func (x *Message_BeginRedelegate) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_BeginRedelegate.ProtoReflect.Descriptor instead.
func (*Message_BeginRedelegate) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 4}
}

func (x *Message_BeginRedelegate) GetDelegatorAddress() string {
	if x != nil {
		return x.DelegatorAddress
	}
	return ""
}

func (x *Message_BeginRedelegate) GetValidatorSrcAddress() string {
	if x != nil {
		return x.ValidatorSrcAddress
	}
	return ""
}

func (x *Message_BeginRedelegate) GetValidatorDstAddress() string {
	if x != nil {
		return x.ValidatorDstAddress
	}
	return ""
}

func (x *Message_BeginRedelegate) GetAmount() *Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Message_BeginRedelegate) GetTypePrefix() string {
	if x != nil {
		return x.TypePrefix
	}
	return ""
}

// cosmos-sdk/MsgSetWithdrawAddress
type Message_SetWithdrawAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegatorAddress string `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	WithdrawAddress  string `protobuf:"bytes,2,opt,name=withdraw_address,json=withdrawAddress,proto3" json:"withdraw_address,omitempty"`
	TypePrefix       string `protobuf:"bytes,3,opt,name=type_prefix,json=typePrefix,proto3" json:"type_prefix,omitempty"`
}

func (x *Message_SetWithdrawAddress) Reset() {
	*x = Message_SetWithdrawAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SetWithdrawAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SetWithdrawAddress) ProtoMessage() {}

func (x *Message_SetWithdrawAddress) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SetWithdrawAddress.ProtoReflect.Descriptor instead.
func (*Message_SetWithdrawAddress) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 5}
}

func (x *Message_SetWithdrawAddress) GetDelegatorAddress() string {
	if x != nil {
		return x.DelegatorAddress
	}
	return ""
}

func (x *Message_SetWithdrawAddress) GetWithdrawAddress() string {
	if x != nil {
		return x.WithdrawAddress
	}
	return ""
}

func (x *Message_SetWithdrawAddress) GetTypePrefix() string {
	if x != nil {
		return x.TypePrefix
	}
	return ""
}

// cosmos-sdk/MsgWithdrawDelegationReward
type Message_WithdrawDelegationReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegatorAddress string `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	ValidatorAddress string `protobuf:"bytes,2,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	TypePrefix       string `protobuf:"bytes,3,opt,name=type_prefix,json=typePrefix,proto3" json:"type_prefix,omitempty"`
}

func (x *Message_WithdrawDelegationReward) Reset() {
	*x = Message_WithdrawDelegationReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_WithdrawDelegationReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_WithdrawDelegationReward) ProtoMessage() {}

func (x *Message_WithdrawDelegationReward) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_WithdrawDelegationReward.ProtoReflect.Descriptor instead.
func (*Message_WithdrawDelegationReward) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 6}
}

func (x *Message_WithdrawDelegationReward) GetDelegatorAddress() string {
	if x != nil {
		return x.DelegatorAddress
	}
	return ""
}

func (x *Message_WithdrawDelegationReward) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *Message_WithdrawDelegationReward) GetTypePrefix() string {
	if x != nil {
		return x.TypePrefix
	}
	return ""
}

// transfer within wasm/MsgExecuteContract, used by Terra Classic
type Message_WasmTerraExecuteContractTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sender address
	SenderAddress string `protobuf:"bytes,1,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	// token contract address
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// size is uint128, as bigint
	Amount           []byte `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	RecipientAddress string `protobuf:"bytes,4,opt,name=recipient_address,json=recipientAddress,proto3" json:"recipient_address,omitempty"`
}

func (x *Message_WasmTerraExecuteContractTransfer) Reset() {
	*x = Message_WasmTerraExecuteContractTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_WasmTerraExecuteContractTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_WasmTerraExecuteContractTransfer) ProtoMessage() {}

func (x *Message_WasmTerraExecuteContractTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_WasmTerraExecuteContractTransfer.ProtoReflect.Descriptor instead.
func (*Message_WasmTerraExecuteContractTransfer) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 7}
}

func (x *Message_WasmTerraExecuteContractTransfer) GetSenderAddress() string {
	if x != nil {
		return x.SenderAddress
	}
	return ""
}

func (x *Message_WasmTerraExecuteContractTransfer) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *Message_WasmTerraExecuteContractTransfer) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Message_WasmTerraExecuteContractTransfer) GetRecipientAddress() string {
	if x != nil {
		return x.RecipientAddress
	}
	return ""
}

// send within wasm/MsgExecuteContract, used by Terra Classic
type Message_WasmTerraExecuteContractSend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sender address
	SenderAddress string `protobuf:"bytes,1,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	// token contract address
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// size is uint128, as bigint
	Amount                   []byte `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	RecipientContractAddress string `protobuf:"bytes,4,opt,name=recipient_contract_address,json=recipientContractAddress,proto3" json:"recipient_contract_address,omitempty"`
	// execute_msg to be executed in the context of recipient contract
	Msg string `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
	// used in case you are sending native tokens along with this message
	Coin []string `protobuf:"bytes,6,rep,name=coin,proto3" json:"coin,omitempty"`
}

func (x *Message_WasmTerraExecuteContractSend) Reset() {
	*x = Message_WasmTerraExecuteContractSend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_WasmTerraExecuteContractSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_WasmTerraExecuteContractSend) ProtoMessage() {}

func (x *Message_WasmTerraExecuteContractSend) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_WasmTerraExecuteContractSend.ProtoReflect.Descriptor instead.
func (*Message_WasmTerraExecuteContractSend) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 8}
}

func (x *Message_WasmTerraExecuteContractSend) GetSenderAddress() string {
	if x != nil {
		return x.SenderAddress
	}
	return ""
}

func (x *Message_WasmTerraExecuteContractSend) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *Message_WasmTerraExecuteContractSend) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Message_WasmTerraExecuteContractSend) GetRecipientContractAddress() string {
	if x != nil {
		return x.RecipientContractAddress
	}
	return ""
}

func (x *Message_WasmTerraExecuteContractSend) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Message_WasmTerraExecuteContractSend) GetCoin() []string {
	if x != nil {
		return x.Coin
	}
	return nil
}

// thorchain/MsgSend
type Message_THORChainSend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAddress []byte    `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	ToAddress   []byte    `protobuf:"bytes,2,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Amounts     []*Amount `protobuf:"bytes,3,rep,name=amounts,proto3" json:"amounts,omitempty"`
}

func (x *Message_THORChainSend) Reset() {
	*x = Message_THORChainSend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_THORChainSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_THORChainSend) ProtoMessage() {}

func (x *Message_THORChainSend) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_THORChainSend.ProtoReflect.Descriptor instead.
func (*Message_THORChainSend) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 9}
}

func (x *Message_THORChainSend) GetFromAddress() []byte {
	if x != nil {
		return x.FromAddress
	}
	return nil
}

func (x *Message_THORChainSend) GetToAddress() []byte {
	if x != nil {
		return x.ToAddress
	}
	return nil
}

func (x *Message_THORChainSend) GetAmounts() []*Amount {
	if x != nil {
		return x.Amounts
	}
	return nil
}

// thorchain/MsgDeposit
type Message_THORChainDeposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coins  []*THORChainCoin `protobuf:"bytes,1,rep,name=coins,proto3" json:"coins,omitempty"`
	Memo   string           `protobuf:"bytes,2,opt,name=memo,proto3" json:"memo,omitempty"`
	Signer []byte           `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *Message_THORChainDeposit) Reset() {
	*x = Message_THORChainDeposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_THORChainDeposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_THORChainDeposit) ProtoMessage() {}

func (x *Message_THORChainDeposit) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_THORChainDeposit.ProtoReflect.Descriptor instead.
func (*Message_THORChainDeposit) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 10}
}

func (x *Message_THORChainDeposit) GetCoins() []*THORChainCoin {
	if x != nil {
		return x.Coins
	}
	return nil
}

func (x *Message_THORChainDeposit) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *Message_THORChainDeposit) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

// execute within wasm/MsgExecuteContract, used by Terra Classic
type Message_WasmTerraExecuteContractGeneric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sender address
	SenderAddress string `protobuf:"bytes,1,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	// token contract address
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// execute_msg to be executed in the context of recipient contract
	ExecuteMsg string `protobuf:"bytes,3,opt,name=execute_msg,json=executeMsg,proto3" json:"execute_msg,omitempty"`
	// used in case you are sending native tokens along with this message
	// Gap in field numbering is intentional
	Coins []*Amount `protobuf:"bytes,5,rep,name=coins,proto3" json:"coins,omitempty"`
}

func (x *Message_WasmTerraExecuteContractGeneric) Reset() {
	*x = Message_WasmTerraExecuteContractGeneric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_WasmTerraExecuteContractGeneric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_WasmTerraExecuteContractGeneric) ProtoMessage() {}

func (x *Message_WasmTerraExecuteContractGeneric) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_WasmTerraExecuteContractGeneric.ProtoReflect.Descriptor instead.
func (*Message_WasmTerraExecuteContractGeneric) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 11}
}

func (x *Message_WasmTerraExecuteContractGeneric) GetSenderAddress() string {
	if x != nil {
		return x.SenderAddress
	}
	return ""
}

func (x *Message_WasmTerraExecuteContractGeneric) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *Message_WasmTerraExecuteContractGeneric) GetExecuteMsg() string {
	if x != nil {
		return x.ExecuteMsg
	}
	return ""
}

func (x *Message_WasmTerraExecuteContractGeneric) GetCoins() []*Amount {
	if x != nil {
		return x.Coins
	}
	return nil
}

// transfer within wasm/MsgExecuteContract
type Message_WasmExecuteContractTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sender address
	SenderAddress string `protobuf:"bytes,1,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	// token contract address
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// size is uint128, as bigint
	Amount           []byte `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	RecipientAddress string `protobuf:"bytes,4,opt,name=recipient_address,json=recipientAddress,proto3" json:"recipient_address,omitempty"`
}

func (x *Message_WasmExecuteContractTransfer) Reset() {
	*x = Message_WasmExecuteContractTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_WasmExecuteContractTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_WasmExecuteContractTransfer) ProtoMessage() {}

func (x *Message_WasmExecuteContractTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_WasmExecuteContractTransfer.ProtoReflect.Descriptor instead.
func (*Message_WasmExecuteContractTransfer) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 12}
}

func (x *Message_WasmExecuteContractTransfer) GetSenderAddress() string {
	if x != nil {
		return x.SenderAddress
	}
	return ""
}

func (x *Message_WasmExecuteContractTransfer) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *Message_WasmExecuteContractTransfer) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Message_WasmExecuteContractTransfer) GetRecipientAddress() string {
	if x != nil {
		return x.RecipientAddress
	}
	return ""
}

// send within wasm/MsgExecuteContract
type Message_WasmExecuteContractSend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sender address
	SenderAddress string `protobuf:"bytes,1,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	// token contract address
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// size is uint128, as bigint
	Amount                   []byte `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	RecipientContractAddress string `protobuf:"bytes,4,opt,name=recipient_contract_address,json=recipientContractAddress,proto3" json:"recipient_contract_address,omitempty"`
	// execute_msg to be executed in the context of recipient contract
	Msg string `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
	// used in case you are sending native tokens along with this message
	Coin []string `protobuf:"bytes,6,rep,name=coin,proto3" json:"coin,omitempty"`
}

func (x *Message_WasmExecuteContractSend) Reset() {
	*x = Message_WasmExecuteContractSend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_WasmExecuteContractSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_WasmExecuteContractSend) ProtoMessage() {}

func (x *Message_WasmExecuteContractSend) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_WasmExecuteContractSend.ProtoReflect.Descriptor instead.
func (*Message_WasmExecuteContractSend) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 13}
}

func (x *Message_WasmExecuteContractSend) GetSenderAddress() string {
	if x != nil {
		return x.SenderAddress
	}
	return ""
}

func (x *Message_WasmExecuteContractSend) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *Message_WasmExecuteContractSend) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Message_WasmExecuteContractSend) GetRecipientContractAddress() string {
	if x != nil {
		return x.RecipientContractAddress
	}
	return ""
}

func (x *Message_WasmExecuteContractSend) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Message_WasmExecuteContractSend) GetCoin() []string {
	if x != nil {
		return x.Coin
	}
	return nil
}

// execute within wasm/MsgExecuteContract
// TODO replaces `ExecuteContract`.
type Message_WasmExecuteContractGeneric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sender address
	SenderAddress string `protobuf:"bytes,1,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	// token contract address
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// execute_msg to be executed in the context of recipient contract
	ExecuteMsg string `protobuf:"bytes,3,opt,name=execute_msg,json=executeMsg,proto3" json:"execute_msg,omitempty"`
	// used in case you are sending native tokens along with this message
	// Gap in field numbering is intentional
	Coins []*Amount `protobuf:"bytes,5,rep,name=coins,proto3" json:"coins,omitempty"`
}

func (x *Message_WasmExecuteContractGeneric) Reset() {
	*x = Message_WasmExecuteContractGeneric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_WasmExecuteContractGeneric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_WasmExecuteContractGeneric) ProtoMessage() {}

func (x *Message_WasmExecuteContractGeneric) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_WasmExecuteContractGeneric.ProtoReflect.Descriptor instead.
func (*Message_WasmExecuteContractGeneric) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 14}
}

func (x *Message_WasmExecuteContractGeneric) GetSenderAddress() string {
	if x != nil {
		return x.SenderAddress
	}
	return ""
}

func (x *Message_WasmExecuteContractGeneric) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *Message_WasmExecuteContractGeneric) GetExecuteMsg() string {
	if x != nil {
		return x.ExecuteMsg
	}
	return ""
}

func (x *Message_WasmExecuteContractGeneric) GetCoins() []*Amount {
	if x != nil {
		return x.Coins
	}
	return nil
}

type Message_RawJSON struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Message_RawJSON) Reset() {
	*x = Message_RawJSON{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_RawJSON) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_RawJSON) ProtoMessage() {}

func (x *Message_RawJSON) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_RawJSON.ProtoReflect.Descriptor instead.
func (*Message_RawJSON) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 15}
}

func (x *Message_RawJSON) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Message_RawJSON) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// For signing an already serialized transaction. Account number and chain ID must be set outside.
type Message_SignDirect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The prepared serialized TxBody
	BodyBytes []byte `protobuf:"bytes,1,opt,name=body_bytes,json=bodyBytes,proto3" json:"body_bytes,omitempty"`
	// The prepared serialized AuthInfo
	AuthInfoBytes []byte `protobuf:"bytes,2,opt,name=auth_info_bytes,json=authInfoBytes,proto3" json:"auth_info_bytes,omitempty"`
}

func (x *Message_SignDirect) Reset() {
	*x = Message_SignDirect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SignDirect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SignDirect) ProtoMessage() {}

func (x *Message_SignDirect) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SignDirect.ProtoReflect.Descriptor instead.
func (*Message_SignDirect) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 16}
}

func (x *Message_SignDirect) GetBodyBytes() []byte {
	if x != nil {
		return x.BodyBytes
	}
	return nil
}

func (x *Message_SignDirect) GetAuthInfoBytes() []byte {
	if x != nil {
		return x.AuthInfoBytes
	}
	return nil
}

// StakeAuthorization defines authorization for delegate/undelegate/redelegate.
//
// Since: cosmos-sdk 0.43
type Message_StakeAuthorization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// max_tokens specifies the maximum amount of tokens can be delegate to a validator. If it is
	// empty, there is no spend limit and any amount of coins can be delegated.
	MaxTokens *Amount `protobuf:"bytes,1,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"`
	// validators is the oneof that represents either allow_list or deny_list
	//
	// Types that are assignable to Validators:
	//
	//	*Message_StakeAuthorization_AllowList
	//	*Message_StakeAuthorization_DenyList
	Validators isMessage_StakeAuthorization_Validators `protobuf_oneof:"validators"`
	// authorization_type defines one of AuthorizationType.
	AuthorizationType Message_AuthorizationType `protobuf:"varint,4,opt,name=authorization_type,json=authorizationType,proto3,enum=TW.Cosmos.Proto.Message_AuthorizationType" json:"authorization_type,omitempty"`
}

func (x *Message_StakeAuthorization) Reset() {
	*x = Message_StakeAuthorization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_StakeAuthorization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_StakeAuthorization) ProtoMessage() {}

func (x *Message_StakeAuthorization) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_StakeAuthorization.ProtoReflect.Descriptor instead.
func (*Message_StakeAuthorization) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 17}
}

func (x *Message_StakeAuthorization) GetMaxTokens() *Amount {
	if x != nil {
		return x.MaxTokens
	}
	return nil
}

func (m *Message_StakeAuthorization) GetValidators() isMessage_StakeAuthorization_Validators {
	if m != nil {
		return m.Validators
	}
	return nil
}

func (x *Message_StakeAuthorization) GetAllowList() *Message_StakeAuthorization_Validators {
	if x, ok := x.GetValidators().(*Message_StakeAuthorization_AllowList); ok {
		return x.AllowList
	}
	return nil
}

func (x *Message_StakeAuthorization) GetDenyList() *Message_StakeAuthorization_Validators {
	if x, ok := x.GetValidators().(*Message_StakeAuthorization_DenyList); ok {
		return x.DenyList
	}
	return nil
}

func (x *Message_StakeAuthorization) GetAuthorizationType() Message_AuthorizationType {
	if x != nil {
		return x.AuthorizationType
	}
	return Message_UNSPECIFIED
}

type isMessage_StakeAuthorization_Validators interface {
	isMessage_StakeAuthorization_Validators()
}

type Message_StakeAuthorization_AllowList struct {
	// allow_list specifies list of validator addresses to whom grantee can delegate tokens on behalf of granter's
	// account.
	AllowList *Message_StakeAuthorization_Validators `protobuf:"bytes,2,opt,name=allow_list,json=allowList,proto3,oneof"`
}

type Message_StakeAuthorization_DenyList struct {
	// deny_list specifies list of validator addresses to whom grantee can not delegate tokens.
	DenyList *Message_StakeAuthorization_Validators `protobuf:"bytes,3,opt,name=deny_list,json=denyList,proto3,oneof"`
}

func (*Message_StakeAuthorization_AllowList) isMessage_StakeAuthorization_Validators() {}

func (*Message_StakeAuthorization_DenyList) isMessage_StakeAuthorization_Validators() {}

// cosmos-sdk/MsgGrant
type Message_AuthGrant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Granter string `protobuf:"bytes,1,opt,name=granter,proto3" json:"granter,omitempty"`
	Grantee string `protobuf:"bytes,2,opt,name=grantee,proto3" json:"grantee,omitempty"`
	// Types that are assignable to GrantType:
	//
	//	*Message_AuthGrant_GrantStake
	GrantType  isMessage_AuthGrant_GrantType `protobuf_oneof:"grant_type"`
	Expiration int64                         `protobuf:"varint,4,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *Message_AuthGrant) Reset() {
	*x = Message_AuthGrant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_AuthGrant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_AuthGrant) ProtoMessage() {}

func (x *Message_AuthGrant) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_AuthGrant.ProtoReflect.Descriptor instead.
func (*Message_AuthGrant) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 18}
}

func (x *Message_AuthGrant) GetGranter() string {
	if x != nil {
		return x.Granter
	}
	return ""
}

func (x *Message_AuthGrant) GetGrantee() string {
	if x != nil {
		return x.Grantee
	}
	return ""
}

func (m *Message_AuthGrant) GetGrantType() isMessage_AuthGrant_GrantType {
	if m != nil {
		return m.GrantType
	}
	return nil
}

func (x *Message_AuthGrant) GetGrantStake() *Message_StakeAuthorization {
	if x, ok := x.GetGrantType().(*Message_AuthGrant_GrantStake); ok {
		return x.GrantStake
	}
	return nil
}

func (x *Message_AuthGrant) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

type isMessage_AuthGrant_GrantType interface {
	isMessage_AuthGrant_GrantType()
}

type Message_AuthGrant_GrantStake struct {
	GrantStake *Message_StakeAuthorization `protobuf:"bytes,3,opt,name=grant_stake,json=grantStake,proto3,oneof"`
}

func (*Message_AuthGrant_GrantStake) isMessage_AuthGrant_GrantType() {}

// cosmos-sdk/MsgRevoke
type Message_AuthRevoke struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Granter    string `protobuf:"bytes,1,opt,name=granter,proto3" json:"granter,omitempty"`
	Grantee    string `protobuf:"bytes,2,opt,name=grantee,proto3" json:"grantee,omitempty"`
	MsgTypeUrl string `protobuf:"bytes,3,opt,name=msg_type_url,json=msgTypeUrl,proto3" json:"msg_type_url,omitempty"`
}

func (x *Message_AuthRevoke) Reset() {
	*x = Message_AuthRevoke{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_AuthRevoke) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_AuthRevoke) ProtoMessage() {}

func (x *Message_AuthRevoke) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_AuthRevoke.ProtoReflect.Descriptor instead.
func (*Message_AuthRevoke) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 19}
}

func (x *Message_AuthRevoke) GetGranter() string {
	if x != nil {
		return x.Granter
	}
	return ""
}

func (x *Message_AuthRevoke) GetGrantee() string {
	if x != nil {
		return x.Grantee
	}
	return ""
}

func (x *Message_AuthRevoke) GetMsgTypeUrl() string {
	if x != nil {
		return x.MsgTypeUrl
	}
	return ""
}

// cosmos-sdk/MsgVote defines a message to cast a vote.
type Message_MsgVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalId uint64             `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	Voter      string             `protobuf:"bytes,2,opt,name=voter,proto3" json:"voter,omitempty"`
	Option     Message_VoteOption `protobuf:"varint,3,opt,name=option,proto3,enum=TW.Cosmos.Proto.Message_VoteOption" json:"option,omitempty"`
}

func (x *Message_MsgVote) Reset() {
	*x = Message_MsgVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MsgVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MsgVote) ProtoMessage() {}

func (x *Message_MsgVote) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MsgVote.ProtoReflect.Descriptor instead.
func (*Message_MsgVote) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 20}
}

func (x *Message_MsgVote) GetProposalId() uint64 {
	if x != nil {
		return x.ProposalId
	}
	return 0
}

func (x *Message_MsgVote) GetVoter() string {
	if x != nil {
		return x.Voter
	}
	return ""
}

func (x *Message_MsgVote) GetOption() Message_VoteOption {
	if x != nil {
		return x.Option
	}
	return Message__UNSPECIFIED
}

type Message_MsgStrideLiquidStakingStake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Amount    string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	HostDenom string `protobuf:"bytes,3,opt,name=host_denom,json=hostDenom,proto3" json:"host_denom,omitempty"`
}

func (x *Message_MsgStrideLiquidStakingStake) Reset() {
	*x = Message_MsgStrideLiquidStakingStake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MsgStrideLiquidStakingStake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MsgStrideLiquidStakingStake) ProtoMessage() {}

func (x *Message_MsgStrideLiquidStakingStake) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MsgStrideLiquidStakingStake.ProtoReflect.Descriptor instead.
func (*Message_MsgStrideLiquidStakingStake) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 21}
}

func (x *Message_MsgStrideLiquidStakingStake) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Message_MsgStrideLiquidStakingStake) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Message_MsgStrideLiquidStakingStake) GetHostDenom() string {
	if x != nil {
		return x.HostDenom
	}
	return ""
}

type Message_MsgStrideLiquidStakingRedeem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Amount   string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	HostZone string `protobuf:"bytes,3,opt,name=host_zone,json=hostZone,proto3" json:"host_zone,omitempty"`
	Receiver string `protobuf:"bytes,4,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (x *Message_MsgStrideLiquidStakingRedeem) Reset() {
	*x = Message_MsgStrideLiquidStakingRedeem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MsgStrideLiquidStakingRedeem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MsgStrideLiquidStakingRedeem) ProtoMessage() {}

func (x *Message_MsgStrideLiquidStakingRedeem) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MsgStrideLiquidStakingRedeem.ProtoReflect.Descriptor instead.
func (*Message_MsgStrideLiquidStakingRedeem) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 22}
}

func (x *Message_MsgStrideLiquidStakingRedeem) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Message_MsgStrideLiquidStakingRedeem) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Message_MsgStrideLiquidStakingRedeem) GetHostZone() string {
	if x != nil {
		return x.HostZone
	}
	return ""
}

func (x *Message_MsgStrideLiquidStakingRedeem) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

// Validators defines list of validator addresses.
type Message_StakeAuthorization_Validators struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []string `protobuf:"bytes,1,rep,name=address,proto3" json:"address,omitempty"`
}

func (x *Message_StakeAuthorization_Validators) Reset() {
	*x = Message_StakeAuthorization_Validators{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Cosmos_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_StakeAuthorization_Validators) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_StakeAuthorization_Validators) ProtoMessage() {}

func (x *Message_StakeAuthorization_Validators) ProtoReflect() protoreflect.Message {
	mi := &file_Cosmos_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_StakeAuthorization_Validators.ProtoReflect.Descriptor instead.
func (*Message_StakeAuthorization_Validators) Descriptor() ([]byte, []int) {
	return file_Cosmos_proto_rawDescGZIP(), []int{5, 17, 0}
}

func (x *Message_StakeAuthorization_Validators) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

var File_Cosmos_proto protoreflect.FileDescriptor

var file_Cosmos_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a,
	0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x12, 0x31, 0x0a, 0x07,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x67, 0x61,
	0x73, 0x22, 0x5a, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x6c, 0x0a,
	0x0e, 0x54, 0x48, 0x4f, 0x52, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x79, 0x6e, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x79, 0x6e, 0x74, 0x68, 0x22, 0x7a, 0x0a, 0x0d, 0x54,
	0x48, 0x4f, 0x52, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x54, 0x57,
	0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x48,
	0x4f, 0x52, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x22, 0x9e, 0x33, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x69, 0x6e,
	0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x00,
	0x52, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x5b, 0x0a, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x48, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x61,
	0x6b, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x75, 0x6e, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x6e, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x75, 0x6e, 0x73, 0x74, 0x61,
	0x6b, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x53, 0x0a, 0x0f, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0e,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x76,
	0x0a, 0x1d, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x1a, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x10, 0x72, 0x61, 0x77, 0x5f, 0x6a, 0x73,
	0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x61, 0x77, 0x4a, 0x53,
	0x4f, 0x4e, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x61, 0x77, 0x4a, 0x73, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x2c, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x74, 0x65,
	0x72, 0x72, 0x61, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x54, 0x57,
	0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x54, 0x65, 0x72, 0x72, 0x61, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x27, 0x77, 0x61, 0x73, 0x6d, 0x54, 0x65,
	0x72, 0x72, 0x61, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x8e, 0x01, 0x0a, 0x28, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x57,
	0x61, 0x73, 0x6d, 0x54, 0x65, 0x72, 0x72, 0x61, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x23, 0x77,
	0x61, 0x73, 0x6d, 0x54, 0x65, 0x72, 0x72, 0x61, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x5e, 0x0a, 0x16, 0x74, 0x68, 0x6f, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x48, 0x4f,
	0x52, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x14, 0x74, 0x68,
	0x6f, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x23, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x74, 0x65, 0x72, 0x72,
	0x61, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x54,
	0x65, 0x72, 0x72, 0x61, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x48, 0x00, 0x52, 0x1f, 0x77, 0x61,
	0x73, 0x6d, 0x54, 0x65, 0x72, 0x72, 0x61, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x12, 0x8a, 0x01,
	0x0a, 0x26, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x22, 0x77, 0x61, 0x73, 0x6d, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x7e, 0x0a, 0x22, 0x77, 0x61,
	0x73, 0x6d, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x57, 0x61, 0x73, 0x6d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x1e, 0x77, 0x61, 0x73, 0x6d,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x78, 0x0a, 0x1d, 0x77, 0x61,
	0x73, 0x6d, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x57, 0x61, 0x73, 0x6d,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x48, 0x00, 0x52, 0x1a, 0x77, 0x61, 0x73, 0x6d, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x12, 0x55, 0x0a, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x12, 0x46, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x12, 0x6e, 0x0a, 0x1c, 0x73, 0x65, 0x74, 0x5f,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x19, 0x73,
	0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f,
	0x76, 0x6f, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x57, 0x2e,
	0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x56, 0x6f, 0x74, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x6d, 0x73, 0x67, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x7c, 0x0a, 0x1f, 0x6d, 0x73, 0x67, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74,
	0x72, 0x69, 0x64, 0x65, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x6d, 0x73, 0x67, 0x53, 0x74, 0x72,
	0x69, 0x64, 0x65, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x7f, 0x0a, 0x20, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x64, 0x65, 0x5f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x72,
	0x69, 0x64, 0x65, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x1c, 0x6d, 0x73, 0x67, 0x53, 0x74, 0x72,
	0x69, 0x64, 0x65, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x12, 0x67, 0x0a, 0x19, 0x74, 0x68, 0x6f, 0x72, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x54, 0x57, 0x2e, 0x43,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x54, 0x48, 0x4f, 0x52, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x48, 0x00, 0x52, 0x17, 0x74, 0x68, 0x6f, 0x72, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x9c, 0x01, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x57,
	0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x1a, 0xa2,
	0x02, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x2d, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x1a, 0xb6, 0x01, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a,
	0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x57, 0x2e,
	0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x1a, 0xb8, 0x01, 0x0a,
	0x0a, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x79, 0x70,
	0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x1a, 0xf8, 0x01, 0x0a, 0x0f, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x72, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x72, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x15,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x73, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x2f, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x1a, 0x8d, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x1a, 0x95, 0x01, 0x0a, 0x18, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x2b, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x79, 0x70, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x1a, 0xb9, 0x01, 0x0a, 0x20, 0x57,
	0x61, 0x73, 0x6d, 0x54, 0x65, 0x72, 0x72, 0x61, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0xec, 0x01, 0x0a, 0x1c, 0x57, 0x61, 0x73, 0x6d, 0x54,
	0x65, 0x72, 0x72, 0x61, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x69, 0x6e, 0x1a, 0x84, 0x01, 0x0a, 0x0d, 0x54, 0x48, 0x4f, 0x52, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x66,
	0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x57, 0x2e,
	0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0x74, 0x0a, 0x10,
	0x54, 0x48, 0x4f, 0x52, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x12, 0x34, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x48, 0x4f, 0x52, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x52,
	0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x1a, 0xc3, 0x01, 0x0a, 0x1f, 0x57, 0x61, 0x73, 0x6d, 0x54, 0x65, 0x72, 0x72, 0x61,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a,
	0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x05, 0x63, 0x6f, 0x69,
	0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x1a, 0xb4, 0x01, 0x0a, 0x1b, 0x57, 0x61, 0x73,
	0x6d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a,
	0xe7, 0x01, 0x0a, 0x17, 0x57, 0x61, 0x73, 0x6d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x1a, 0xbe, 0x01, 0x0a, 0x1a, 0x57, 0x61,
	0x73, 0x6d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x05, 0x63,
	0x6f, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x57, 0x2e,
	0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x1a, 0x33, 0x0a, 0x07, 0x52, 0x61,
	0x77, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x53, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x62, 0x6f, 0x64, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x1a, 0x8d, 0x03, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0a, 0x6d,
	0x61, 0x78, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x12, 0x57, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x48,
	0x00, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x09,
	0x64, 0x65, 0x6e, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x48, 0x00, 0x52, 0x08, 0x64, 0x65, 0x6e, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2a, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x11, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x26,
	0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x1a, 0xbd, 0x01, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x54, 0x57,
	0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x1a, 0x62, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x55, 0x72, 0x6c, 0x1a, 0x7d, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x56,
	0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x06, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x54, 0x57, 0x2e,
	0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x6e, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x53, 0x74,
	0x72, 0x69, 0x64, 0x65, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x74,
	0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f,
	0x73, 0x74, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x1a, 0x89, 0x01, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x53,
	0x74, 0x72, 0x69, 0x64, 0x65, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f,
	0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x22, 0x52, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x4c,
	0x45, 0x47, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x44, 0x45, 0x4c,
	0x45, 0x47, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x44, 0x45, 0x4c,
	0x45, 0x47, 0x41, 0x54, 0x45, 0x10, 0x03, 0x22, 0x4e, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x0c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x59, 0x45, 0x53, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x41, 0x42, 0x53, 0x54, 0x41, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x06, 0x0a,
	0x02, 0x4e, 0x4f, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x4f, 0x5f, 0x57, 0x49, 0x54, 0x48,
	0x5f, 0x56, 0x45, 0x54, 0x4f, 0x10, 0x04, 0x42, 0x0f, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x9c, 0x01, 0x0a, 0x0a, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4c, 0x0a, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb0, 0x04, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x3f, 0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x73, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x03, 0x66,
	0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65, 0x65, 0x52, 0x03,
	0x66, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x36, 0x0a,
	0x09, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x54, 0x57, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x65, 0x72, 0x52, 0x08, 0x74, 0x78, 0x48,
	0x61, 0x73, 0x68, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x57, 0x2e,
	0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xe2, 0x01, 0x0a, 0x0d, 0x53,
	0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x54, 0x57, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2a,
	0x2f, 0x0a, 0x0d, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x09, 0x0a, 0x05, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53,
	0x59, 0x4e, 0x43, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x02,
	0x2a, 0x25, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x10, 0x01, 0x2a, 0x35, 0x0a, 0x08, 0x54, 0x78, 0x48, 0x61, 0x73,
	0x68, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x4b, 0x65, 0x63, 0x63, 0x61, 0x6b, 0x32, 0x35, 0x36, 0x10, 0x02, 0x2a, 0x3b,
	0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36,
	0x6b, 0x31, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x6b,
	0x31, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x10, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6a, 0x6e, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Cosmos_proto_rawDescOnce sync.Once
	file_Cosmos_proto_rawDescData = file_Cosmos_proto_rawDesc
)

func file_Cosmos_proto_rawDescGZIP() []byte {
	file_Cosmos_proto_rawDescOnce.Do(func() {
		file_Cosmos_proto_rawDescData = protoimpl.X.CompressGZIP(file_Cosmos_proto_rawDescData)
	})
	return file_Cosmos_proto_rawDescData
}

var file_Cosmos_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_Cosmos_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_Cosmos_proto_goTypes = []interface{}{
	(BroadcastMode)(0),                               // 0: TW.Cosmos.Proto.BroadcastMode
	(SigningMode)(0),                                 // 1: TW.Cosmos.Proto.SigningMode
	(TxHasher)(0),                                    // 2: TW.Cosmos.Proto.TxHasher
	(SignerPublicKeyType)(0),                         // 3: TW.Cosmos.Proto.SignerPublicKeyType
	(Message_AuthorizationType)(0),                   // 4: TW.Cosmos.Proto.Message.AuthorizationType
	(Message_VoteOption)(0),                          // 5: TW.Cosmos.Proto.Message.VoteOption
	(*Amount)(nil),                                   // 6: TW.Cosmos.Proto.Amount
	(*Fee)(nil),                                      // 7: TW.Cosmos.Proto.Fee
	(*Height)(nil),                                   // 8: TW.Cosmos.Proto.Height
	(*THORChainAsset)(nil),                           // 9: TW.Cosmos.Proto.THORChainAsset
	(*THORChainCoin)(nil),                            // 10: TW.Cosmos.Proto.THORChainCoin
	(*Message)(nil),                                  // 11: TW.Cosmos.Proto.Message
	(*SignerInfo)(nil),                               // 12: TW.Cosmos.Proto.SignerInfo
	(*SigningInput)(nil),                             // 13: TW.Cosmos.Proto.SigningInput
	(*SigningOutput)(nil),                            // 14: TW.Cosmos.Proto.SigningOutput
	(*Message_Send)(nil),                             // 15: TW.Cosmos.Proto.Message.Send
	(*Message_Transfer)(nil),                         // 16: TW.Cosmos.Proto.Message.Transfer
	(*Message_Delegate)(nil),                         // 17: TW.Cosmos.Proto.Message.Delegate
	(*Message_Undelegate)(nil),                       // 18: TW.Cosmos.Proto.Message.Undelegate
	(*Message_BeginRedelegate)(nil),                  // 19: TW.Cosmos.Proto.Message.BeginRedelegate
	(*Message_SetWithdrawAddress)(nil),               // 20: TW.Cosmos.Proto.Message.SetWithdrawAddress
	(*Message_WithdrawDelegationReward)(nil),         // 21: TW.Cosmos.Proto.Message.WithdrawDelegationReward
	(*Message_WasmTerraExecuteContractTransfer)(nil), // 22: TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer
	(*Message_WasmTerraExecuteContractSend)(nil),     // 23: TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend
	(*Message_THORChainSend)(nil),                    // 24: TW.Cosmos.Proto.Message.THORChainSend
	(*Message_THORChainDeposit)(nil),                 // 25: TW.Cosmos.Proto.Message.THORChainDeposit
	(*Message_WasmTerraExecuteContractGeneric)(nil),  // 26: TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric
	(*Message_WasmExecuteContractTransfer)(nil),      // 27: TW.Cosmos.Proto.Message.WasmExecuteContractTransfer
	(*Message_WasmExecuteContractSend)(nil),          // 28: TW.Cosmos.Proto.Message.WasmExecuteContractSend
	(*Message_WasmExecuteContractGeneric)(nil),       // 29: TW.Cosmos.Proto.Message.WasmExecuteContractGeneric
	(*Message_RawJSON)(nil),                          // 30: TW.Cosmos.Proto.Message.RawJSON
	(*Message_SignDirect)(nil),                       // 31: TW.Cosmos.Proto.Message.SignDirect
	(*Message_StakeAuthorization)(nil),               // 32: TW.Cosmos.Proto.Message.StakeAuthorization
	(*Message_AuthGrant)(nil),                        // 33: TW.Cosmos.Proto.Message.AuthGrant
	(*Message_AuthRevoke)(nil),                       // 34: TW.Cosmos.Proto.Message.AuthRevoke
	(*Message_MsgVote)(nil),                          // 35: TW.Cosmos.Proto.Message.MsgVote
	(*Message_MsgStrideLiquidStakingStake)(nil),      // 36: TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake
	(*Message_MsgStrideLiquidStakingRedeem)(nil),     // 37: TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem
	(*Message_StakeAuthorization_Validators)(nil),    // 38: TW.Cosmos.Proto.Message.StakeAuthorization.Validators
	(common.SigningError)(0),                         // 39: TW.Common.Proto.SigningError
}
var file_Cosmos_proto_depIdxs = []int32{
	6,  // 0: TW.Cosmos.Proto.Fee.amounts:type_name -> TW.Cosmos.Proto.Amount
	9,  // 1: TW.Cosmos.Proto.THORChainCoin.asset:type_name -> TW.Cosmos.Proto.THORChainAsset
	15, // 2: TW.Cosmos.Proto.Message.send_coins_message:type_name -> TW.Cosmos.Proto.Message.Send
	16, // 3: TW.Cosmos.Proto.Message.transfer_tokens_message:type_name -> TW.Cosmos.Proto.Message.Transfer
	17, // 4: TW.Cosmos.Proto.Message.stake_message:type_name -> TW.Cosmos.Proto.Message.Delegate
	18, // 5: TW.Cosmos.Proto.Message.unstake_message:type_name -> TW.Cosmos.Proto.Message.Undelegate
	19, // 6: TW.Cosmos.Proto.Message.restake_message:type_name -> TW.Cosmos.Proto.Message.BeginRedelegate
	21, // 7: TW.Cosmos.Proto.Message.withdraw_stake_reward_message:type_name -> TW.Cosmos.Proto.Message.WithdrawDelegationReward
	30, // 8: TW.Cosmos.Proto.Message.raw_json_message:type_name -> TW.Cosmos.Proto.Message.RawJSON
	22, // 9: TW.Cosmos.Proto.Message.wasm_terra_execute_contract_transfer_message:type_name -> TW.Cosmos.Proto.Message.WasmTerraExecuteContractTransfer
	23, // 10: TW.Cosmos.Proto.Message.wasm_terra_execute_contract_send_message:type_name -> TW.Cosmos.Proto.Message.WasmTerraExecuteContractSend
	24, // 11: TW.Cosmos.Proto.Message.thorchain_send_message:type_name -> TW.Cosmos.Proto.Message.THORChainSend
	26, // 12: TW.Cosmos.Proto.Message.wasm_terra_execute_contract_generic:type_name -> TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric
	27, // 13: TW.Cosmos.Proto.Message.wasm_execute_contract_transfer_message:type_name -> TW.Cosmos.Proto.Message.WasmExecuteContractTransfer
	28, // 14: TW.Cosmos.Proto.Message.wasm_execute_contract_send_message:type_name -> TW.Cosmos.Proto.Message.WasmExecuteContractSend
	29, // 15: TW.Cosmos.Proto.Message.wasm_execute_contract_generic:type_name -> TW.Cosmos.Proto.Message.WasmExecuteContractGeneric
	31, // 16: TW.Cosmos.Proto.Message.sign_direct_message:type_name -> TW.Cosmos.Proto.Message.SignDirect
	33, // 17: TW.Cosmos.Proto.Message.auth_grant:type_name -> TW.Cosmos.Proto.Message.AuthGrant
	34, // 18: TW.Cosmos.Proto.Message.auth_revoke:type_name -> TW.Cosmos.Proto.Message.AuthRevoke
	20, // 19: TW.Cosmos.Proto.Message.set_withdraw_address_message:type_name -> TW.Cosmos.Proto.Message.SetWithdrawAddress
	35, // 20: TW.Cosmos.Proto.Message.msg_vote:type_name -> TW.Cosmos.Proto.Message.MsgVote
	36, // 21: TW.Cosmos.Proto.Message.msg_stride_liquid_staking_stake:type_name -> TW.Cosmos.Proto.Message.MsgStrideLiquidStakingStake
	37, // 22: TW.Cosmos.Proto.Message.msg_stride_liquid_staking_redeem:type_name -> TW.Cosmos.Proto.Message.MsgStrideLiquidStakingRedeem
	25, // 23: TW.Cosmos.Proto.Message.thorchain_deposit_message:type_name -> TW.Cosmos.Proto.Message.THORChainDeposit
	3,  // 24: TW.Cosmos.Proto.SignerInfo.public_key_type:type_name -> TW.Cosmos.Proto.SignerPublicKeyType
	1,  // 25: TW.Cosmos.Proto.SigningInput.signing_mode:type_name -> TW.Cosmos.Proto.SigningMode
	7,  // 26: TW.Cosmos.Proto.SigningInput.fee:type_name -> TW.Cosmos.Proto.Fee
	11, // 27: TW.Cosmos.Proto.SigningInput.messages:type_name -> TW.Cosmos.Proto.Message
	0,  // 28: TW.Cosmos.Proto.SigningInput.mode:type_name -> TW.Cosmos.Proto.BroadcastMode
	2,  // 29: TW.Cosmos.Proto.SigningInput.tx_hasher:type_name -> TW.Cosmos.Proto.TxHasher
	12, // 30: TW.Cosmos.Proto.SigningInput.signer_info:type_name -> TW.Cosmos.Proto.SignerInfo
	39, // 31: TW.Cosmos.Proto.SigningOutput.error:type_name -> TW.Common.Proto.SigningError
	6,  // 32: TW.Cosmos.Proto.Message.Send.amounts:type_name -> TW.Cosmos.Proto.Amount
	6,  // 33: TW.Cosmos.Proto.Message.Transfer.token:type_name -> TW.Cosmos.Proto.Amount
	8,  // 34: TW.Cosmos.Proto.Message.Transfer.timeout_height:type_name -> TW.Cosmos.Proto.Height
	6,  // 35: TW.Cosmos.Proto.Message.Delegate.amount:type_name -> TW.Cosmos.Proto.Amount
	6,  // 36: TW.Cosmos.Proto.Message.Undelegate.amount:type_name -> TW.Cosmos.Proto.Amount
	6,  // 37: TW.Cosmos.Proto.Message.BeginRedelegate.amount:type_name -> TW.Cosmos.Proto.Amount
	6,  // 38: TW.Cosmos.Proto.Message.THORChainSend.amounts:type_name -> TW.Cosmos.Proto.Amount
	10, // 39: TW.Cosmos.Proto.Message.THORChainDeposit.coins:type_name -> TW.Cosmos.Proto.THORChainCoin
	6,  // 40: TW.Cosmos.Proto.Message.WasmTerraExecuteContractGeneric.coins:type_name -> TW.Cosmos.Proto.Amount
	6,  // 41: TW.Cosmos.Proto.Message.WasmExecuteContractGeneric.coins:type_name -> TW.Cosmos.Proto.Amount
	6,  // 42: TW.Cosmos.Proto.Message.StakeAuthorization.max_tokens:type_name -> TW.Cosmos.Proto.Amount
	38, // 43: TW.Cosmos.Proto.Message.StakeAuthorization.allow_list:type_name -> TW.Cosmos.Proto.Message.StakeAuthorization.Validators
	38, // 44: TW.Cosmos.Proto.Message.StakeAuthorization.deny_list:type_name -> TW.Cosmos.Proto.Message.StakeAuthorization.Validators
	4,  // 45: TW.Cosmos.Proto.Message.StakeAuthorization.authorization_type:type_name -> TW.Cosmos.Proto.Message.AuthorizationType
	32, // 46: TW.Cosmos.Proto.Message.AuthGrant.grant_stake:type_name -> TW.Cosmos.Proto.Message.StakeAuthorization
	5,  // 47: TW.Cosmos.Proto.Message.MsgVote.option:type_name -> TW.Cosmos.Proto.Message.VoteOption
	48, // [48:48] is the sub-list for method output_type
	48, // [48:48] is the sub-list for method input_type
	48, // [48:48] is the sub-list for extension type_name
	48, // [48:48] is the sub-list for extension extendee
	0,  // [0:48] is the sub-list for field type_name
}

func init() { file_Cosmos_proto_init() }
func file_Cosmos_proto_init() {
	if File_Cosmos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Cosmos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Amount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Height); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*THORChainAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*THORChainCoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Send); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Delegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Undelegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_BeginRedelegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SetWithdrawAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_WithdrawDelegationReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_WasmTerraExecuteContractTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_WasmTerraExecuteContractSend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_THORChainSend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_THORChainDeposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_WasmTerraExecuteContractGeneric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_WasmExecuteContractTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_WasmExecuteContractSend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_WasmExecuteContractGeneric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_RawJSON); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SignDirect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_StakeAuthorization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_AuthGrant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_AuthRevoke); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MsgVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MsgStrideLiquidStakingStake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MsgStrideLiquidStakingRedeem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Cosmos_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_StakeAuthorization_Validators); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_Cosmos_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Message_SendCoinsMessage)(nil),
		(*Message_TransferTokensMessage)(nil),
		(*Message_StakeMessage)(nil),
		(*Message_UnstakeMessage)(nil),
		(*Message_RestakeMessage)(nil),
		(*Message_WithdrawStakeRewardMessage)(nil),
		(*Message_RawJsonMessage)(nil),
		(*Message_WasmTerraExecuteContractTransferMessage)(nil),
		(*Message_WasmTerraExecuteContractSendMessage)(nil),
		(*Message_ThorchainSendMessage)(nil),
		(*Message_WasmTerraExecuteContractGeneric_)(nil),
		(*Message_WasmExecuteContractTransferMessage)(nil),
		(*Message_WasmExecuteContractSendMessage)(nil),
		(*Message_WasmExecuteContractGeneric_)(nil),
		(*Message_SignDirectMessage)(nil),
		(*Message_AuthGrant_)(nil),
		(*Message_AuthRevoke_)(nil),
		(*Message_SetWithdrawAddressMessage)(nil),
		(*Message_MsgVote_)(nil),
		(*Message_MsgStrideLiquidStakingStake_)(nil),
		(*Message_MsgStrideLiquidStakingRedeem_)(nil),
		(*Message_ThorchainDepositMessage)(nil),
	}
	file_Cosmos_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*Message_StakeAuthorization_AllowList)(nil),
		(*Message_StakeAuthorization_DenyList)(nil),
	}
	file_Cosmos_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*Message_AuthGrant_GrantStake)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Cosmos_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Cosmos_proto_goTypes,
		DependencyIndexes: file_Cosmos_proto_depIdxs,
		EnumInfos:         file_Cosmos_proto_enumTypes,
		MessageInfos:      file_Cosmos_proto_msgTypes,
	}.Build()
	File_Cosmos_proto = out.File
	file_Cosmos_proto_rawDesc = nil
	file_Cosmos_proto_goTypes = nil
	file_Cosmos_proto_depIdxs = nil
}
