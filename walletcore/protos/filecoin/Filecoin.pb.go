// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: Filecoin.proto

package filecoin

import (
	common "github.com/vultisig/vultisigner/walletcore/protos/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines the type of `from` address derivation.
type DerivationType int32

const (
	// Defines a Secp256k1 (`f1`) derivation for the sender address.
	// Default derivation type.
	DerivationType_SECP256K1 DerivationType = 0
	// Defines a Delegated (`f4`) derivation for the sender address.
	DerivationType_DELEGATED DerivationType = 1
)

// Enum value maps for DerivationType.
var (
	DerivationType_name = map[int32]string{
		0: "SECP256K1",
		1: "DELEGATED",
	}
	DerivationType_value = map[string]int32{
		"SECP256K1": 0,
		"DELEGATED": 1,
	}
)

func (x DerivationType) Enum() *DerivationType {
	p := new(DerivationType)
	*p = x
	return p
}

func (x DerivationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DerivationType) Descriptor() protoreflect.EnumDescriptor {
	return file_Filecoin_proto_enumTypes[0].Descriptor()
}

func (DerivationType) Type() protoreflect.EnumType {
	return &file_Filecoin_proto_enumTypes[0]
}

func (x DerivationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DerivationType.Descriptor instead.
func (DerivationType) EnumDescriptor() ([]byte, []int) {
	return file_Filecoin_proto_rawDescGZIP(), []int{0}
}

// Input data necessary to create a signed transaction.
type SigningInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The secret private key of the sender account, used for signing (32 bytes).
	PrivateKey []byte `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// Recipient's address.
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	// Transaction nonce.
	Nonce uint64 `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Transfer value (uint256, serialized big endian)
	Value []byte `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	// Gas limit.
	GasLimit int64 `protobuf:"varint,5,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	// Gas fee cap (uint256, serialized big endian)
	GasFeeCap []byte `protobuf:"bytes,6,opt,name=gas_fee_cap,json=gasFeeCap,proto3" json:"gas_fee_cap,omitempty"`
	// Gas premium (uint256, serialized big endian)
	GasPremium []byte `protobuf:"bytes,7,opt,name=gas_premium,json=gasPremium,proto3" json:"gas_premium,omitempty"`
	// Message params.
	Params []byte `protobuf:"bytes,8,opt,name=params,proto3" json:"params,omitempty"`
	// Sender address derivation type.
	Derivation DerivationType `protobuf:"varint,9,opt,name=derivation,proto3,enum=TW.Filecoin.Proto.DerivationType" json:"derivation,omitempty"`
	// Public key secp256k1 extended
	PublicKey []byte `protobuf:"bytes,10,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *SigningInput) Reset() {
	*x = SigningInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Filecoin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningInput) ProtoMessage() {}

func (x *SigningInput) ProtoReflect() protoreflect.Message {
	mi := &file_Filecoin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningInput.ProtoReflect.Descriptor instead.
func (*SigningInput) Descriptor() ([]byte, []int) {
	return file_Filecoin_proto_rawDescGZIP(), []int{0}
}

func (x *SigningInput) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *SigningInput) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SigningInput) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *SigningInput) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SigningInput) GetGasLimit() int64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *SigningInput) GetGasFeeCap() []byte {
	if x != nil {
		return x.GasFeeCap
	}
	return nil
}

func (x *SigningInput) GetGasPremium() []byte {
	if x != nil {
		return x.GasPremium
	}
	return nil
}

func (x *SigningInput) GetParams() []byte {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *SigningInput) GetDerivation() DerivationType {
	if x != nil {
		return x.Derivation
	}
	return DerivationType_SECP256K1
}

func (x *SigningInput) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// Result containing the signed and encoded transaction.
type SigningOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resulting transaction, in JSON.
	Json string `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
	// Error code, 0 is ok, other codes will be treated as errors
	Error common.SigningError `protobuf:"varint,2,opt,name=error,proto3,enum=TW.Common.Proto.SigningError" json:"error,omitempty"`
	// Error description
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *SigningOutput) Reset() {
	*x = SigningOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Filecoin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningOutput) ProtoMessage() {}

func (x *SigningOutput) ProtoReflect() protoreflect.Message {
	mi := &file_Filecoin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningOutput.ProtoReflect.Descriptor instead.
func (*SigningOutput) Descriptor() ([]byte, []int) {
	return file_Filecoin_proto_rawDescGZIP(), []int{1}
}

func (x *SigningOutput) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

func (x *SigningOutput) GetError() common.SigningError {
	if x != nil {
		return x.Error
	}
	return common.SigningError(0)
}

func (x *SigningOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_Filecoin_proto protoreflect.FileDescriptor

var file_Filecoin_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x11, 0x54, 0x57, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xc3, 0x02, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0b,
	0x67, 0x61, 0x73, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x67, 0x61, 0x73, 0x46, 0x65, 0x65, 0x43, 0x61, 0x70, 0x12, 0x1f, 0x0a, 0x0b,
	0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x67, 0x61, 0x73, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x41, 0x0a, 0x0a, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x54, 0x57, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x64, 0x65,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x7d, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x69,
	0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x54, 0x57,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x2e, 0x0a, 0x0e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x45, 0x43, 0x50,
	0x32, 0x35, 0x36, 0x4b, 0x31, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x4c, 0x45, 0x47,
	0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6a, 0x6e, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Filecoin_proto_rawDescOnce sync.Once
	file_Filecoin_proto_rawDescData = file_Filecoin_proto_rawDesc
)

func file_Filecoin_proto_rawDescGZIP() []byte {
	file_Filecoin_proto_rawDescOnce.Do(func() {
		file_Filecoin_proto_rawDescData = protoimpl.X.CompressGZIP(file_Filecoin_proto_rawDescData)
	})
	return file_Filecoin_proto_rawDescData
}

var file_Filecoin_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Filecoin_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_Filecoin_proto_goTypes = []interface{}{
	(DerivationType)(0),      // 0: TW.Filecoin.Proto.DerivationType
	(*SigningInput)(nil),     // 1: TW.Filecoin.Proto.SigningInput
	(*SigningOutput)(nil),    // 2: TW.Filecoin.Proto.SigningOutput
	(common.SigningError)(0), // 3: TW.Common.Proto.SigningError
}
var file_Filecoin_proto_depIdxs = []int32{
	0, // 0: TW.Filecoin.Proto.SigningInput.derivation:type_name -> TW.Filecoin.Proto.DerivationType
	3, // 1: TW.Filecoin.Proto.SigningOutput.error:type_name -> TW.Common.Proto.SigningError
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_Filecoin_proto_init() }
func file_Filecoin_proto_init() {
	if File_Filecoin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Filecoin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Filecoin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Filecoin_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Filecoin_proto_goTypes,
		DependencyIndexes: file_Filecoin_proto_depIdxs,
		EnumInfos:         file_Filecoin_proto_enumTypes,
		MessageInfos:      file_Filecoin_proto_msgTypes,
	}.Build()
	File_Filecoin_proto = out.File
	file_Filecoin_proto_rawDesc = nil
	file_Filecoin_proto_goTypes = nil
	file_Filecoin_proto_depIdxs = nil
}
