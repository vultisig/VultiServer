// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: Tron.proto

package tron

import (
	common "github.com/vultisig/vultisigner/walletcore/protos/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A transfer transaction
type TransferContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender address.
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Recipient address.
	ToAddress string `protobuf:"bytes,2,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	// Amount to send.
	Amount int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TransferContract) Reset() {
	*x = TransferContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferContract) ProtoMessage() {}

func (x *TransferContract) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferContract.ProtoReflect.Descriptor instead.
func (*TransferContract) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{0}
}

func (x *TransferContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *TransferContract) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *TransferContract) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// Asset transfer
type TransferAssetContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Asset name.
	AssetName string `protobuf:"bytes,1,opt,name=asset_name,json=assetName,proto3" json:"asset_name,omitempty"`
	// Sender address.
	OwnerAddress string `protobuf:"bytes,2,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Recipient address.
	ToAddress string `protobuf:"bytes,3,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	// Amount to send.
	Amount int64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TransferAssetContract) Reset() {
	*x = TransferAssetContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferAssetContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferAssetContract) ProtoMessage() {}

func (x *TransferAssetContract) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferAssetContract.ProtoReflect.Descriptor instead.
func (*TransferAssetContract) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{1}
}

func (x *TransferAssetContract) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *TransferAssetContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *TransferAssetContract) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *TransferAssetContract) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// TRC20 token transfer
type TransferTRC20Contract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Contract name.
	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// Sender address.
	OwnerAddress string `protobuf:"bytes,2,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Recipient address.
	ToAddress string `protobuf:"bytes,3,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	// Amount to send, (uint256, serialized big endian)
	Amount []byte `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TransferTRC20Contract) Reset() {
	*x = TransferTRC20Contract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferTRC20Contract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferTRC20Contract) ProtoMessage() {}

func (x *TransferTRC20Contract) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferTRC20Contract.ProtoReflect.Descriptor instead.
func (*TransferTRC20Contract) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{2}
}

func (x *TransferTRC20Contract) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *TransferTRC20Contract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *TransferTRC20Contract) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *TransferTRC20Contract) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

// Freeze balance
type FreezeBalanceContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender address.
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Frozen balance. Minimum 1
	FrozenBalance int64 `protobuf:"varint,2,opt,name=frozen_balance,json=frozenBalance,proto3" json:"frozen_balance,omitempty"`
	// Frozen duration
	FrozenDuration int64 `protobuf:"varint,3,opt,name=frozen_duration,json=frozenDuration,proto3" json:"frozen_duration,omitempty"`
	// Resource type: BANDWIDTH | ENERGY
	Resource string `protobuf:"bytes,10,opt,name=resource,proto3" json:"resource,omitempty"`
	// Receiver address
	ReceiverAddress string `protobuf:"bytes,15,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"`
}

func (x *FreezeBalanceContract) Reset() {
	*x = FreezeBalanceContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreezeBalanceContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeBalanceContract) ProtoMessage() {}

func (x *FreezeBalanceContract) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeBalanceContract.ProtoReflect.Descriptor instead.
func (*FreezeBalanceContract) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{3}
}

func (x *FreezeBalanceContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *FreezeBalanceContract) GetFrozenBalance() int64 {
	if x != nil {
		return x.FrozenBalance
	}
	return 0
}

func (x *FreezeBalanceContract) GetFrozenDuration() int64 {
	if x != nil {
		return x.FrozenDuration
	}
	return 0
}

func (x *FreezeBalanceContract) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *FreezeBalanceContract) GetReceiverAddress() string {
	if x != nil {
		return x.ReceiverAddress
	}
	return ""
}

// stake TRX to obtain TRON Power (voting rights) and bandwidth or energy.
type FreezeBalanceV2Contract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of transaction initiator, data type is string
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Amount of TRX to be staked, unit is sun, data type is uint256
	FrozenBalance int64 `protobuf:"varint,2,opt,name=frozen_balance,json=frozenBalance,proto3" json:"frozen_balance,omitempty"`
	// Resource type, "BANDWIDTH" or "ENERGY", data type is string
	Resource string `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *FreezeBalanceV2Contract) Reset() {
	*x = FreezeBalanceV2Contract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreezeBalanceV2Contract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeBalanceV2Contract) ProtoMessage() {}

func (x *FreezeBalanceV2Contract) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeBalanceV2Contract.ProtoReflect.Descriptor instead.
func (*FreezeBalanceV2Contract) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{4}
}

func (x *FreezeBalanceV2Contract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *FreezeBalanceV2Contract) GetFrozenBalance() int64 {
	if x != nil {
		return x.FrozenBalance
	}
	return 0
}

func (x *FreezeBalanceV2Contract) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

// Unstake TRX to release bandwidth and energy and at the same time TRON Power will be reduced and all corresponding votes will be canceled.
type UnfreezeBalanceV2Contract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of transaction initiator, data type is string
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Amount of TRX to be unstaked, unit is sun, data type is uint256
	UnfreezeBalance int64 `protobuf:"varint,2,opt,name=unfreeze_balance,json=unfreezeBalance,proto3" json:"unfreeze_balance,omitempty"`
	// Resource type, "BANDWIDTH" or "ENERGY", data type is string
	Resource string `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *UnfreezeBalanceV2Contract) Reset() {
	*x = UnfreezeBalanceV2Contract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnfreezeBalanceV2Contract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfreezeBalanceV2Contract) ProtoMessage() {}

func (x *UnfreezeBalanceV2Contract) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfreezeBalanceV2Contract.ProtoReflect.Descriptor instead.
func (*UnfreezeBalanceV2Contract) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{5}
}

func (x *UnfreezeBalanceV2Contract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *UnfreezeBalanceV2Contract) GetUnfreezeBalance() int64 {
	if x != nil {
		return x.UnfreezeBalance
	}
	return 0
}

func (x *UnfreezeBalanceV2Contract) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

// withdraw unfrozen balance
type WithdrawExpireUnfreezeContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of transaction initiator, data type is string
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
}

func (x *WithdrawExpireUnfreezeContract) Reset() {
	*x = WithdrawExpireUnfreezeContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawExpireUnfreezeContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawExpireUnfreezeContract) ProtoMessage() {}

func (x *WithdrawExpireUnfreezeContract) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawExpireUnfreezeContract.ProtoReflect.Descriptor instead.
func (*WithdrawExpireUnfreezeContract) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{6}
}

func (x *WithdrawExpireUnfreezeContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

// delegate resource
type DelegateResourceContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of transaction initiator, data type is string
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Resource type, "BANDWIDTH" or "ENERGY", data type is string
	Resource string `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	// Amount of TRX staked for resource to be delegated, unit is sun, data type is uint256
	Balance int64 `protobuf:"varint,3,opt,name=balance,proto3" json:"balance,omitempty"`
	// Receiver address of resource to be delegated to
	ReceiverAddress string `protobuf:"bytes,4,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"`
	// Whether it is locked, if it is set to true, the delegated resources cannot be undelegated within 3 days.
	// When the lock time is not over, if the owner delegates the same resources using the lock to the same address,
	// the lock time will be reset to 3 days
	Lock bool `protobuf:"varint,5,opt,name=lock,proto3" json:"lock,omitempty"`
}

func (x *DelegateResourceContract) Reset() {
	*x = DelegateResourceContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegateResourceContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegateResourceContract) ProtoMessage() {}

func (x *DelegateResourceContract) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegateResourceContract.ProtoReflect.Descriptor instead.
func (*DelegateResourceContract) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{7}
}

func (x *DelegateResourceContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *DelegateResourceContract) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *DelegateResourceContract) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *DelegateResourceContract) GetReceiverAddress() string {
	if x != nil {
		return x.ReceiverAddress
	}
	return ""
}

func (x *DelegateResourceContract) GetLock() bool {
	if x != nil {
		return x.Lock
	}
	return false
}

// undelegate resource
type UnDelegateResourceContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of transaction initiator, data type is string
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Resource type, "BANDWIDTH" or "ENERGY", data type is string
	Resource string `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	// Amount of TRX staked for resource to be undelegated, unit is sun, data type is uint256
	Balance int64 `protobuf:"varint,3,opt,name=balance,proto3" json:"balance,omitempty"`
	// Receiver address of resource to be delegated to, data type is string
	ReceiverAddress string `protobuf:"bytes,4,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"`
}

func (x *UnDelegateResourceContract) Reset() {
	*x = UnDelegateResourceContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnDelegateResourceContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnDelegateResourceContract) ProtoMessage() {}

func (x *UnDelegateResourceContract) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnDelegateResourceContract.ProtoReflect.Descriptor instead.
func (*UnDelegateResourceContract) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{8}
}

func (x *UnDelegateResourceContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *UnDelegateResourceContract) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *UnDelegateResourceContract) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *UnDelegateResourceContract) GetReceiverAddress() string {
	if x != nil {
		return x.ReceiverAddress
	}
	return ""
}

// Unfreeze balance
type UnfreezeBalanceContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender address
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Resource type: BANDWIDTH | ENERGY
	Resource string `protobuf:"bytes,10,opt,name=resource,proto3" json:"resource,omitempty"`
	// Receiver address
	ReceiverAddress string `protobuf:"bytes,15,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"`
}

func (x *UnfreezeBalanceContract) Reset() {
	*x = UnfreezeBalanceContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnfreezeBalanceContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfreezeBalanceContract) ProtoMessage() {}

func (x *UnfreezeBalanceContract) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfreezeBalanceContract.ProtoReflect.Descriptor instead.
func (*UnfreezeBalanceContract) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{9}
}

func (x *UnfreezeBalanceContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *UnfreezeBalanceContract) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *UnfreezeBalanceContract) GetReceiverAddress() string {
	if x != nil {
		return x.ReceiverAddress
	}
	return ""
}

// Unfreeze asset
type UnfreezeAssetContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender address
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
}

func (x *UnfreezeAssetContract) Reset() {
	*x = UnfreezeAssetContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnfreezeAssetContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfreezeAssetContract) ProtoMessage() {}

func (x *UnfreezeAssetContract) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfreezeAssetContract.ProtoReflect.Descriptor instead.
func (*UnfreezeAssetContract) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{10}
}

func (x *UnfreezeAssetContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

// Vote asset
type VoteAssetContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender address
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Vote addresses
	VoteAddress []string `protobuf:"bytes,2,rep,name=vote_address,json=voteAddress,proto3" json:"vote_address,omitempty"`
	Support     bool     `protobuf:"varint,3,opt,name=support,proto3" json:"support,omitempty"`
	Count       int32    `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *VoteAssetContract) Reset() {
	*x = VoteAssetContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteAssetContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteAssetContract) ProtoMessage() {}

func (x *VoteAssetContract) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteAssetContract.ProtoReflect.Descriptor instead.
func (*VoteAssetContract) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{11}
}

func (x *VoteAssetContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *VoteAssetContract) GetVoteAddress() []string {
	if x != nil {
		return x.VoteAddress
	}
	return nil
}

func (x *VoteAssetContract) GetSupport() bool {
	if x != nil {
		return x.Support
	}
	return false
}

func (x *VoteAssetContract) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Vote witness
type VoteWitnessContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Owner
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// The votes
	Votes   []*VoteWitnessContract_Vote `protobuf:"bytes,2,rep,name=votes,proto3" json:"votes,omitempty"`
	Support bool                        `protobuf:"varint,3,opt,name=support,proto3" json:"support,omitempty"`
}

func (x *VoteWitnessContract) Reset() {
	*x = VoteWitnessContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteWitnessContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteWitnessContract) ProtoMessage() {}

func (x *VoteWitnessContract) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteWitnessContract.ProtoReflect.Descriptor instead.
func (*VoteWitnessContract) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{12}
}

func (x *VoteWitnessContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *VoteWitnessContract) GetVotes() []*VoteWitnessContract_Vote {
	if x != nil {
		return x.Votes
	}
	return nil
}

func (x *VoteWitnessContract) GetSupport() bool {
	if x != nil {
		return x.Support
	}
	return false
}

// Withdraw balance
type WithdrawBalanceContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender address
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
}

func (x *WithdrawBalanceContract) Reset() {
	*x = WithdrawBalanceContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawBalanceContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawBalanceContract) ProtoMessage() {}

func (x *WithdrawBalanceContract) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawBalanceContract.ProtoReflect.Descriptor instead.
func (*WithdrawBalanceContract) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{13}
}

func (x *WithdrawBalanceContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

// Smart contract call
type TriggerSmartContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Owner
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Contract address
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// amount
	CallValue int64 `protobuf:"varint,3,opt,name=call_value,json=callValue,proto3" json:"call_value,omitempty"`
	// call data
	Data []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	// token value
	CallTokenValue int64 `protobuf:"varint,5,opt,name=call_token_value,json=callTokenValue,proto3" json:"call_token_value,omitempty"`
	// ID of the token
	TokenId int64 `protobuf:"varint,6,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *TriggerSmartContract) Reset() {
	*x = TriggerSmartContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerSmartContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerSmartContract) ProtoMessage() {}

func (x *TriggerSmartContract) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerSmartContract.ProtoReflect.Descriptor instead.
func (*TriggerSmartContract) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{14}
}

func (x *TriggerSmartContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *TriggerSmartContract) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *TriggerSmartContract) GetCallValue() int64 {
	if x != nil {
		return x.CallValue
	}
	return 0
}

func (x *TriggerSmartContract) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TriggerSmartContract) GetCallTokenValue() int64 {
	if x != nil {
		return x.CallTokenValue
	}
	return 0
}

func (x *TriggerSmartContract) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

// Info from block header
type BlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// creation timestamp
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// root
	TxTrieRoot []byte `protobuf:"bytes,2,opt,name=tx_trie_root,json=txTrieRoot,proto3" json:"tx_trie_root,omitempty"`
	// hash of the parent
	ParentHash     []byte `protobuf:"bytes,3,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	Number         int64  `protobuf:"varint,7,opt,name=number,proto3" json:"number,omitempty"`
	WitnessAddress []byte `protobuf:"bytes,9,opt,name=witness_address,json=witnessAddress,proto3" json:"witness_address,omitempty"`
	Version        int32  `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *BlockHeader) Reset() {
	*x = BlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeader) ProtoMessage() {}

func (x *BlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeader.ProtoReflect.Descriptor instead.
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{15}
}

func (x *BlockHeader) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BlockHeader) GetTxTrieRoot() []byte {
	if x != nil {
		return x.TxTrieRoot
	}
	return nil
}

func (x *BlockHeader) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *BlockHeader) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *BlockHeader) GetWitnessAddress() []byte {
	if x != nil {
		return x.WitnessAddress
	}
	return nil
}

func (x *BlockHeader) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// Transaction
type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Transaction timestamp in milliseconds.
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Transaction expiration time in milliseconds.
	Expiration int64 `protobuf:"varint,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
	// Transaction block header.
	BlockHeader *BlockHeader `protobuf:"bytes,3,opt,name=block_header,json=blockHeader,proto3" json:"block_header,omitempty"`
	// Transaction fee limit
	FeeLimit int64 `protobuf:"varint,4,opt,name=fee_limit,json=feeLimit,proto3" json:"fee_limit,omitempty"`
	// Contract.
	//
	// Types that are assignable to ContractOneof:
	//
	//	*Transaction_Transfer
	//	*Transaction_TransferAsset
	//	*Transaction_FreezeBalance
	//	*Transaction_UnfreezeBalance
	//	*Transaction_UnfreezeAsset
	//	*Transaction_WithdrawBalance
	//	*Transaction_VoteAsset
	//	*Transaction_VoteWitness
	//	*Transaction_TriggerSmartContract
	//	*Transaction_TransferTrc20Contract
	//	*Transaction_FreezeBalanceV2
	//	*Transaction_UnfreezeBalanceV2
	//	*Transaction_WithdrawExpireUnfreeze
	//	*Transaction_DelegateResource
	//	*Transaction_UndelegateResource
	ContractOneof isTransaction_ContractOneof `protobuf_oneof:"contract_oneof"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{16}
}

func (x *Transaction) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Transaction) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *Transaction) GetBlockHeader() *BlockHeader {
	if x != nil {
		return x.BlockHeader
	}
	return nil
}

func (x *Transaction) GetFeeLimit() int64 {
	if x != nil {
		return x.FeeLimit
	}
	return 0
}

func (m *Transaction) GetContractOneof() isTransaction_ContractOneof {
	if m != nil {
		return m.ContractOneof
	}
	return nil
}

func (x *Transaction) GetTransfer() *TransferContract {
	if x, ok := x.GetContractOneof().(*Transaction_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (x *Transaction) GetTransferAsset() *TransferAssetContract {
	if x, ok := x.GetContractOneof().(*Transaction_TransferAsset); ok {
		return x.TransferAsset
	}
	return nil
}

func (x *Transaction) GetFreezeBalance() *FreezeBalanceContract {
	if x, ok := x.GetContractOneof().(*Transaction_FreezeBalance); ok {
		return x.FreezeBalance
	}
	return nil
}

func (x *Transaction) GetUnfreezeBalance() *UnfreezeBalanceContract {
	if x, ok := x.GetContractOneof().(*Transaction_UnfreezeBalance); ok {
		return x.UnfreezeBalance
	}
	return nil
}

func (x *Transaction) GetUnfreezeAsset() *UnfreezeAssetContract {
	if x, ok := x.GetContractOneof().(*Transaction_UnfreezeAsset); ok {
		return x.UnfreezeAsset
	}
	return nil
}

func (x *Transaction) GetWithdrawBalance() *WithdrawBalanceContract {
	if x, ok := x.GetContractOneof().(*Transaction_WithdrawBalance); ok {
		return x.WithdrawBalance
	}
	return nil
}

func (x *Transaction) GetVoteAsset() *VoteAssetContract {
	if x, ok := x.GetContractOneof().(*Transaction_VoteAsset); ok {
		return x.VoteAsset
	}
	return nil
}

func (x *Transaction) GetVoteWitness() *VoteWitnessContract {
	if x, ok := x.GetContractOneof().(*Transaction_VoteWitness); ok {
		return x.VoteWitness
	}
	return nil
}

func (x *Transaction) GetTriggerSmartContract() *TriggerSmartContract {
	if x, ok := x.GetContractOneof().(*Transaction_TriggerSmartContract); ok {
		return x.TriggerSmartContract
	}
	return nil
}

func (x *Transaction) GetTransferTrc20Contract() *TransferTRC20Contract {
	if x, ok := x.GetContractOneof().(*Transaction_TransferTrc20Contract); ok {
		return x.TransferTrc20Contract
	}
	return nil
}

func (x *Transaction) GetFreezeBalanceV2() *FreezeBalanceV2Contract {
	if x, ok := x.GetContractOneof().(*Transaction_FreezeBalanceV2); ok {
		return x.FreezeBalanceV2
	}
	return nil
}

func (x *Transaction) GetUnfreezeBalanceV2() *UnfreezeBalanceV2Contract {
	if x, ok := x.GetContractOneof().(*Transaction_UnfreezeBalanceV2); ok {
		return x.UnfreezeBalanceV2
	}
	return nil
}

func (x *Transaction) GetWithdrawExpireUnfreeze() *WithdrawExpireUnfreezeContract {
	if x, ok := x.GetContractOneof().(*Transaction_WithdrawExpireUnfreeze); ok {
		return x.WithdrawExpireUnfreeze
	}
	return nil
}

func (x *Transaction) GetDelegateResource() *DelegateResourceContract {
	if x, ok := x.GetContractOneof().(*Transaction_DelegateResource); ok {
		return x.DelegateResource
	}
	return nil
}

func (x *Transaction) GetUndelegateResource() *UnDelegateResourceContract {
	if x, ok := x.GetContractOneof().(*Transaction_UndelegateResource); ok {
		return x.UndelegateResource
	}
	return nil
}

type isTransaction_ContractOneof interface {
	isTransaction_ContractOneof()
}

type Transaction_Transfer struct {
	Transfer *TransferContract `protobuf:"bytes,10,opt,name=transfer,proto3,oneof"`
}

type Transaction_TransferAsset struct {
	TransferAsset *TransferAssetContract `protobuf:"bytes,11,opt,name=transfer_asset,json=transferAsset,proto3,oneof"`
}

type Transaction_FreezeBalance struct {
	FreezeBalance *FreezeBalanceContract `protobuf:"bytes,12,opt,name=freeze_balance,json=freezeBalance,proto3,oneof"`
}

type Transaction_UnfreezeBalance struct {
	UnfreezeBalance *UnfreezeBalanceContract `protobuf:"bytes,13,opt,name=unfreeze_balance,json=unfreezeBalance,proto3,oneof"`
}

type Transaction_UnfreezeAsset struct {
	UnfreezeAsset *UnfreezeAssetContract `protobuf:"bytes,14,opt,name=unfreeze_asset,json=unfreezeAsset,proto3,oneof"`
}

type Transaction_WithdrawBalance struct {
	WithdrawBalance *WithdrawBalanceContract `protobuf:"bytes,15,opt,name=withdraw_balance,json=withdrawBalance,proto3,oneof"`
}

type Transaction_VoteAsset struct {
	VoteAsset *VoteAssetContract `protobuf:"bytes,16,opt,name=vote_asset,json=voteAsset,proto3,oneof"`
}

type Transaction_VoteWitness struct {
	VoteWitness *VoteWitnessContract `protobuf:"bytes,17,opt,name=vote_witness,json=voteWitness,proto3,oneof"`
}

type Transaction_TriggerSmartContract struct {
	TriggerSmartContract *TriggerSmartContract `protobuf:"bytes,18,opt,name=trigger_smart_contract,json=triggerSmartContract,proto3,oneof"`
}

type Transaction_TransferTrc20Contract struct {
	TransferTrc20Contract *TransferTRC20Contract `protobuf:"bytes,19,opt,name=transfer_trc20_contract,json=transferTrc20Contract,proto3,oneof"`
}

type Transaction_FreezeBalanceV2 struct {
	FreezeBalanceV2 *FreezeBalanceV2Contract `protobuf:"bytes,20,opt,name=freeze_balance_v2,json=freezeBalanceV2,proto3,oneof"`
}

type Transaction_UnfreezeBalanceV2 struct {
	UnfreezeBalanceV2 *UnfreezeBalanceV2Contract `protobuf:"bytes,21,opt,name=unfreeze_balance_v2,json=unfreezeBalanceV2,proto3,oneof"`
}

type Transaction_WithdrawExpireUnfreeze struct {
	WithdrawExpireUnfreeze *WithdrawExpireUnfreezeContract `protobuf:"bytes,23,opt,name=withdraw_expire_unfreeze,json=withdrawExpireUnfreeze,proto3,oneof"`
}

type Transaction_DelegateResource struct {
	DelegateResource *DelegateResourceContract `protobuf:"bytes,24,opt,name=delegate_resource,json=delegateResource,proto3,oneof"`
}

type Transaction_UndelegateResource struct {
	UndelegateResource *UnDelegateResourceContract `protobuf:"bytes,25,opt,name=undelegate_resource,json=undelegateResource,proto3,oneof"`
}

func (*Transaction_Transfer) isTransaction_ContractOneof() {}

func (*Transaction_TransferAsset) isTransaction_ContractOneof() {}

func (*Transaction_FreezeBalance) isTransaction_ContractOneof() {}

func (*Transaction_UnfreezeBalance) isTransaction_ContractOneof() {}

func (*Transaction_UnfreezeAsset) isTransaction_ContractOneof() {}

func (*Transaction_WithdrawBalance) isTransaction_ContractOneof() {}

func (*Transaction_VoteAsset) isTransaction_ContractOneof() {}

func (*Transaction_VoteWitness) isTransaction_ContractOneof() {}

func (*Transaction_TriggerSmartContract) isTransaction_ContractOneof() {}

func (*Transaction_TransferTrc20Contract) isTransaction_ContractOneof() {}

func (*Transaction_FreezeBalanceV2) isTransaction_ContractOneof() {}

func (*Transaction_UnfreezeBalanceV2) isTransaction_ContractOneof() {}

func (*Transaction_WithdrawExpireUnfreeze) isTransaction_ContractOneof() {}

func (*Transaction_DelegateResource) isTransaction_ContractOneof() {}

func (*Transaction_UndelegateResource) isTransaction_ContractOneof() {}

// Input data necessary to create a signed transaction.
type SigningInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Transaction.
	Transaction *Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	// The secret private key used for signing (32 bytes).
	PrivateKey []byte `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// For direct sign in Tron, we just have to sign the txId returned by the DApp json payload.
	TxId string `protobuf:"bytes,3,opt,name=txId,proto3" json:"txId,omitempty"`
}

func (x *SigningInput) Reset() {
	*x = SigningInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningInput) ProtoMessage() {}

func (x *SigningInput) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningInput.ProtoReflect.Descriptor instead.
func (*SigningInput) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{17}
}

func (x *SigningInput) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *SigningInput) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *SigningInput) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

// Result containing the signed and encoded transaction.
type SigningOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Transaction identifier.
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Signature.
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	RefBlockBytes []byte `protobuf:"bytes,3,opt,name=ref_block_bytes,json=refBlockBytes,proto3" json:"ref_block_bytes,omitempty"`
	RefBlockHash  []byte `protobuf:"bytes,4,opt,name=ref_block_hash,json=refBlockHash,proto3" json:"ref_block_hash,omitempty"`
	// Result in JSON
	Json string `protobuf:"bytes,5,opt,name=json,proto3" json:"json,omitempty"`
	// error code, 0 is ok, other codes will be treated as errors
	Error common.SigningError `protobuf:"varint,6,opt,name=error,proto3,enum=TW.Common.Proto.SigningError" json:"error,omitempty"`
	// error code description
	ErrorMessage string `protobuf:"bytes,7,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *SigningOutput) Reset() {
	*x = SigningOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningOutput) ProtoMessage() {}

func (x *SigningOutput) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningOutput.ProtoReflect.Descriptor instead.
func (*SigningOutput) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{18}
}

func (x *SigningOutput) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SigningOutput) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SigningOutput) GetRefBlockBytes() []byte {
	if x != nil {
		return x.RefBlockBytes
	}
	return nil
}

func (x *SigningOutput) GetRefBlockHash() []byte {
	if x != nil {
		return x.RefBlockHash
	}
	return nil
}

func (x *SigningOutput) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

func (x *SigningOutput) GetError() common.SigningError {
	if x != nil {
		return x.Error
	}
	return common.SigningError(0)
}

func (x *SigningOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// A vote
type VoteWitnessContract_Vote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address
	VoteAddress string `protobuf:"bytes,1,opt,name=vote_address,json=voteAddress,proto3" json:"vote_address,omitempty"`
	// vote count
	VoteCount int64 `protobuf:"varint,2,opt,name=vote_count,json=voteCount,proto3" json:"vote_count,omitempty"`
}

func (x *VoteWitnessContract_Vote) Reset() {
	*x = VoteWitnessContract_Vote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tron_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteWitnessContract_Vote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteWitnessContract_Vote) ProtoMessage() {}

func (x *VoteWitnessContract_Vote) ProtoReflect() protoreflect.Message {
	mi := &file_Tron_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteWitnessContract_Vote.ProtoReflect.Descriptor instead.
func (*VoteWitnessContract_Vote) Descriptor() ([]byte, []int) {
	return file_Tron_proto_rawDescGZIP(), []int{12, 0}
}

func (x *VoteWitnessContract_Vote) GetVoteAddress() string {
	if x != nil {
		return x.VoteAddress
	}
	return ""
}

func (x *VoteWitnessContract_Vote) GetVoteCount() int64 {
	if x != nil {
		return x.VoteCount
	}
	return 0
}

var File_Tron_proto protoreflect.FileDescriptor

var file_Tron_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x54, 0x72, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x54, 0x57,
	0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x10, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x15, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9e,
	0x01, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x52, 0x43, 0x32, 0x30,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xd3, 0x01, 0x0a, 0x15, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x17, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x32, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e,
	0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x19, 0x55, 0x6e,
	0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x32, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0x45, 0x0a, 0x1e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xb4, 0x01, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x6f, 0x63,
	0x6b, 0x22, 0xa2, 0x01, 0x0a, 0x1a, 0x55, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x17, 0x55, 0x6e, 0x66, 0x72, 0x65,
	0x65, 0x7a, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3c,
	0x0a, 0x15, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x8b, 0x01, 0x0a,
	0x11, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x76,
	0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xdd, 0x01, 0x0a, 0x13, 0x56,
	0x6f, 0x74, 0x65, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x54, 0x57, 0x2e, 0x54, 0x72, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x57, 0x69, 0x74, 0x6e, 0x65,
	0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x1a, 0x48, 0x0a, 0x04, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x65,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x76, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x6f, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x76, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x17, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xde, 0x01, 0x0a, 0x14, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x0b,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x78, 0x5f,
	0x74, 0x72, 0x69, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x74, 0x78, 0x54, 0x72, 0x69, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x77,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x0b, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x57,
	0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x65, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x3d, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x54, 0x57, 0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x12, 0x4d, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x54, 0x57, 0x2e, 0x54, 0x72,
	0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x00,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x4d, 0x0a, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x54, 0x57, 0x2e, 0x54, 0x72, 0x6f,
	0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52,
	0x0d, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x53,
	0x0a, 0x10, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x54, 0x57, 0x2e, 0x54, 0x72,
	0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a,
	0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x0f, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x54, 0x57,
	0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x66, 0x72,
	0x65, 0x65, 0x7a, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x48, 0x00, 0x52, 0x0d, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x12, 0x53, 0x0a, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x54,
	0x57, 0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x57,
	0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52,
	0x09, 0x76, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x47, 0x0a, 0x0c, 0x76, 0x6f,
	0x74, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x54, 0x57, 0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x6f, 0x74, 0x65, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x57, 0x69, 0x74, 0x6e,
	0x65, 0x73, 0x73, 0x12, 0x5b, 0x0a, 0x16, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73,
	0x6d, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x54, 0x57, 0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x6d, 0x61, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x14, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x5e, 0x0a, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x63,
	0x32, 0x30, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x54, 0x57, 0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x52, 0x43, 0x32, 0x30, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x54, 0x72, 0x63, 0x32, 0x30, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x54, 0x0a, 0x11, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x76, 0x32, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x54, 0x57,
	0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x32, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x56, 0x32, 0x12, 0x5a, 0x0a, 0x13, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x76, 0x32, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x54, 0x57, 0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x56, 0x32, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52,
	0x11, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x56, 0x32, 0x12, 0x69, 0x0a, 0x18, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x54, 0x57, 0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x16, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x12, 0x56, 0x0a,
	0x11, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x54, 0x57, 0x2e, 0x54, 0x72,
	0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x48, 0x00, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x13, 0x75, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x54, 0x57, 0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52,
	0x12, 0x75, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x81, 0x01, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x57,
	0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x22, 0xf9, 0x01, 0x0a, 0x0d, 0x53, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x66,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x54, 0x57, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6a, 0x6e, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Tron_proto_rawDescOnce sync.Once
	file_Tron_proto_rawDescData = file_Tron_proto_rawDesc
)

func file_Tron_proto_rawDescGZIP() []byte {
	file_Tron_proto_rawDescOnce.Do(func() {
		file_Tron_proto_rawDescData = protoimpl.X.CompressGZIP(file_Tron_proto_rawDescData)
	})
	return file_Tron_proto_rawDescData
}

var file_Tron_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_Tron_proto_goTypes = []interface{}{
	(*TransferContract)(nil),               // 0: TW.Tron.Proto.TransferContract
	(*TransferAssetContract)(nil),          // 1: TW.Tron.Proto.TransferAssetContract
	(*TransferTRC20Contract)(nil),          // 2: TW.Tron.Proto.TransferTRC20Contract
	(*FreezeBalanceContract)(nil),          // 3: TW.Tron.Proto.FreezeBalanceContract
	(*FreezeBalanceV2Contract)(nil),        // 4: TW.Tron.Proto.FreezeBalanceV2Contract
	(*UnfreezeBalanceV2Contract)(nil),      // 5: TW.Tron.Proto.UnfreezeBalanceV2Contract
	(*WithdrawExpireUnfreezeContract)(nil), // 6: TW.Tron.Proto.WithdrawExpireUnfreezeContract
	(*DelegateResourceContract)(nil),       // 7: TW.Tron.Proto.DelegateResourceContract
	(*UnDelegateResourceContract)(nil),     // 8: TW.Tron.Proto.UnDelegateResourceContract
	(*UnfreezeBalanceContract)(nil),        // 9: TW.Tron.Proto.UnfreezeBalanceContract
	(*UnfreezeAssetContract)(nil),          // 10: TW.Tron.Proto.UnfreezeAssetContract
	(*VoteAssetContract)(nil),              // 11: TW.Tron.Proto.VoteAssetContract
	(*VoteWitnessContract)(nil),            // 12: TW.Tron.Proto.VoteWitnessContract
	(*WithdrawBalanceContract)(nil),        // 13: TW.Tron.Proto.WithdrawBalanceContract
	(*TriggerSmartContract)(nil),           // 14: TW.Tron.Proto.TriggerSmartContract
	(*BlockHeader)(nil),                    // 15: TW.Tron.Proto.BlockHeader
	(*Transaction)(nil),                    // 16: TW.Tron.Proto.Transaction
	(*SigningInput)(nil),                   // 17: TW.Tron.Proto.SigningInput
	(*SigningOutput)(nil),                  // 18: TW.Tron.Proto.SigningOutput
	(*VoteWitnessContract_Vote)(nil),       // 19: TW.Tron.Proto.VoteWitnessContract.Vote
	(common.SigningError)(0),               // 20: TW.Common.Proto.SigningError
}
var file_Tron_proto_depIdxs = []int32{
	19, // 0: TW.Tron.Proto.VoteWitnessContract.votes:type_name -> TW.Tron.Proto.VoteWitnessContract.Vote
	15, // 1: TW.Tron.Proto.Transaction.block_header:type_name -> TW.Tron.Proto.BlockHeader
	0,  // 2: TW.Tron.Proto.Transaction.transfer:type_name -> TW.Tron.Proto.TransferContract
	1,  // 3: TW.Tron.Proto.Transaction.transfer_asset:type_name -> TW.Tron.Proto.TransferAssetContract
	3,  // 4: TW.Tron.Proto.Transaction.freeze_balance:type_name -> TW.Tron.Proto.FreezeBalanceContract
	9,  // 5: TW.Tron.Proto.Transaction.unfreeze_balance:type_name -> TW.Tron.Proto.UnfreezeBalanceContract
	10, // 6: TW.Tron.Proto.Transaction.unfreeze_asset:type_name -> TW.Tron.Proto.UnfreezeAssetContract
	13, // 7: TW.Tron.Proto.Transaction.withdraw_balance:type_name -> TW.Tron.Proto.WithdrawBalanceContract
	11, // 8: TW.Tron.Proto.Transaction.vote_asset:type_name -> TW.Tron.Proto.VoteAssetContract
	12, // 9: TW.Tron.Proto.Transaction.vote_witness:type_name -> TW.Tron.Proto.VoteWitnessContract
	14, // 10: TW.Tron.Proto.Transaction.trigger_smart_contract:type_name -> TW.Tron.Proto.TriggerSmartContract
	2,  // 11: TW.Tron.Proto.Transaction.transfer_trc20_contract:type_name -> TW.Tron.Proto.TransferTRC20Contract
	4,  // 12: TW.Tron.Proto.Transaction.freeze_balance_v2:type_name -> TW.Tron.Proto.FreezeBalanceV2Contract
	5,  // 13: TW.Tron.Proto.Transaction.unfreeze_balance_v2:type_name -> TW.Tron.Proto.UnfreezeBalanceV2Contract
	6,  // 14: TW.Tron.Proto.Transaction.withdraw_expire_unfreeze:type_name -> TW.Tron.Proto.WithdrawExpireUnfreezeContract
	7,  // 15: TW.Tron.Proto.Transaction.delegate_resource:type_name -> TW.Tron.Proto.DelegateResourceContract
	8,  // 16: TW.Tron.Proto.Transaction.undelegate_resource:type_name -> TW.Tron.Proto.UnDelegateResourceContract
	16, // 17: TW.Tron.Proto.SigningInput.transaction:type_name -> TW.Tron.Proto.Transaction
	20, // 18: TW.Tron.Proto.SigningOutput.error:type_name -> TW.Common.Proto.SigningError
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_Tron_proto_init() }
func file_Tron_proto_init() {
	if File_Tron_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Tron_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferAssetContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferTRC20Contract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreezeBalanceContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreezeBalanceV2Contract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnfreezeBalanceV2Contract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawExpireUnfreezeContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegateResourceContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnDelegateResourceContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnfreezeBalanceContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnfreezeAssetContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteAssetContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteWitnessContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawBalanceContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerSmartContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tron_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteWitnessContract_Vote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_Tron_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*Transaction_Transfer)(nil),
		(*Transaction_TransferAsset)(nil),
		(*Transaction_FreezeBalance)(nil),
		(*Transaction_UnfreezeBalance)(nil),
		(*Transaction_UnfreezeAsset)(nil),
		(*Transaction_WithdrawBalance)(nil),
		(*Transaction_VoteAsset)(nil),
		(*Transaction_VoteWitness)(nil),
		(*Transaction_TriggerSmartContract)(nil),
		(*Transaction_TransferTrc20Contract)(nil),
		(*Transaction_FreezeBalanceV2)(nil),
		(*Transaction_UnfreezeBalanceV2)(nil),
		(*Transaction_WithdrawExpireUnfreeze)(nil),
		(*Transaction_DelegateResource)(nil),
		(*Transaction_UndelegateResource)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Tron_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Tron_proto_goTypes,
		DependencyIndexes: file_Tron_proto_depIdxs,
		MessageInfos:      file_Tron_proto_msgTypes,
	}.Build()
	File_Tron_proto = out.File
	file_Tron_proto_rawDesc = nil
	file_Tron_proto_goTypes = nil
	file_Tron_proto_depIdxs = nil
}
