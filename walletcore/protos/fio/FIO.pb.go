// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: FIO.proto

package fio

import (
	common "github.com/vultisig/vultisigner/walletcore/protos/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A public blockchain address, such as {"BTC", "bc1qvy4074rggkdr2pzw5vpnn62eg0smzlxwp70d7v"}
type PublicAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Coin symbol for the address (a.k.a. tokenCode)
	CoinSymbol string `protobuf:"bytes,1,opt,name=coin_symbol,json=coinSymbol,proto3" json:"coin_symbol,omitempty"`
	// The address
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *PublicAddress) Reset() {
	*x = PublicAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FIO_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicAddress) ProtoMessage() {}

func (x *PublicAddress) ProtoReflect() protoreflect.Message {
	mi := &file_FIO_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicAddress.ProtoReflect.Descriptor instead.
func (*PublicAddress) Descriptor() ([]byte, []int) {
	return file_FIO_proto_rawDescGZIP(), []int{0}
}

func (x *PublicAddress) GetCoinSymbol() string {
	if x != nil {
		return x.CoinSymbol
	}
	return ""
}

func (x *PublicAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Payload content for New Funds requests
type NewFundsContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Public addressed of the payee, on the mentioned blockchain.
	PayeePublicAddress string `protobuf:"bytes,1,opt,name=payee_public_address,json=payeePublicAddress,proto3" json:"payee_public_address,omitempty"`
	// Amount requested (as string)
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// Coin symbol of the amount requested (a.k.a. tokenCode)
	CoinSymbol string `protobuf:"bytes,3,opt,name=coin_symbol,json=coinSymbol,proto3" json:"coin_symbol,omitempty"`
	// Memo free text.  Optional, may be empty.
	Memo string `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo,omitempty"`
	// Hash.  Optional, may be empty.
	Hash string `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	// Attached offline URL.  Optional, may be empty.
	OfflineUrl string `protobuf:"bytes,6,opt,name=offline_url,json=offlineUrl,proto3" json:"offline_url,omitempty"`
}

func (x *NewFundsContent) Reset() {
	*x = NewFundsContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FIO_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewFundsContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewFundsContent) ProtoMessage() {}

func (x *NewFundsContent) ProtoReflect() protoreflect.Message {
	mi := &file_FIO_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewFundsContent.ProtoReflect.Descriptor instead.
func (*NewFundsContent) Descriptor() ([]byte, []int) {
	return file_FIO_proto_rawDescGZIP(), []int{1}
}

func (x *NewFundsContent) GetPayeePublicAddress() string {
	if x != nil {
		return x.PayeePublicAddress
	}
	return ""
}

func (x *NewFundsContent) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *NewFundsContent) GetCoinSymbol() string {
	if x != nil {
		return x.CoinSymbol
	}
	return ""
}

func (x *NewFundsContent) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *NewFundsContent) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *NewFundsContent) GetOfflineUrl() string {
	if x != nil {
		return x.OfflineUrl
	}
	return ""
}

// Different Actions
type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Payload message
	//
	// Types that are assignable to MessageOneof:
	//
	//	*Action_RegisterFioAddressMessage
	//	*Action_AddPubAddressMessage
	//	*Action_TransferMessage
	//	*Action_RenewFioAddressMessage
	//	*Action_NewFundsRequestMessage
	//	*Action_RemovePubAddressMessage
	//	*Action_RemoveAllPubAddressesMessage
	//	*Action_AddBundledTransactionsMessage
	MessageOneof isAction_MessageOneof `protobuf_oneof:"message_oneof"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FIO_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_FIO_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_FIO_proto_rawDescGZIP(), []int{2}
}

func (m *Action) GetMessageOneof() isAction_MessageOneof {
	if m != nil {
		return m.MessageOneof
	}
	return nil
}

func (x *Action) GetRegisterFioAddressMessage() *Action_RegisterFioAddress {
	if x, ok := x.GetMessageOneof().(*Action_RegisterFioAddressMessage); ok {
		return x.RegisterFioAddressMessage
	}
	return nil
}

func (x *Action) GetAddPubAddressMessage() *Action_AddPubAddress {
	if x, ok := x.GetMessageOneof().(*Action_AddPubAddressMessage); ok {
		return x.AddPubAddressMessage
	}
	return nil
}

func (x *Action) GetTransferMessage() *Action_Transfer {
	if x, ok := x.GetMessageOneof().(*Action_TransferMessage); ok {
		return x.TransferMessage
	}
	return nil
}

func (x *Action) GetRenewFioAddressMessage() *Action_RenewFioAddress {
	if x, ok := x.GetMessageOneof().(*Action_RenewFioAddressMessage); ok {
		return x.RenewFioAddressMessage
	}
	return nil
}

func (x *Action) GetNewFundsRequestMessage() *Action_NewFundsRequest {
	if x, ok := x.GetMessageOneof().(*Action_NewFundsRequestMessage); ok {
		return x.NewFundsRequestMessage
	}
	return nil
}

func (x *Action) GetRemovePubAddressMessage() *Action_RemovePubAddress {
	if x, ok := x.GetMessageOneof().(*Action_RemovePubAddressMessage); ok {
		return x.RemovePubAddressMessage
	}
	return nil
}

func (x *Action) GetRemoveAllPubAddressesMessage() *Action_RemoveAllPubAddress {
	if x, ok := x.GetMessageOneof().(*Action_RemoveAllPubAddressesMessage); ok {
		return x.RemoveAllPubAddressesMessage
	}
	return nil
}

func (x *Action) GetAddBundledTransactionsMessage() *Action_AddBundledTransactions {
	if x, ok := x.GetMessageOneof().(*Action_AddBundledTransactionsMessage); ok {
		return x.AddBundledTransactionsMessage
	}
	return nil
}

type isAction_MessageOneof interface {
	isAction_MessageOneof()
}

type Action_RegisterFioAddressMessage struct {
	RegisterFioAddressMessage *Action_RegisterFioAddress `protobuf:"bytes,1,opt,name=register_fio_address_message,json=registerFioAddressMessage,proto3,oneof"`
}

type Action_AddPubAddressMessage struct {
	AddPubAddressMessage *Action_AddPubAddress `protobuf:"bytes,2,opt,name=add_pub_address_message,json=addPubAddressMessage,proto3,oneof"`
}

type Action_TransferMessage struct {
	TransferMessage *Action_Transfer `protobuf:"bytes,3,opt,name=transfer_message,json=transferMessage,proto3,oneof"`
}

type Action_RenewFioAddressMessage struct {
	RenewFioAddressMessage *Action_RenewFioAddress `protobuf:"bytes,4,opt,name=renew_fio_address_message,json=renewFioAddressMessage,proto3,oneof"`
}

type Action_NewFundsRequestMessage struct {
	NewFundsRequestMessage *Action_NewFundsRequest `protobuf:"bytes,5,opt,name=new_funds_request_message,json=newFundsRequestMessage,proto3,oneof"`
}

type Action_RemovePubAddressMessage struct {
	RemovePubAddressMessage *Action_RemovePubAddress `protobuf:"bytes,6,opt,name=remove_pub_address_message,json=removePubAddressMessage,proto3,oneof"`
}

type Action_RemoveAllPubAddressesMessage struct {
	RemoveAllPubAddressesMessage *Action_RemoveAllPubAddress `protobuf:"bytes,7,opt,name=remove_all_pub_addresses_message,json=removeAllPubAddressesMessage,proto3,oneof"`
}

type Action_AddBundledTransactionsMessage struct {
	AddBundledTransactionsMessage *Action_AddBundledTransactions `protobuf:"bytes,8,opt,name=add_bundled_transactions_message,json=addBundledTransactionsMessage,proto3,oneof"`
}

func (*Action_RegisterFioAddressMessage) isAction_MessageOneof() {}

func (*Action_AddPubAddressMessage) isAction_MessageOneof() {}

func (*Action_TransferMessage) isAction_MessageOneof() {}

func (*Action_RenewFioAddressMessage) isAction_MessageOneof() {}

func (*Action_NewFundsRequestMessage) isAction_MessageOneof() {}

func (*Action_RemovePubAddressMessage) isAction_MessageOneof() {}

func (*Action_RemoveAllPubAddressesMessage) isAction_MessageOneof() {}

func (*Action_AddBundledTransactionsMessage) isAction_MessageOneof() {}

// Represents current parameters of the FIO blockchain
type ChainParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Constant chainId (32 bytes), obtained from get_info API
	ChainId []byte `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// The last block number, obtained from get_info API
	HeadBlockNumber uint64 `protobuf:"varint,2,opt,name=head_block_number,json=headBlockNumber,proto3" json:"head_block_number,omitempty"`
	// Block prefix of last block, obtained from get_block API
	RefBlockPrefix uint64 `protobuf:"varint,3,opt,name=ref_block_prefix,json=refBlockPrefix,proto3" json:"ref_block_prefix,omitempty"`
}

func (x *ChainParams) Reset() {
	*x = ChainParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FIO_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainParams) ProtoMessage() {}

func (x *ChainParams) ProtoReflect() protoreflect.Message {
	mi := &file_FIO_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainParams.ProtoReflect.Descriptor instead.
func (*ChainParams) Descriptor() ([]byte, []int) {
	return file_FIO_proto_rawDescGZIP(), []int{3}
}

func (x *ChainParams) GetChainId() []byte {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *ChainParams) GetHeadBlockNumber() uint64 {
	if x != nil {
		return x.HeadBlockNumber
	}
	return 0
}

func (x *ChainParams) GetRefBlockPrefix() uint64 {
	if x != nil {
		return x.RefBlockPrefix
	}
	return 0
}

// Input data necessary to create a signed transaction.
type SigningInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Expiry for this message, in unix time. Can be 0, then it is taken from current time with default expiry
	Expiry uint32 `protobuf:"varint,1,opt,name=expiry,proto3" json:"expiry,omitempty"`
	// Current parameters of the FIO blockchain
	ChainParams *ChainParams `protobuf:"bytes,2,opt,name=chain_params,json=chainParams,proto3" json:"chain_params,omitempty"`
	// The secret private key matching the address, used for signing (32 bytes).
	PrivateKey []byte `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// The FIO name of the originating wallet (project-wide constant)
	Tpid string `protobuf:"bytes,4,opt,name=tpid,proto3" json:"tpid,omitempty"`
	// Context-specific action data
	Action *Action `protobuf:"bytes,5,opt,name=action,proto3" json:"action,omitempty"`
	// FIO address of the owner. Ex.: "FIO6m1fMdTpRkRBnedvYshXCxLFiC5suRU8KDfx8xxtXp2hntxpnf"
	OwnerPublicKey string `protobuf:"bytes,6,opt,name=owner_public_key,json=ownerPublicKey,proto3" json:"owner_public_key,omitempty"`
}

func (x *SigningInput) Reset() {
	*x = SigningInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FIO_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningInput) ProtoMessage() {}

func (x *SigningInput) ProtoReflect() protoreflect.Message {
	mi := &file_FIO_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningInput.ProtoReflect.Descriptor instead.
func (*SigningInput) Descriptor() ([]byte, []int) {
	return file_FIO_proto_rawDescGZIP(), []int{4}
}

func (x *SigningInput) GetExpiry() uint32 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

func (x *SigningInput) GetChainParams() *ChainParams {
	if x != nil {
		return x.ChainParams
	}
	return nil
}

func (x *SigningInput) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *SigningInput) GetTpid() string {
	if x != nil {
		return x.Tpid
	}
	return ""
}

func (x *SigningInput) GetAction() *Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *SigningInput) GetOwnerPublicKey() string {
	if x != nil {
		return x.OwnerPublicKey
	}
	return ""
}

// Result containing the signed and encoded transaction.
type SigningOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Signed transaction in JSON
	Json string `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
	// Optional error
	Error common.SigningError `protobuf:"varint,2,opt,name=error,proto3,enum=TW.Common.Proto.SigningError" json:"error,omitempty"`
	// error code description
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Performed action name, ex. "addaddress", "remaddress", "trnsfiopubky" etc.
	ActionName string `protobuf:"bytes,4,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
}

func (x *SigningOutput) Reset() {
	*x = SigningOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FIO_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningOutput) ProtoMessage() {}

func (x *SigningOutput) ProtoReflect() protoreflect.Message {
	mi := &file_FIO_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningOutput.ProtoReflect.Descriptor instead.
func (*SigningOutput) Descriptor() ([]byte, []int) {
	return file_FIO_proto_rawDescGZIP(), []int{5}
}

func (x *SigningOutput) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

func (x *SigningOutput) GetError() common.SigningError {
	if x != nil {
		return x.Error
	}
	return common.SigningError(0)
}

func (x *SigningOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SigningOutput) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

// Action for registering a FIO name; register_fio_address
type Action_RegisterFioAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The FIO name to be registered. Ex.: "alice@trust"
	FioAddress string `protobuf:"bytes,1,opt,name=fio_address,json=fioAddress,proto3" json:"fio_address,omitempty"`
	// FIO address of the owner. Ex.: "FIO6m1fMdTpRkRBnedvYshXCxLFiC5suRU8KDfx8xxtXp2hntxpnf"
	OwnerFioPublicKey string `protobuf:"bytes,2,opt,name=owner_fio_public_key,json=ownerFioPublicKey,proto3" json:"owner_fio_public_key,omitempty"`
	// Max fee to spend, can be obtained using get_fee API.
	Fee uint64 `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *Action_RegisterFioAddress) Reset() {
	*x = Action_RegisterFioAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FIO_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_RegisterFioAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_RegisterFioAddress) ProtoMessage() {}

func (x *Action_RegisterFioAddress) ProtoReflect() protoreflect.Message {
	mi := &file_FIO_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_RegisterFioAddress.ProtoReflect.Descriptor instead.
func (*Action_RegisterFioAddress) Descriptor() ([]byte, []int) {
	return file_FIO_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Action_RegisterFioAddress) GetFioAddress() string {
	if x != nil {
		return x.FioAddress
	}
	return ""
}

func (x *Action_RegisterFioAddress) GetOwnerFioPublicKey() string {
	if x != nil {
		return x.OwnerFioPublicKey
	}
	return ""
}

func (x *Action_RegisterFioAddress) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

// Acion for adding public chain addresses to a FIO name; add_pub_address
// Note: actor is not needed, computed from private key
type Action_AddPubAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The FIO name already registered to the owner. Ex.: "alice@trust"
	FioAddress string `protobuf:"bytes,1,opt,name=fio_address,json=fioAddress,proto3" json:"fio_address,omitempty"`
	// List of public addresses to be registered, ex. {{"BTC", "bc1qv...7v"},{"BNB", "bnb1ts3...9s"}}
	PublicAddresses []*PublicAddress `protobuf:"bytes,2,rep,name=public_addresses,json=publicAddresses,proto3" json:"public_addresses,omitempty"`
	// Max fee to spend, can be obtained using get_fee API.
	Fee uint64 `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *Action_AddPubAddress) Reset() {
	*x = Action_AddPubAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FIO_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_AddPubAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_AddPubAddress) ProtoMessage() {}

func (x *Action_AddPubAddress) ProtoReflect() protoreflect.Message {
	mi := &file_FIO_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_AddPubAddress.ProtoReflect.Descriptor instead.
func (*Action_AddPubAddress) Descriptor() ([]byte, []int) {
	return file_FIO_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Action_AddPubAddress) GetFioAddress() string {
	if x != nil {
		return x.FioAddress
	}
	return ""
}

func (x *Action_AddPubAddress) GetPublicAddresses() []*PublicAddress {
	if x != nil {
		return x.PublicAddresses
	}
	return nil
}

func (x *Action_AddPubAddress) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

// Action for removing public chain addresses from a FIO name; remove_pub_address
// Note: actor is not needed, computed from private key
type Action_RemovePubAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The FIO name already registered to the owner. Ex.: "alice@trust"
	FioAddress string `protobuf:"bytes,1,opt,name=fio_address,json=fioAddress,proto3" json:"fio_address,omitempty"`
	// List of public addresses to be unregistered, ex. {{"BTC", "bc1qv...7v"},{"BNB", "bnb1ts3...9s"}}
	PublicAddresses []*PublicAddress `protobuf:"bytes,2,rep,name=public_addresses,json=publicAddresses,proto3" json:"public_addresses,omitempty"`
	// Max fee to spend, can be obtained using get_fee API.
	Fee uint64 `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *Action_RemovePubAddress) Reset() {
	*x = Action_RemovePubAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FIO_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_RemovePubAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_RemovePubAddress) ProtoMessage() {}

func (x *Action_RemovePubAddress) ProtoReflect() protoreflect.Message {
	mi := &file_FIO_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_RemovePubAddress.ProtoReflect.Descriptor instead.
func (*Action_RemovePubAddress) Descriptor() ([]byte, []int) {
	return file_FIO_proto_rawDescGZIP(), []int{2, 2}
}

func (x *Action_RemovePubAddress) GetFioAddress() string {
	if x != nil {
		return x.FioAddress
	}
	return ""
}

func (x *Action_RemovePubAddress) GetPublicAddresses() []*PublicAddress {
	if x != nil {
		return x.PublicAddresses
	}
	return nil
}

func (x *Action_RemovePubAddress) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

// Action for removing public chain addresses from a FIO name; remove_pub_address
// Note: actor is not needed, computed from private key
type Action_RemoveAllPubAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The FIO name already registered to the owner. Ex.: "alice@trust"
	FioAddress string `protobuf:"bytes,1,opt,name=fio_address,json=fioAddress,proto3" json:"fio_address,omitempty"`
	// Max fee to spend, can be obtained using get_fee API.
	Fee uint64 `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *Action_RemoveAllPubAddress) Reset() {
	*x = Action_RemoveAllPubAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FIO_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_RemoveAllPubAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_RemoveAllPubAddress) ProtoMessage() {}

func (x *Action_RemoveAllPubAddress) ProtoReflect() protoreflect.Message {
	mi := &file_FIO_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_RemoveAllPubAddress.ProtoReflect.Descriptor instead.
func (*Action_RemoveAllPubAddress) Descriptor() ([]byte, []int) {
	return file_FIO_proto_rawDescGZIP(), []int{2, 3}
}

func (x *Action_RemoveAllPubAddress) GetFioAddress() string {
	if x != nil {
		return x.FioAddress
	}
	return ""
}

func (x *Action_RemoveAllPubAddress) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

// Action for transferring FIO coins; transfer_tokens_pub_key
// Note: actor is not needed, computed from private key
type Action_Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// FIO address of the payee. Ex.: "FIO6m1fMdTpRkRBnedvYshXCxLFiC5suRU8KDfx8xxtXp2hntxpnf"
	PayeePublicKey string `protobuf:"bytes,1,opt,name=payee_public_key,json=payeePublicKey,proto3" json:"payee_public_key,omitempty"`
	// Amount of FIO coins to be transferred.
	Amount uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// Max fee to spend, can be obtained using get_fee API.
	Fee uint64 `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *Action_Transfer) Reset() {
	*x = Action_Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FIO_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_Transfer) ProtoMessage() {}

func (x *Action_Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_FIO_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_Transfer.ProtoReflect.Descriptor instead.
func (*Action_Transfer) Descriptor() ([]byte, []int) {
	return file_FIO_proto_rawDescGZIP(), []int{2, 4}
}

func (x *Action_Transfer) GetPayeePublicKey() string {
	if x != nil {
		return x.PayeePublicKey
	}
	return ""
}

func (x *Action_Transfer) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Action_Transfer) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

// Action for renewing a FIO name; renew_fio_address
// Note: actor is not needed, computed from private key
type Action_RenewFioAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The FIO name to be renewed. Ex.: "alice@trust"
	FioAddress string `protobuf:"bytes,1,opt,name=fio_address,json=fioAddress,proto3" json:"fio_address,omitempty"`
	// FIO address of the owner. Ex.: "FIO6m1fMdTpRkRBnedvYshXCxLFiC5suRU8KDfx8xxtXp2hntxpnf"
	OwnerFioPublicKey string `protobuf:"bytes,2,opt,name=owner_fio_public_key,json=ownerFioPublicKey,proto3" json:"owner_fio_public_key,omitempty"`
	// Max fee to spend, can be obtained using get_fee API.
	Fee uint64 `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *Action_RenewFioAddress) Reset() {
	*x = Action_RenewFioAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FIO_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_RenewFioAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_RenewFioAddress) ProtoMessage() {}

func (x *Action_RenewFioAddress) ProtoReflect() protoreflect.Message {
	mi := &file_FIO_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_RenewFioAddress.ProtoReflect.Descriptor instead.
func (*Action_RenewFioAddress) Descriptor() ([]byte, []int) {
	return file_FIO_proto_rawDescGZIP(), []int{2, 5}
}

func (x *Action_RenewFioAddress) GetFioAddress() string {
	if x != nil {
		return x.FioAddress
	}
	return ""
}

func (x *Action_RenewFioAddress) GetOwnerFioPublicKey() string {
	if x != nil {
		return x.OwnerFioPublicKey
	}
	return ""
}

func (x *Action_RenewFioAddress) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

// Action for creating a new payment request; new_funds_request
// Note: actor is not needed, computed from private key
type Action_NewFundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The FIO name of the requested payer. Ex.: "alice@trust"
	PayerFioName string `protobuf:"bytes,1,opt,name=payer_fio_name,json=payerFioName,proto3" json:"payer_fio_name,omitempty"`
	// The FIO address (not name) of the payer, owner of payee_fio_name.  Ex.: "FIO6m1fMdTpRkRBnedvYshXCxLFiC5suRU8KDfx8xxtXp2hntxpnf"
	PayerFioAddress string `protobuf:"bytes,2,opt,name=payer_fio_address,json=payerFioAddress,proto3" json:"payer_fio_address,omitempty"`
	// Own FIO name.  Ex.: "bob@trust"
	PayeeFioName string `protobuf:"bytes,3,opt,name=payee_fio_name,json=payeeFioName,proto3" json:"payee_fio_name,omitempty"`
	// Payload content of the request
	Content *NewFundsContent `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	// Max fee to spend, can be obtained using get_fee API.
	Fee uint64 `protobuf:"varint,5,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *Action_NewFundsRequest) Reset() {
	*x = Action_NewFundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FIO_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_NewFundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_NewFundsRequest) ProtoMessage() {}

func (x *Action_NewFundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_FIO_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_NewFundsRequest.ProtoReflect.Descriptor instead.
func (*Action_NewFundsRequest) Descriptor() ([]byte, []int) {
	return file_FIO_proto_rawDescGZIP(), []int{2, 6}
}

func (x *Action_NewFundsRequest) GetPayerFioName() string {
	if x != nil {
		return x.PayerFioName
	}
	return ""
}

func (x *Action_NewFundsRequest) GetPayerFioAddress() string {
	if x != nil {
		return x.PayerFioAddress
	}
	return ""
}

func (x *Action_NewFundsRequest) GetPayeeFioName() string {
	if x != nil {
		return x.PayeeFioName
	}
	return ""
}

func (x *Action_NewFundsRequest) GetContent() *NewFundsContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Action_NewFundsRequest) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

// Action for adding `100 * bundle_sets` bundled transactions to the supplied FIO Handle. When bundles are purchased one or more sets of bundled transactions are added to the existing count.
type Action_AddBundledTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The FIO name already registered to the owner. Ex.: "alice@trust"
	FioAddress string `protobuf:"bytes,1,opt,name=fio_address,json=fioAddress,proto3" json:"fio_address,omitempty"`
	// Number of bundled sets. One set is 100 bundled transactions.
	BundleSets uint64 `protobuf:"varint,2,opt,name=bundle_sets,json=bundleSets,proto3" json:"bundle_sets,omitempty"`
	// Max fee to spend, can be obtained using get_fee API.
	Fee uint64 `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *Action_AddBundledTransactions) Reset() {
	*x = Action_AddBundledTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FIO_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_AddBundledTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_AddBundledTransactions) ProtoMessage() {}

func (x *Action_AddBundledTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_FIO_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_AddBundledTransactions.ProtoReflect.Descriptor instead.
func (*Action_AddBundledTransactions) Descriptor() ([]byte, []int) {
	return file_FIO_proto_rawDescGZIP(), []int{2, 7}
}

func (x *Action_AddBundledTransactions) GetFioAddress() string {
	if x != nil {
		return x.FioAddress
	}
	return ""
}

func (x *Action_AddBundledTransactions) GetBundleSets() uint64 {
	if x != nil {
		return x.BundleSets
	}
	return 0
}

func (x *Action_AddBundledTransactions) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

var File_FIO_proto protoreflect.FileDescriptor

var file_FIO_proto_rawDesc = []byte{
	0x0a, 0x09, 0x46, 0x49, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x54, 0x57, 0x2e,
	0x46, 0x49, 0x4f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e,
	0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x69, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xc5, 0x01, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x46, 0x75, 0x6e, 0x64, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x61, 0x79, 0x65, 0x65,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x79, 0x65, 0x65, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xc3, 0x0e, 0x0a, 0x06,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6a, 0x0a, 0x1c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x66, 0x69, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x54,
	0x57, 0x2e, 0x46, 0x49, 0x4f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x69, 0x6f, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x19, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x46, 0x69, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x5b, 0x0a, 0x17, 0x61, 0x64, 0x64, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x54, 0x57, 0x2e, 0x46, 0x49, 0x4f, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x75, 0x62,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x14, 0x61, 0x64, 0x64, 0x50, 0x75,
	0x62, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x4a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x54, 0x57, 0x2e, 0x46,
	0x49, 0x4f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x61, 0x0a, 0x19, 0x72,
	0x65, 0x6e, 0x65, 0x77, 0x5f, 0x66, 0x69, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x54, 0x57, 0x2e, 0x46, 0x49, 0x4f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x46, 0x69, 0x6f, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x16, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x46, 0x69, 0x6f,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x61,
	0x0a, 0x19, 0x6e, 0x65, 0x77, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x54, 0x57, 0x2e, 0x46, 0x49, 0x4f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x77, 0x46, 0x75, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x6e, 0x65, 0x77, 0x46, 0x75,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x64, 0x0a, 0x1a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x54, 0x57, 0x2e, 0x46, 0x49, 0x4f, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x50, 0x75, 0x62, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x17,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75, 0x62, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x72, 0x0a, 0x20, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x54, 0x57, 0x2e, 0x46, 0x49, 0x4f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6c,
	0x6c, 0x50, 0x75, 0x62, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x1c, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x76, 0x0a, 0x20, 0x61,
	0x64, 0x64, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x54, 0x57, 0x2e, 0x46, 0x49, 0x4f, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x48, 0x00, 0x52, 0x1d, 0x61, 0x64, 0x64, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x78, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46,
	0x69, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6f,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x69, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6f, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x46,
	0x69, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x1a, 0x8a, 0x01,
	0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50, 0x75, 0x62, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x46, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x57, 0x2e,
	0x46, 0x49, 0x4f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x1a, 0x8d, 0x01, 0x0a, 0x10, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75, 0x62, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x46, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x57, 0x2e,
	0x46, 0x49, 0x4f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x1a, 0x48, 0x0a, 0x13, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x66, 0x65, 0x65, 0x1a, 0x5e, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x12, 0x28, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x65, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x65,
	0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x66, 0x65, 0x65, 0x1a, 0x75, 0x0a, 0x0f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x46, 0x69, 0x6f,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6f, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69,
	0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x66, 0x69, 0x6f, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x46, 0x69, 0x6f,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x1a, 0xd4, 0x01, 0x0a, 0x0f,
	0x4e, 0x65, 0x77, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6f, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69,
	0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x66,
	0x69, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x65, 0x65, 0x5f, 0x66, 0x69, 0x6f, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x65,
	0x46, 0x69, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x54, 0x57, 0x2e, 0x46, 0x49,
	0x4f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x46, 0x75, 0x6e, 0x64, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66,
	0x65, 0x65, 0x1a, 0x6c, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x69, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x69, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65,
	0x42, 0x0f, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x22, 0x7e, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x68,
	0x65, 0x61, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x68, 0x65, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x22, 0xf1, 0x01, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x3c, 0x0a, 0x0c, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x54, 0x57, 0x2e, 0x46, 0x49, 0x4f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x70, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x70, 0x69, 0x64, 0x12, 0x2c, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x54, 0x57, 0x2e, 0x46, 0x49, 0x4f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x9e, 0x01, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x54, 0x57, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6a, 0x6e, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_FIO_proto_rawDescOnce sync.Once
	file_FIO_proto_rawDescData = file_FIO_proto_rawDesc
)

func file_FIO_proto_rawDescGZIP() []byte {
	file_FIO_proto_rawDescOnce.Do(func() {
		file_FIO_proto_rawDescData = protoimpl.X.CompressGZIP(file_FIO_proto_rawDescData)
	})
	return file_FIO_proto_rawDescData
}

var file_FIO_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_FIO_proto_goTypes = []interface{}{
	(*PublicAddress)(nil),                 // 0: TW.FIO.Proto.PublicAddress
	(*NewFundsContent)(nil),               // 1: TW.FIO.Proto.NewFundsContent
	(*Action)(nil),                        // 2: TW.FIO.Proto.Action
	(*ChainParams)(nil),                   // 3: TW.FIO.Proto.ChainParams
	(*SigningInput)(nil),                  // 4: TW.FIO.Proto.SigningInput
	(*SigningOutput)(nil),                 // 5: TW.FIO.Proto.SigningOutput
	(*Action_RegisterFioAddress)(nil),     // 6: TW.FIO.Proto.Action.RegisterFioAddress
	(*Action_AddPubAddress)(nil),          // 7: TW.FIO.Proto.Action.AddPubAddress
	(*Action_RemovePubAddress)(nil),       // 8: TW.FIO.Proto.Action.RemovePubAddress
	(*Action_RemoveAllPubAddress)(nil),    // 9: TW.FIO.Proto.Action.RemoveAllPubAddress
	(*Action_Transfer)(nil),               // 10: TW.FIO.Proto.Action.Transfer
	(*Action_RenewFioAddress)(nil),        // 11: TW.FIO.Proto.Action.RenewFioAddress
	(*Action_NewFundsRequest)(nil),        // 12: TW.FIO.Proto.Action.NewFundsRequest
	(*Action_AddBundledTransactions)(nil), // 13: TW.FIO.Proto.Action.AddBundledTransactions
	(common.SigningError)(0),              // 14: TW.Common.Proto.SigningError
}
var file_FIO_proto_depIdxs = []int32{
	6,  // 0: TW.FIO.Proto.Action.register_fio_address_message:type_name -> TW.FIO.Proto.Action.RegisterFioAddress
	7,  // 1: TW.FIO.Proto.Action.add_pub_address_message:type_name -> TW.FIO.Proto.Action.AddPubAddress
	10, // 2: TW.FIO.Proto.Action.transfer_message:type_name -> TW.FIO.Proto.Action.Transfer
	11, // 3: TW.FIO.Proto.Action.renew_fio_address_message:type_name -> TW.FIO.Proto.Action.RenewFioAddress
	12, // 4: TW.FIO.Proto.Action.new_funds_request_message:type_name -> TW.FIO.Proto.Action.NewFundsRequest
	8,  // 5: TW.FIO.Proto.Action.remove_pub_address_message:type_name -> TW.FIO.Proto.Action.RemovePubAddress
	9,  // 6: TW.FIO.Proto.Action.remove_all_pub_addresses_message:type_name -> TW.FIO.Proto.Action.RemoveAllPubAddress
	13, // 7: TW.FIO.Proto.Action.add_bundled_transactions_message:type_name -> TW.FIO.Proto.Action.AddBundledTransactions
	3,  // 8: TW.FIO.Proto.SigningInput.chain_params:type_name -> TW.FIO.Proto.ChainParams
	2,  // 9: TW.FIO.Proto.SigningInput.action:type_name -> TW.FIO.Proto.Action
	14, // 10: TW.FIO.Proto.SigningOutput.error:type_name -> TW.Common.Proto.SigningError
	0,  // 11: TW.FIO.Proto.Action.AddPubAddress.public_addresses:type_name -> TW.FIO.Proto.PublicAddress
	0,  // 12: TW.FIO.Proto.Action.RemovePubAddress.public_addresses:type_name -> TW.FIO.Proto.PublicAddress
	1,  // 13: TW.FIO.Proto.Action.NewFundsRequest.content:type_name -> TW.FIO.Proto.NewFundsContent
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_FIO_proto_init() }
func file_FIO_proto_init() {
	if File_FIO_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_FIO_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FIO_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewFundsContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FIO_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FIO_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FIO_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FIO_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FIO_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_RegisterFioAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FIO_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_AddPubAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FIO_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_RemovePubAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FIO_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_RemoveAllPubAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FIO_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FIO_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_RenewFioAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FIO_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_NewFundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FIO_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_AddBundledTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_FIO_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Action_RegisterFioAddressMessage)(nil),
		(*Action_AddPubAddressMessage)(nil),
		(*Action_TransferMessage)(nil),
		(*Action_RenewFioAddressMessage)(nil),
		(*Action_NewFundsRequestMessage)(nil),
		(*Action_RemovePubAddressMessage)(nil),
		(*Action_RemoveAllPubAddressesMessage)(nil),
		(*Action_AddBundledTransactionsMessage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_FIO_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_FIO_proto_goTypes,
		DependencyIndexes: file_FIO_proto_depIdxs,
		MessageInfos:      file_FIO_proto_msgTypes,
	}.Build()
	File_FIO_proto = out.File
	file_FIO_proto_rawDesc = nil
	file_FIO_proto_goTypes = nil
	file_FIO_proto_depIdxs = nil
}
